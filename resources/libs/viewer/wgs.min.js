var WGS=function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={exports:{},id:d,loaded:!1};return a[d].call(e.exports,e,e.exports,b),e.loaded=!0,e.exports}var c={};return b.m=a,b.c=c,b.p="",b(0)}([function(a,b,c){var d=function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])};a.exports={VERSION:"0.0.0",BackgroundShader:c(1),BasicShader:c(3),BlendShader:c(4),CelShader:c(5),CopyShader:c(6),FXAAShader:c(7),SAOBlurShader:c(8),SAOShader:c(9),NormalsShader:c(10),LineShader:c(11),ShaderPass:c(12),GaussianPass:c(14),GroundReflection:c(15),WebGLShader:c(16),PhongShader:c(17),VBIntersector:c(19),GeometryList:c(20),RenderBatch:c(22),InstanceBufferBuilder:c(23),WebGLRenderer:c(26),ModelIteratorLinear:c(31),FragmentListConsolidation:c(33),ConsolidationIterator:c(35),ModelIteratorBVH:c(36),BufferGeometry:c(25),Consolidation:c(24),RenderScene:c(37),SortedList:c(39),RenderModel:c(40),MaterialConverter:c(43)},d(a.exports,c(21)),d(a.exports,c(2)),d(a.exports,c(44)),d(a.exports,c(45)),d(a.exports,c(46)),d(a.exports,c(13)),d(a.exports,c(30)),d(a.exports,c(27)),d(a.exports,c(18)),d(a.exports,c(29)),d(a.exports,c(28)),d(a.exports,c(38)),d(a.exports,c(34)),d(a.exports,c(42)),d(a.exports,c(41)),d(a.exports,c(47)),d(a.exports,c(48)),d(a.exports,c(49))},function(a,b,c){var d=c(2),e={uniforms:{color1:{type:"v3",value:new THREE.Vector3(41/255,76/255,120/255)},color2:{type:"v3",value:new THREE.Vector3(1/255,2/255,3/255)},envMap:{type:"t",value:null},envRotationSin:{type:"f",value:0},envRotationCos:{type:"f",value:1},exposureBias:{type:"f",value:1},envMapExposure:{type:"f",value:1},uCamDir:{type:"v3",value:new THREE.Vector3},uCamUp:{type:"v3",value:new THREE.Vector3},uResolution:{type:"v2",value:new THREE.Vector2(600,400)},uHalfFovTan:{type:"f",value:.5},envMapBackground:{type:"i",value:0}},vertexShader:["uniform vec3 color1;","uniform vec3 color2;","varying vec2 vUv;","varying vec3 vColor;","void main() {","if (uv.y == 0.0)","vColor = color2;","else","vColor = color1;","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec3 vColor;","varying vec2 vUv;","uniform samplerCube envMap;","uniform vec3 uCamDir;","uniform vec3 uCamUp;","uniform vec2 uResolution;","uniform float uHalfFovTan;","uniform bool envMapBackground;",d.EnvSamplingShaderChunk,"const int bloomRange = 4;",d.OrderedDitheringShaderChunk,"uniform float envMapExposure;","#if TONEMAP_OUTPUT > 0","uniform float exposureBias;",d.TonemapShaderChunk,"#endif","vec3 rayDir(in vec2 vUv) {","vec3 A = (uResolution.x/uResolution.y)*normalize(cross(uCamDir,uCamUp)) * (uHalfFovTan * 2.0);","vec3 B = normalize(uCamUp) * (uHalfFovTan * 2.0);","vec3 C = normalize(uCamDir);","vec3 ray = normalize( C + (2.0*vUv.x-1.0)*A + (2.0*vUv.y-1.0)*B );","return ray;","}","vec3 getColor(in vec3 rd) {","return RGBMDecode(textureCube(envMap, adjustLookupVector(rd)), envMapExposure);","}","void main() {","vec3 rd = rayDir(vUv);","vec3 outColor;","if (envMapBackground) {","outColor = getColor(rd);","#if TONEMAP_OUTPUT == 1","outColor = toneMapCanonOGS_WithGamma_WithColorPerserving(exposureBias * outColor);","#elif TONEMAP_OUTPUT == 2","outColor = toneMapCanonFilmic_WithGamma(exposureBias * outColor);","#endif","}","else {","outColor = vColor;","}","gl_FragColor = vec4(orderedDithering(outColor), 1.0);","}"].join("\n")};a.exports=e},function(a,b){var c=["vec4 packDepth( const in float depth ) {","vec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;","enc = fract(enc);","enc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);","return enc;","}","float unpackDepth( const in vec4 rgba_depth ) {","return dot( rgba_depth, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/160581375.0) );","}"].join("\n"),d=["float luminance_post(vec3 rgb) {","return dot(rgb, vec3(0.299, 0.587, 0.114));","}","float luminance_pre(vec3 rgb) {","return dot(rgb, vec3(0.212671, 0.715160, 0.072169));","}","vec3 xyz2rgb(vec3 xyz) {","vec3 R = vec3( 3.240479, -1.537150, -0.498535);","vec3 G = vec3(-0.969256,  1.875992,  0.041556);","vec3 B = vec3( 0.055648, -0.204043,  1.057311);","vec3 rgb;","rgb.b = dot(xyz, B);","rgb.g = dot(xyz, G);","rgb.r = dot(xyz, R);","return rgb;","}","vec3 rgb2xyz(vec3 rgb) {","vec3 X = vec3(0.412453, 0.35758, 0.180423);","vec3 Y = vec3(0.212671, 0.71516, 0.0721688);","vec3 Z = vec3(0.0193338, 0.119194, 0.950227);","vec3 xyz;","xyz.x = dot(rgb, X);","xyz.y = dot(rgb, Y);","xyz.z = dot(rgb, Z);","return xyz;","}","vec3 xyz2xyY(vec3 xyz) {","float sum = xyz.x + xyz.y + xyz.z;","sum = 1.0 / sum;","vec3 xyY;","xyY.z = xyz.y;","xyY.x = xyz.x * sum;","xyY.y = xyz.y * sum;","return xyY;","}","vec3 xyY2xyz(vec3 xyY) {","float x = xyY.x;","float y = xyY.y;","float Y = xyY.z;","vec3 xyz;","xyz.y = Y;","xyz.x = x * (Y / y);","xyz.z = (1.0 - x - y) * (Y / y);","return xyz;","}","float toneMapCanon_T(float x)","{","float xpow = pow(x, 1.60525727);","float tmp = ((1.05542877*4.68037409)*xpow) / (4.68037409*xpow + 1.0);","return clamp(tmp, 0.0, 1.0);","}","const float Shift = 1.0 / 0.18;","float toneMapCanonFilmic_NoGamma(float x) {","x *= Shift;","const float A = 0.2;","const float B = 0.34;","const float C = 0.002;","const float D = 1.68;","const float E = 0.0005;","const float F = 0.252;","const float scale = 1.0/0.833837;","return (((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F) * scale;","}","vec3 toneMapCanonFilmic_WithGamma(vec3 x) {","x *= Shift;","const float A = 0.27;","const float B = 0.29;","const float C = 0.052;","const float D = 0.2;","const float F = 0.18;","const float scale = 1.0/0.897105;","return (((x*(A*x+C*B))/(x*(A*x+B)+D*F))) * scale;","}","vec3 toneMapCanonOGS_WithGamma_WithColorPerserving(vec3 x) {","vec3 outColor = x.rgb;","outColor = min(outColor, vec3(3.0));","float inLum = luminance_pre(outColor);","if (inLum > 0.0) {","float outLum = toneMapCanon_T(inLum);","outColor = outColor * (outLum / inLum);","outColor = clamp(outColor, vec3(0.0), vec3(1.0));","}","float gamma = 1.0/2.2;","outColor = pow(outColor, vec3(gamma));","return outColor;","}"].join("\n"),e=["vec3 orderedDithering(vec3 col) {","const vec4 m0 = vec4( 1.0, 13.0,  4.0, 16.0);","const vec4 m1 = vec4( 9.0,  5.0, 12.0,  8.0);","const vec4 m2 = vec4( 3.0, 15.0,  2.0, 14.0);","const vec4 m3 = vec4(11.0,  7.0, 10.0,  6.0);","int i = int(mod(float(gl_FragCoord.x), 4.0));","int j = int(mod(float(gl_FragCoord.y), 4.0));","vec4 biasRow;","if      (i==0) biasRow = m0;","else if (i==1) biasRow = m1;","else if (i==2) biasRow = m2;","else           biasRow = m3;","float bias;","if      (j==0) bias = biasRow.x;","else if (j==1) bias = biasRow.y;","else if (j==2) bias = biasRow.z;","else           bias = biasRow.w;","return col + bias / 17.0 / 256.0;","}"].join("\n"),f={cutplanes:{type:"v4v",value:[]},hatchParams:{type:"v2",value:new THREE.Vector2(1,10)},hatchTintColor:{type:"c",value:new THREE.Color(16777215)},hatchTintIntensity:{type:"f",value:1}},g=["#if NUM_CUTPLANES > 0","uniform vec4 cutplanes[NUM_CUTPLANES];","void checkCutPlanes(vec3 worldPosition) {","for (int i=0; i<NUM_CUTPLANES; i++) {","if (dot(vec4(worldPosition, 1.0), cutplanes[i]) > 0.0) {","discard;","}","}","}","#endif"].join("\n"),h=["#define kPI 3.14159265358979","vec2 encodeNormal (vec3 n)","{","return (vec2(atan(n.y,n.x)/kPI, n.z)+1.0)*0.5;","}","vec3 decodeNormal (vec2 enc)","{","vec2 ang = enc * 2.0 - 1.0;","vec2 scth = vec2(sin(ang.x * kPI), cos(ang.x * kPI));","vec2 scphi = vec2(sqrt(1.0 - ang.y * ang.y), ang.y);","return vec3(scth.y * scphi.x, scth.x * scphi.x, scphi.y);","}"].join("\n"),i=["#ifdef HATCH_PATTERN","uniform vec2 hatchParams;","uniform vec3 hatchTintColor;","uniform float hatchTintIntensity;","float curveGaussian(float r, float invWidth) {","float amt = clamp(r * invWidth, 0.0, 1.0);","float exponent = amt * 3.5;","return exp(-exponent*exponent);","}","vec4 calculateHatchPattern(vec2 hatchParams, vec2 coord, vec4 fragColor, vec3 hatchTintColor, float hatchTintIntensity ) {","float hatchSlope = hatchParams.x;","float hatchPeriod = hatchParams.y;","if (abs(hatchSlope) <= 1.0) {","float hatchPhase = coord.y - hatchSlope * coord.x;","float dist = abs(mod((hatchPhase), (hatchPeriod)));","if (dist < 1.0) {","fragColor = vec4(0.0,0.0,0.0,1.0);","} else {","fragColor.xyz = mix(fragColor.xyz, hatchTintColor, hatchTintIntensity);","}","} else {","float hatchPhase = - coord.y / hatchSlope + coord.x;","float dist = abs(mod((hatchPhase), (hatchPeriod)));","if (dist < 1.0) {","fragColor = vec4(0.0,0.0,0.0,1.0);","} else {","fragColor.xyz = mix(fragColor.xyz, hatchTintColor, hatchTintIntensity);","}","}","return fragColor;","}","#endif"].join("\n"),j=["uniform float envRotationSin;","uniform float envRotationCos;","vec3 adjustLookupVector(in vec3 lookup) {","return vec3(","envRotationCos * lookup.x - envRotationSin * lookup.z,","lookup.y,","envRotationSin * lookup.x + envRotationCos * lookup.z);","}","vec3 RGBMDecode(in vec4 vRGBM, in float exposure) {","vec3 ret = vRGBM.rgb * (vRGBM.a * 16.0);","ret *= ret;","ret *= exposure;","return ret;","}","vec3 GammaDecode(in vec4 vRGBA, in float exposure) {","return vRGBA.xyz * vRGBA.xyz * exposure;","}","vec3 sampleIrradianceMap(vec3 dirWorld, samplerCube irrMap, float exposure) {","vec4 cubeColor4 = textureCube(irrMap, adjustLookupVector(dirWorld));","#ifdef IRR_GAMMA","vec3 indirectDiffuse = GammaDecode(cubeColor4, exposure);","#elif defined(IRR_RGBM)","vec3 indirectDiffuse = RGBMDecode(cubeColor4, exposure);","#else","vec3 indirectDiffuse = cubeColor4.xyz;","#ifdef GAMMA_INPUT","indirectDiffuse.xyz *= indirectDiffuse.xyz;","#endif","#endif","return indirectDiffuse;","}"].join("\n"),k={dbId:{type:"v3",value:new THREE.Vector3(0,0,0)},modelId:{type:"v3",value:new THREE.Vector3(0,0,0)}},l=["#ifdef USE_VERTEX_ID","attribute vec3 id;","varying   vec3 vId;","#endif"].join("\n"),m=["#ifdef USE_VERTEX_ID","vId = id;","#endif"].join("\n"),n=["#if defined(MRT_NORMALS) || defined(MRT_ID_BUFFER)","varying highp float depth;","#define gl_FragColor gl_FragData[0]","#endif","#if defined(MRT_ID_BUFFER) || defined(ID_COLOR)","#ifdef USE_VERTEX_ID","varying vec3 vId;","#else","uniform vec3 dbId;","#endif","#endif","#if defined(MRT_ID_BUFFER) || defined(MODEL_COLOR)","uniform vec3 modelId;","#endif"].join("\n"),o=["#ifdef USE_VERTEX_ID","vec3 dbId = vId;","#endif","#ifdef MRT_ID_BUFFER","#ifdef MRT_NORMALS","const int index = 2;","#else","const int index = 1;","#endif","#ifndef ENABLE_ID_DISCARD","const float writeId = 1.0;","#endif","gl_FragData[index] = vec4(dbId.rgb, writeId);","#ifdef MODEL_COLOR","gl_FragData[index+1] = vec4(modelId.rgb, writeId);","#endif","#elif defined(ID_COLOR)","#ifdef ENABLE_ID_DISCARD","if (writeId==0.0) {","discard;","}","#endif","gl_FragColor = vec4(dbId.rgb, 1.0);","#elif defined(MODEL_COLOR)","#ifdef ENABLE_ID_DISCARD","if (writeId==0.0) {","discard;","}","#endif","gl_FragColor = vec4(modelId.rgb, 1.0);","#endif"].join("\n"),p=["#ifdef HATCH_PATTERN","gl_FragColor = calculateHatchPattern(hatchParams, gl_FragCoord.xy, gl_FragColor, hatchTintColor, hatchTintIntensity);","#endif","#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)","gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;","#endif","#ifdef MRT_NORMALS","gl_FragData[1] = vec4(geomNormal.x, geomNormal.y, depth, gl_FragColor.a < 1.0 ? 0.0 : 1.0);","#endif",o].join("\n"),q={themingColor:{type:"v4",value:new THREE.Vector4(0,0,0,0)}},r=["uniform vec4 themingColor;"].join("\n"),s=["gl_FragColor.rgb = mix(gl_FragColor.rgb, themingColor.rgb, themingColor.a);"].join("\n"),t=["#ifdef USE_INSTANCING","attribute vec3 instOffset;","attribute vec4 instRotation;","attribute vec3 instScaling;","vec3 applyQuaternion(vec3 p, vec4 q) {","return p + 2.0 * cross(q.xyz, cross(q.xyz, p) + q.w * p);","}","vec3 getInstancePos(vec3 pos) {","return instOffset + applyQuaternion(instScaling * pos, instRotation);","}","vec3 getInstanceNormal(vec3 normal) {","return applyQuaternion(normal/instScaling, instRotation);","}","#else","vec3 getInstancePos(vec3 pos)       { return pos;    }","vec3 getInstanceNormal(vec3 normal) { return normal; }","#endif"].join("\n");a.exports={PackDepthShaderChunk:c,TonemapShaderChunk:d,OrderedDitheringShaderChunk:e,CutPlanesUniforms:f,CutPlanesShaderChunk:g,PackNormalsShaderChunk:h,HatchPatternShaderChunk:i,EnvSamplingShaderChunk:j,IdUniforms:k,IdVertexDeclaration:l,IdVertexShaderChunk:m,IdFragmentDeclaration:n,IdOutputShaderChunk:o,FinalOutputShaderChunk:p,ThemingUniform:q,ThemingFragmentDeclaration:r,ThemingFragmentShaderChunk:s,InstancingVertexDeclaration:t}},function(a,b,c){var d=c(2),e={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap,d.CutPlanesUniforms,d.IdUniforms,d.ThemingUniform]),vertexShader:[d.IdVertexDeclaration,THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"#if NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif","void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,"#if NUM_CUTPLANES > 0","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","#endif",THREE.ShaderChunk.envmap_vertex,d.IdVertexShaderChunk,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"#if NUM_CUTPLANES > 0","varying highp vec3 vWorldPosition;","#endif",d.CutPlanesShaderChunk,d.IdFragmentDeclaration,d.ThemingFragmentDeclaration,"void main() {","#if NUM_CUTPLANES > 0","checkCutPlanes(vWorldPosition);","#endif","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );",d.ThemingFragmentShaderChunk,d.FinalOutputShaderChunk,"}"].join("\n")};THREE.ShaderLib.firefly_basic=e,a.exports=e},function(a,b,c){var d=c(2),e={uniforms:{tDiffuse:{type:"t",value:null},tAO:{type:"t",value:null},useAO:{type:"i",value:0},tOverlay:{type:"t",value:null},useOverlay:{type:"i",value:0},tID:{type:"t",value:null},objID:{type:"i",value:0},objIDv3:{type:"v3",value:new THREE.Vector3(0,0,0)},highlightIntensity:{type:"f",value:1},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)},highlightRange:{type:"i",value:0},objIDStart:{type:"i",value:0},objIDEnd:{type:"i",value:0}},defines:{},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform sampler2D tAO;","uniform int useAO;","uniform sampler2D tOverlay;","uniform int useOverlay;","uniform vec2 resolution;","uniform int objID;","uniform vec3 objIDv3;","uniform sampler2D tID;","uniform float highlightIntensity;","uniform int highlightRange;","uniform int objIDStart;","uniform int objIDEnd;","varying vec2 vUv;",d.TonemapShaderChunk,"vec4 overlayEdgeDetect(vec2 vUv) {","#define IS_SELECTION(C) ( (C).b > (C).r && (C).b > (C).g )","#define CHECK_EDGE_ALPHA(I, J)     { vec4 c = texture2D( tOverlay, vUv+resolution*vec2((I),(J)) ); maxAlpha = max(maxAlpha, c.a); if (c.a > 0.0 && IS_SELECTION(c)) { hasEdge++; selectionPixel = c; } }","#define CHECK_EDGE_SELECTION(I, J) { vec4 c = texture2D( tOverlay, vUv+resolution*vec2((I),(J)) ); maxAlpha = max(maxAlpha, c.a); if (c.a <= 0.0) hasEdge++; }","int hasEdge = 0;","vec4 center = texture2D(tOverlay, vUv);","vec4 selectionPixel = vec4(0.0);","float maxAlpha = 0.0;","bool paintOutline = false;","if (center.a <= 0.0) {","CHECK_EDGE_ALPHA(-1.0,-1.0);","CHECK_EDGE_ALPHA( 0.0,-1.0);","CHECK_EDGE_ALPHA( 1.0,-1.0);","CHECK_EDGE_ALPHA(-1.0, 0.0);","CHECK_EDGE_ALPHA( 1.0, 0.0);","CHECK_EDGE_ALPHA(-1.0, 1.0);","CHECK_EDGE_ALPHA( 0.0, 1.0);","CHECK_EDGE_ALPHA( 1.0, 1.0);","if (hasEdge != 0) {","center = selectionPixel;","paintOutline = true;","}","}","else if (center.a > 0.0 && IS_SELECTION(center)) {","CHECK_EDGE_SELECTION(-1.0,-1.0);","CHECK_EDGE_SELECTION( 0.0,-1.0);","CHECK_EDGE_SELECTION( 1.0,-1.0);","CHECK_EDGE_SELECTION(-1.0, 0.0);","CHECK_EDGE_SELECTION( 1.0, 0.0);","CHECK_EDGE_SELECTION(-1.0, 1.0);","CHECK_EDGE_SELECTION( 0.0, 1.0);","CHECK_EDGE_SELECTION( 1.0, 1.0);","if (hasEdge != 0)","paintOutline = true;","else","center.a = -center.a;","}","if (paintOutline) {","float maxComponent = max(center.r, max(center.g, center.b));","center.rgb /= maxComponent;","center.rgb = sqrt(center.rgb);","center.a = 0.5 + 0.5 * maxAlpha * 0.125 * float(hasEdge);","}","return center;","}","vec4 sampleColor() {","return texture2D( tDiffuse, vUv );","}","float sampleAO() {","return (useAO != 0) ? sqrt(texture2D(tAO, vUv).r) : 1.0;","}","void main() {","vec4 texel = sampleColor();","texel.rgb *= sampleAO();","if (useOverlay != 0) {","vec4 overlay = overlayEdgeDetect(vUv);","if (overlay.a < 0.0) {","overlay.a = -overlay.a;","if (overlay.a >= 0.99) {","overlay.a = 0.75;","texel.rgb = vec3(luminance_post(texel.rgb));","}","}","texel.rgb = mix(texel.rgb, sqrt(overlay.rgb)/*sqrt=gamma*/, overlay.a);","}","if (highlightRange == 0) {","if (objID != 0) {","vec4 idAtPixel = texture2D(tID, vUv);","vec3 idDelta = abs(idAtPixel.rgb - objIDv3.rgb);","if (max(max(idDelta.r, idDelta.g), idDelta.b) < 1e-3) {","#ifdef IS_2D","texel.rgb = mix(texel.rgb, vec3(1.0,1.0,0.0), highlightIntensity * 0.25);","#else","texel.rgb += highlightIntensity * 0.2;","#endif","}","}","} else {","vec4 idAtPixel = texture2D(tID, vUv);","int dbId = int(idAtPixel.r * 255.0 + idAtPixel.g * 255.0 * 256.0 + idAtPixel.b * 255.0 * 256.0 * 256.0);","if (dbId >= objIDStart && dbId <= objIDEnd) {","#ifdef IS_2D","texel.rgb = mix(texel.rgb, vec3(1.0,1.0,0.0), highlightIntensity * 0.25);","#else","texel.rgb += highlightIntensity * 0.2;","#endif","}","}","gl_FragColor = texel;","}"].join("\n")};a.exports=e},function(a,b,c){var d=c(2),e={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},tID:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},projInfo:{type:"v4",value:new THREE.Vector4(0,0,0,0)},isOrtho:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#extension GL_OES_standard_derivatives : enable","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","uniform sampler2D tID;","uniform vec2 resolution;","uniform float cameraNear;","uniform float cameraFar;","uniform float isOrtho;","uniform vec4 projInfo;","varying vec2 vUv;","vec4 recoverNZ(vec4 nrmz) {","float z = sqrt(1.0 - dot(nrmz.xy, nrmz.xy));","nrmz.w = -(nrmz.z +cameraNear) / (cameraFar - cameraNear);","nrmz.z = z;","return nrmz;","}",d.TonemapShaderChunk,"vec4 quantize(vec4 c) {","c *= c;","float L = max(c.x, max(c.y, c.z));","c.xyz *= floor(L * 8.0 + 0.5) / (8.0 * L);","c.w = 1.0;","return sqrt(c);","}","vec4 quantizeRGB(vec4 c) {","c *= c;","c.xyz *= floor(c.xyz * 8.0 + 0.5) / 8.0;","c.w = 1.0;","return sqrt(c);","}","vec3 reconstructCSPosition(vec2 S, float z) {","return vec3((S.xy * projInfo.xy + projInfo.zw) * mix(z, -1.0, isOrtho), z);","}","vec3 reconstructCSFaceNormal(vec3 C) {","return normalize(cross(dFdy(C), dFdx(C)));","}","vec3 getPosition(ivec2 ssP, float depth) {","vec3 P;","P = reconstructCSPosition(vec2(ssP) + vec2(0.5), depth);","return P;","}","int isObjectEdge() {","vec4 MM = texture2D(tID, vUv + vec2( 0.0,  0.0));","vec4 LL = texture2D(tID, vUv + vec2(-1.0, -1.0) * resolution);","if (MM != LL) return 1;","vec4 LM = texture2D(tID, vUv + vec2( 0.0, -1.0) * resolution);","if (MM != LM) return 1;","vec4 LR = texture2D(tID, vUv + vec2( 1.0, -1.0) * resolution);","if (MM != LR) return 1;","vec4 ML = texture2D(tID, vUv + vec2(-1.0,  0.0) * resolution);","if (MM != ML) return 1;","vec4 MR = texture2D(tID, vUv + vec2( 1.0,  0.0) * resolution);","if (MM != MR) return 1;","vec4 UL = texture2D(tID, vUv + vec2(-1.0,  1.0) * resolution);","if (MM != UL) return 1;","vec4 UM = texture2D(tID, vUv + vec2( 0.0,  1.0) * resolution);","if (MM != UM) return 1;","vec4 UR = texture2D(tID, vUv + vec2( 1.0,  1.0) * resolution);","if (MM != UR) return 1;","return 0;","}","float normalDiff(vec3 n1, vec3 n2) {","float d = dot(n1.xyz, n2.xyz);","return acos(clamp(d, -1.0, 1.0));","}","const float r = 1.0;","void main() {","vec4 color = texture2D(tDiffuse, vUv);","ivec2 ssC = ivec2(gl_FragCoord.xy);","if (isObjectEdge() == 1) {","gl_FragColor = vec4(0,0,0,1);","return;","}","vec4 MM = texture2D(tDepth, vUv + vec2( 0.0,  0.0));","if (MM.z == 0.0) {","gl_FragColor = quantize(color);","return;","}","vec4 LL = texture2D(tDepth, vUv + vec2(-r, -r) * resolution);","vec4 LM = texture2D(tDepth, vUv + vec2( 0.0, -r) * resolution);","vec4 LR = texture2D(tDepth, vUv + vec2( r, -r) * resolution);","vec4 ML = texture2D(tDepth, vUv + vec2(-r,  0.0) * resolution);","vec4 MR = texture2D(tDepth, vUv + vec2( r,  0.0) * resolution);","vec4 UL = texture2D(tDepth, vUv + vec2(-r, r) * resolution);","vec4 UM = texture2D(tDepth, vUv + vec2( 0.0,  r) * resolution);","vec4 UR = texture2D(tDepth, vUv + vec2( r,  r) * resolution);","vec3 C = getPosition(ssC + ivec2(-1, -1), LL.z);","vec3 LLz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2( 0, -1), LM.z);","vec3 LMz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2( 1, -1), LR.z);","vec3 LRz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2(-1, 0), ML.z);","vec3 MLz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2( 0, 0), MM.z);","vec3 MMz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2( 1, 0), MR.z);","vec3 MRz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2(-1, 1), UL.z);","vec3 ULz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2(0, 1), UM.z);","vec3 UMz = reconstructCSFaceNormal(C);","C = getPosition(ssC + ivec2(1, 1), UR.z);","vec3 URz = reconstructCSFaceNormal(C);","LL = recoverNZ(LL);","LM = recoverNZ(LM);","LR = recoverNZ(LR);","ML = recoverNZ(ML);","MM = recoverNZ(MM);","MR = recoverNZ(MR);","UL = recoverNZ(UL);","UM = recoverNZ(UM);","UR = recoverNZ(UR);","float pLL = normalDiff(LL.xyz, MM.xyz);","float pLM = normalDiff(LM.xyz, MM.xyz);","float pLR = normalDiff(LR.xyz, MM.xyz);","float pML = normalDiff(ML.xyz, MM.xyz);","float pMM = normalDiff(MM.xyz, MM.xyz);","float pMR = normalDiff(MR.xyz, MM.xyz);","float pUL = normalDiff(UL.xyz, MM.xyz);","float pUM = normalDiff(UM.xyz, MM.xyz);","float pUR = normalDiff(UR.xyz, MM.xyz);","float pLLz = normalDiff(LLz.xyz, MMz.xyz);","float pLMz = normalDiff(LMz.xyz, MMz.xyz);","float pLRz = normalDiff(LRz.xyz, MMz.xyz);","float pMLz = normalDiff(MLz.xyz, MMz.xyz);","float pMMz = normalDiff(MMz.xyz, MMz.xyz);","float pMRz = normalDiff(MRz.xyz, MMz.xyz);","float pULz = normalDiff(ULz.xyz, MMz.xyz);","float pUMz = normalDiff(UMz.xyz, MMz.xyz);","float pURz = normalDiff(URz.xyz, MMz.xyz);","float dGx = (dFdx(UL.w) + 2.0 * dFdx(UM.w) + dFdx(UR.w)) - (dFdx(LL.w) + 2.0 * dFdx(LM.w) + dFdx(LR.w)) + (dFdx(UR.w) + 2.0 * dFdx(MR.w) - dFdx(LR.w)) - (dFdx(UL.w) + 2.0 * dFdx(ML.w) - dFdx(LL.w));","float dGy = (dFdy(UL.w) + 2.0 * dFdy(UM.w) + dFdy(UR.w)) - (dFdy(LL.w) + 2.0 * dFdy(LM.w) + dFdy(LR.w)) + (dFdy(UR.w) + 2.0 * dFdy(MR.w) - dFdy(LR.w)) - (dFdy(UL.w) + 2.0 * dFdy(ML.w) - dFdy(LL.w));","float Gn = (abs(pUL - pMM) + 2.0 * abs(pUM - pMM) + abs(pUR - pMM) + 2.0 * abs(pML - pMM) + 2.0 * abs(pMR - pMM) + abs(pLL - pMM) + 2.0 * abs(pLM - pMM) + abs(pLR - pMM));","float Gnz = (abs(pULz - pMMz) + 2.0 * abs(pUMz - pMMz) + abs(pURz - pMMz) + 2.0 * abs(pMLz - pMMz) + 2.0 * abs(pMRz - pMMz) + abs(pLLz - pMMz) + 2.0 * abs(pLMz - pMMz) + abs(pLRz - pMMz));","float G = (abs(UL.w - MM.w) + 2.0 * abs(UM.w - MM.w) + abs(UR.w - MM.w) + 2.0 * abs(ML.w - MM.w) + 2.0 * abs(MR.w - MM.w) + abs(LL.w - MM.w) + 2.0 * abs(LM.w - MM.w) + abs(LR.w - MM.w));","float dd = abs(dFdx(G)) + abs(dFdy(G));","if (dd > 0.004 || abs(Gnz) > 2.2 || abs(Gn) > 2.0)","gl_FragColor = vec4(0.0,0.0,0.0,1.0);","else","gl_FragColor = /*vec4(1.0,1.0,1.0,1.0);*/quantize(color);","}"].join("\n")};a.exports=e},function(a,b){var c={uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:["varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D(tDiffuse, vUv);","}"].join("\n")};a.exports=c},function(a,b){var c={uniforms:{tDiffuse:{type:"t",value:null},uResolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["uniform vec2 uResolution;","varying vec2 vPos;","varying vec4 vPosPos;","void main() {","vPos = uv;","vPosPos.xy = uv + vec2(-0.5, -0.5) * uResolution;","vPosPos.zw = uv + vec2( 0.5,  0.5) * uResolution;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define FXAA_EDGE_SHARPNESS (8.0)","#define FXAA_EDGE_THRESHOLD (0.125)","#define FXAA_EDGE_THRESHOLD_MIN (0.05)","#define FXAA_RCP_FRAME_OPT (0.50)","#define FXAA_RCP_FRAME_OPT2 (2.0)","uniform sampler2D tDiffuse;","uniform highp vec2 uResolution;","varying vec2 vPos;","varying vec4 vPosPos;","float FxaaLuma(vec3 rgb) {","return dot(rgb, vec3(0.299, 0.587, 0.114));","}","void main() {","float lumaNw = FxaaLuma(texture2D(tDiffuse, vPosPos.xy).rgb);","float lumaSw = FxaaLuma(texture2D(tDiffuse, vPosPos.xw).rgb);","float lumaNe = FxaaLuma(texture2D(tDiffuse, vPosPos.zy).rgb) + 1.0/384.0;","float lumaSe = FxaaLuma(texture2D(tDiffuse, vPosPos.zw).rgb);","vec3 rgbM = texture2D(tDiffuse, vPos.xy).rgb;","float lumaM = FxaaLuma(rgbM.rgb);","float lumaMax = max(max(lumaNe, lumaSe), max(lumaNw, lumaSw));","float lumaMin = min(min(lumaNe, lumaSe), min(lumaNw, lumaSw));","float lumaMaxSubMinM = max(lumaMax, lumaM) - min(lumaMin, lumaM);","float lumaMaxScaledClamped = max(FXAA_EDGE_THRESHOLD_MIN, lumaMax * FXAA_EDGE_THRESHOLD);","if (lumaMaxSubMinM < lumaMaxScaledClamped) {","gl_FragColor = vec4(rgbM, 1.0);","return;","}","float dirSwMinusNe = lumaSw - lumaNe;","float dirSeMinusNw = lumaSe - lumaNw;","vec2 dir1 = normalize(vec2(dirSwMinusNe + dirSeMinusNw, dirSwMinusNe - dirSeMinusNw));","vec3 rgbN1 = texture2D(tDiffuse, vPos.xy - dir1 * FXAA_RCP_FRAME_OPT*uResolution).rgb;","vec3 rgbP1 = texture2D(tDiffuse, vPos.xy + dir1 * FXAA_RCP_FRAME_OPT*uResolution).rgb;","float dirAbsMinTimesC = min(abs(dir1.x), abs(dir1.y)) * FXAA_EDGE_SHARPNESS;","vec2 dir2 = clamp(dir1.xy / dirAbsMinTimesC, -2.0, 2.0);","vec3 rgbN2 = texture2D(tDiffuse, vPos.xy - dir2 * FXAA_RCP_FRAME_OPT2*uResolution).rgb;","vec3 rgbP2 = texture2D(tDiffuse, vPos.xy + dir2 * FXAA_RCP_FRAME_OPT2*uResolution).rgb;","vec3 rgbA = rgbN1 + rgbP1;","vec3 rgbB = ((rgbN2 + rgbP2) * 0.25) + (rgbA * 0.25);","float lumaB = FxaaLuma(rgbB);","if ((lumaB < lumaMin) || (lumaB > lumaMax))","gl_FragColor = vec4(rgbA * 0.5, 1.0);","else","gl_FragColor = vec4(rgbB, 1.0);","}"].join("\n")};a.exports=c},function(a,b){var c={uniforms:{tDiffuse:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},resolution:{type:"v2",value:new THREE.Vector2(1/512,1/512)},axis:{type:"v2",value:new THREE.Vector2(1,0)},radius:{type:"f",value:50}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define EDGE_SHARPNESS     (3.0)","#define SCALE               (2)","#define R                   (4)","#define VALUE_TYPE        float","#define VALUE_COMPONENTS   r","#define VALUE_IS_KEY       0","#define KEY_COMPONENTS     gb","#if __VERSION__ >= 330","const float gaussian[R + 1] =","float[](0.153170, 0.144893, 0.122649, 0.092902, 0.062970);","#endif","uniform sampler2D   tDiffuse;","uniform vec2 size;","uniform vec2 resolution;","uniform vec2       axis;","uniform float radius;","#define  result         gl_FragColor.VALUE_COMPONENTS","#define  keyPassThrough gl_FragColor.KEY_COMPONENTS","float unpackKey(vec2 p) {","return p.x * (256.0 / 257.0) + p.y * (1.0 / 257.0);","}","varying vec2 vUv;","void main() {","#   if __VERSION__ < 330","float gaussian[R + 1];","#       if R == 3","gaussian[0] = 0.153170; gaussian[1] = 0.144893; gaussian[2] = 0.122649; gaussian[3] = 0.092902;","#       elif R == 4","gaussian[0] = 0.153170; gaussian[1] = 0.144893; gaussian[2] = 0.122649; gaussian[3] = 0.092902; gaussian[4] = 0.062970;","#       elif R == 6","gaussian[0] = 0.111220; gaussian[1] = 0.107798; gaussian[2] = 0.098151; gaussian[3] = 0.083953; gaussian[4] = 0.067458; gaussian[5] = 0.050920; gaussian[6] = 0.036108;","#       endif","#   endif","ivec2 axisi = ivec2(axis);","ivec2 ssC = ivec2(gl_FragCoord.xy);","vec4 temp = texture2D(tDiffuse, vUv);","gl_FragColor.gb = temp.KEY_COMPONENTS;","gl_FragColor.a = temp.a;","VALUE_TYPE sum = temp.VALUE_COMPONENTS;","if (temp.a == 0.0) {","result = sum;","return;","}","float key = unpackKey(keyPassThrough);","float BASE = gaussian[0];","float totalWeight = BASE;","sum *= totalWeight;","float scale = 1.5 / radius;","int r = -4; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[4];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","r = -3; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[3];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","r = -2; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[2];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","r=-1; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[1];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","r = 1; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[1];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","r = 2; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[2];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","r = 3; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[3];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","r = 4; {","vec2 ssUV = vec2(ssC + axisi * (r * SCALE))*resolution;","temp = texture2D(tDiffuse, ssUV);","float      tapKey = unpackKey(temp.KEY_COMPONENTS);","VALUE_TYPE value  = temp.VALUE_COMPONENTS;","float weight = 0.3 + gaussian[4];","float dz = tapKey - key;","weight *= max(0.0, 1.0 - (EDGE_SHARPNESS * 2000.0) * abs(dz) * scale);","sum += value * weight;","totalWeight += weight;","}","const float epsilon = 0.0001;","result = sum / (totalWeight + epsilon);","}"].join("\n")
};a.exports=c},function(a,b,c){var d=c(2),e={uniforms:{tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},resolution:{type:"v2",value:new THREE.Vector2(1/512,1/512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},radius:{type:"f",value:10},bias:{type:"f",value:.1},projScale:{type:"f",value:500},projInfo:{type:"v4",value:new THREE.Vector4(0,0,0,0)},intensity:{type:"f",value:.4},isOrtho:{type:"f",value:1},tDepth_mip1:{type:"t",value:null},tDepth_mip2:{type:"t",value:null},tDepth_mip3:{type:"t",value:null},tDepth_mip4:{type:"t",value:null},tDepth_mip5:{type:"t",value:null}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define USE_MIPMAP 1","uniform float cameraNear;","uniform float cameraFar;","uniform vec2 size;","uniform vec2 resolution;","uniform float lumInfluence;","varying vec2 vUv;","#define NUM_SAMPLES (17)","#define LOG_MAX_OFFSET (3)","#define MAX_MIP_LEVEL (5)","#define NUM_SPIRAL_TURNS (5)","#define MIN_RADIUS (3.0)","uniform float           projScale;","uniform sampler2D tDepth;","#ifdef USE_MIPMAP","uniform sampler2D tDepth_mip1;","uniform sampler2D tDepth_mip2;","uniform sampler2D tDepth_mip3;","uniform sampler2D tDepth_mip4;","uniform sampler2D tDepth_mip5;","#endif","uniform float radius;","uniform float bias;","uniform float intensity;","uniform float isOrtho;","vec2 tapLocation(int sampleNumber, float spinAngle, out float ssR){","float alpha = float(float(sampleNumber) + 0.5) * (1.0 / float(NUM_SAMPLES));","float angle = alpha * (float(NUM_SPIRAL_TURNS) * 6.28) + spinAngle;","ssR = alpha;","return vec2(cos(angle), sin(angle));","}","float CSZToKey(float z) {","return clamp( (z+cameraNear) / (cameraNear-cameraFar), 0.0, 1.0);","}","void packKey(float key, out vec2 p) {","float temp = floor(key * 256.0);","p.x = temp * (1.0 / 256.0);","p.y = key * 256.0 - temp;","}",d.PackDepthShaderChunk,"float unpackDepthNearFar( const in vec4 rgba_depth ) {","float depth = unpackDepth( rgba_depth );","if (depth == 0.0)","return -cameraFar * 1.0e10;","return depth * (cameraNear - cameraFar) - cameraNear;","}","uniform vec4 projInfo;","vec3 reconstructCSPosition(vec2 S, float z) {","return vec3((S.xy * projInfo.xy + projInfo.zw) * mix(z, -1.0, isOrtho), z);","}","vec3 reconstructCSFaceNormal(vec3 C) {","return normalize(cross(dFdy(C), dFdx(C)));","}","vec3 reconstructNonUnitCSFaceNormal(vec3 C) {","return cross(dFdy(C), dFdx(C));","}","vec3 getPosition(ivec2 ssP, float depth) {","vec3 P;","P = reconstructCSPosition(vec2(ssP) + vec2(0.5), depth);","return P;","}","vec3 getOffsetPosition(ivec2 ssC, vec2 unitOffset, float ssR) {","ivec2 ssP = ivec2(ssR * unitOffset) + ssC;","vec3 P;","vec2 screenUV = (vec2(ssP) + vec2(0.5)) * resolution;","#ifdef USE_MIPMAP","int mipLevel = int(max(0.0, min(floor(log2(ssR)) - float(LOG_MAX_OFFSET), float(MAX_MIP_LEVEL))));","if (mipLevel == 0) {","P.z = texture2D(tDepth, screenUV).z;","if (P.z == 0.0) P.z = -cameraFar * 1.0e10;","}","else if (mipLevel == 1)","P.z = unpackDepthNearFar(texture2D(tDepth_mip1, screenUV));","else if (mipLevel == 2)","P.z = unpackDepthNearFar(texture2D(tDepth_mip2, screenUV));","else if (mipLevel == 3)","P.z = unpackDepthNearFar(texture2D(tDepth_mip3, screenUV));","else if (mipLevel == 4)","P.z = unpackDepthNearFar(texture2D(tDepth_mip4, screenUV));","else if (mipLevel == 5)","P.z = unpackDepthNearFar(texture2D(tDepth_mip5, screenUV));","#else","P.z = texture2D(tDepth, screenUV).z;","if (P.z == 0.0) P.z = -cameraFar * 1.0e10;","#endif","P = reconstructCSPosition(vec2(ssP) + vec2(0.5), P.z);","return P;","}","float sampleAO(in ivec2 ssC, in vec3 C, in vec3 n_C, in float ssDiskRadius, in int tapIndex, in float randomPatternRotationAngle) {","float ssR;","vec2 unitOffset = tapLocation(tapIndex, randomPatternRotationAngle, ssR);","ssR = max(0.75, ssR * ssDiskRadius);","vec3 Q = getOffsetPosition(ssC, unitOffset, ssR);","vec3 v = Q - C;","float vv = dot(v, v);","float vn = dot(v, n_C);","const float epsilon = 0.001;","float angAdjust = mix(1.0, max(0.0, 1.5 * n_C.z), 0.35);","#define HIGH_QUALITY","#ifdef HIGH_QUALITY","float f = max(1.0 - vv / (radius * radius), 0.0); return angAdjust * f * max((vn - bias) / sqrt(epsilon + vv), 0.0);","#else","float f = max(radius * radius - vv, 0.0); return angAdjust * f * f * f * max((vn - bias) / (epsilon + vv), 0.0);","#endif","}","const bool useNoise = true;","float getRandomAngle(vec2 pos) {","float dt= dot(pos ,vec2(12.9898,78.233));","return 6.28318 * fract(sin(mod(dt,3.14)) * 43758.5453);","}","void main() {","ivec2 ssC = ivec2(gl_FragCoord.xy);","vec4 nrmz = texture2D(tDepth, vUv);","if (nrmz.z == 0.0) {","gl_FragColor.r = 1.0;","gl_FragColor.a = 0.0;","packKey(1.0, gl_FragColor.gb);","return;","}","vec3 C = getPosition(ssC, nrmz.z);","packKey(CSZToKey(C.z), gl_FragColor.gb);","float ssDiskRadius = -projScale * radius / mix(C.z, -1.0, isOrtho);","float A;","if (ssDiskRadius <= MIN_RADIUS) {","A = 1.0;","} else {","float sum = 0.0;","float randomPatternRotationAngle = getRandomAngle(vUv);","vec3 n_C = vec3(nrmz.x, nrmz.y, sqrt(1.0 - dot(nrmz.xy, nrmz.xy)));","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 0, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 1, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 2, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 3, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 4, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 5, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 6, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 7, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 8, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 9, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 10, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 11, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 12, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 13, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 14, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 15, randomPatternRotationAngle);","sum += sampleAO(ssC, C, n_C, ssDiskRadius, 16, randomPatternRotationAngle);","float intensityDivR6 = intensity / pow(radius, 6.0);","#ifdef HIGH_QUALITY","A = pow(max(0.0, 1.0 - sqrt(sum * (3.0 / float(NUM_SAMPLES)))), intensity);","#else","A = max(0.0, 1.0 - sum * intensityDivR6 * (5.0 / float(NUM_SAMPLES)));","A = (pow(A, 0.2) + 1.2 * A*A*A*A) / 2.2;","#endif","if (abs(dFdx(C.z)) < 0.02) {","A -= dFdx(A) * (mod(float(ssC.x), 2.0) - 0.5);","}","if (abs(dFdy(C.z)) < 0.02) {","A -= dFdy(A) * (mod(float(ssC.y), 2.0) - 0.5);","}","A = mix(1.0, A, clamp(ssDiskRadius - MIN_RADIUS,0.0,1.0));","}","gl_FragColor.r = A;","gl_FragColor.a = 1.0;","}"].join("\n")};a.exports=e},function(a,b,c){var d=c(2),e={uniforms:{cutplanes:{type:"v4v",value:[]}},vertexShader:["varying vec3 vNormal;","varying float depth;","#if NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif",d.PackNormalsShaderChunk,d.InstancingVertexDeclaration,"void main() {","#ifdef UNPACK_NORMALS","vec3 objectNormal = decodeNormal(normal);","#else","vec3 objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","objectNormal = getInstanceNormal(objectNormal);","vec3 instPos = getInstancePos(position);","vec3 transformedNormal = normalMatrix * objectNormal;","vNormal = normalize( transformedNormal );","#if NUM_CUTPLANES > 0","vec4 worldPosition = modelMatrix * vec4( instPos, 1.0 );","vWorldPosition = worldPosition.xyz;","#endif","vec4 mvPosition = modelViewMatrix * vec4( instPos, 1.0 );","depth = mvPosition.z;","vec4 p_Position = projectionMatrix * mvPosition;","gl_Position = p_Position;","}"].join("\n"),fragmentShader:["varying highp vec3 vNormal;","varying highp float depth;","#if NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif",d.CutPlanesShaderChunk,"void main() {","#if NUM_CUTPLANES > 0","checkCutPlanes(vWorldPosition);","#endif","vec3 n = vNormal;","n = n * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","n = normalize( n );","gl_FragColor = vec4(n.x, n.y, depth, 1.0);","}"].join("\n")};a.exports=e},function(a,b,c){var d=c(2),e=["#define TAU     6.28318530718","#define PI      3.14159265358979","#define HALF_PI 1.57079632679","#define PI_0_5  HALF_PI","#define PI_1_5  4.71238898038","#define ENABLE_ID_DISCARD"].join("\n"),f=["#define VBB_GT_TRIANGLE_INDEXED  0.0","#define VBB_GT_LINE_SEGMENT      1.0","#define VBB_GT_ARC_CIRCULAR      2.0","#define VBB_GT_ARC_ELLIPTICAL    3.0","#define VBB_GT_TEX_QUAD          4.0","#define VBB_GT_ONE_TRIANGLE      5.0"].join("\n"),g=["#define VBB_INSTANCED_FLAG   0.0","#define VBB_SEG_START_RIGHT  0.0","#define VBB_SEG_START_LEFT   1.0","#define VBB_SEG_END_RIGHT    2.0","#define VBB_SEG_END_LEFT     3.0"].join("\n"),h=["varying vec4 fsColor;","varying vec4 dbId;","varying vec2 fsOffsetDirection;","varying vec4 fsMultipurpose;","varying float fsHalfWidth;","varying vec2 fsVpTC;","varying vec2 fsLayerTC;"].join("\n"),i={uniforms:{pixelsPerUnit:{type:"f",value:1},aaRange:{type:"f",value:.5},tLayerMask:{type:"t",value:null},tLineStyle:{type:"t",value:null},vLineStyleTexSize:{type:"v2",value:new THREE.Vector2(13,70)},tRaster:{type:"t",value:null},tSelectionTexture:{type:"t",value:null},vSelTexSize:{type:"v2",value:new THREE.Vector2(4096,1)},displayPixelRatio:{type:"f",value:1},opacity:{type:"f",value:1},selectionColor:{type:"v4",value:new THREE.Vector4(0,0,1,1)},modelId:{type:"v3",value:new THREE.Vector3(0,0,0)},viewportId:{type:"f",value:0},swap:{type:"f",value:0},ghostingLayer:{type:"v2",value:new THREE.Vector2(1,1)}},attributes:{fields1:0,fields2:0,color4b:0,dbId4b:0,flags4b:0,layerVp4b:0,extraParams:0,instFlags4b:0},defines:{},vertexShader:[e,f,g,h,"attribute vec3 fields1;","attribute vec3 fields2;","attribute vec4 color4b;","attribute vec4 dbId4b;","attribute vec4 flags4b;","attribute vec4 layerVp4b;","#ifdef HAS_ELLIPTICALS","attribute vec3 extraParams;","#endif","#ifdef USE_INSTANCING","attribute vec4 instFlags4b;","#endif","uniform mat4 mvpMatrix;","uniform float pixelsPerUnit;","uniform float aaRange;","uniform float viewportId;","uniform float swap;","uniform vec2  ghostingLayer;","#ifdef HAS_LAYERS","uniform sampler2D tLayerMask;","#endif","#ifdef SELECTION_RENDERER","uniform sampler2D tSelectionTexture;","uniform vec2 vSelTexSize;","#endif","#ifdef SELECTION_RENDERER","uniform vec4 selectionColor;","#endif","vec2 centralVertex;","vec2 offsetPosition;","vec2 cos_sin(const float angle) { return vec2(cos(angle), sin(angle)); }","void min_max(inout vec2 minPt, inout vec2 maxPt, const vec2 p) {","minPt = min(minPt, p);","maxPt = max(maxPt, p);","}","#if defined(USE_INSTANCING)","float getVertexId() { return instFlags4b.x; }","#else","float getVertexId() { return flags4b.x; }","#endif","bool isStartVertex() { return (getVertexId() < VBB_SEG_END_RIGHT); }","bool isLeftVertex()  { float id = getVertexId(); return ((id == VBB_SEG_END_LEFT || id == VBB_SEG_START_LEFT)); }","struct SegmentData { float angle, distAlong, distTotal, lineWidthHalf, lineType; };","void decodeSegmentData(out SegmentData seg) {","seg.angle         = fields1.z;","seg.distAlong     = fields2.x;","seg.distTotal     = fields2.z;","seg.lineWidthHalf = fields2.y;","seg.lineType      = flags4b.z;","}","void strokeLineSegment() {","SegmentData seg; decodeSegmentData(seg);","float isStartCapVertex = isStartVertex() ? -1.0 :  1.0;","float isLeftSide       = isLeftVertex( ) ?  1.0 : -1.0;","float angleTransverse = seg.angle + isLeftSide * HALF_PI;","float lwAdjustment = fsHalfWidth + aaRange;","vec2 transverseOffset = cos_sin(angleTransverse) * lwAdjustment;","offsetPosition.xy += transverseOffset;","float distanceFromStart = max(isStartCapVertex, 0.0) * seg.distAlong;","vec2 along = distanceFromStart * cos_sin(seg.angle);","offsetPosition.xy += along;","centralVertex.xy  += along;","vec2 moveOffset = isStartCapVertex * isLeftSide * vec2(-transverseOffset.y, transverseOffset.x);","offsetPosition.xy -= moveOffset;","centralVertex.xy  -= moveOffset;","fsMultipurpose.x = (isStartCapVertex * lwAdjustment) + distanceFromStart;","fsMultipurpose.y = seg.distAlong;","fsMultipurpose.z = seg.distTotal;","fsMultipurpose.w = seg.lineType;","if (seg.lineWidthHalf < 0.0)","fsHalfWidth = -fsHalfWidth;","}","#ifdef HAS_TRIANGLE_GEOMS","struct TriangleData { vec2 p0, p1, p2; };","void decodeTriangleData(out TriangleData tri) {","tri.p1 = vec2(fields1.z, fields2.x);","tri.p2 = fields2.yz;","}","void strokeOneTriangle() {","TriangleData tri; decodeTriangleData(tri);","float vertexId = getVertexId();","if      (vertexId == VBB_SEG_END_RIGHT) offsetPosition.xy = tri.p1;","else if (vertexId == VBB_SEG_END_LEFT)  offsetPosition.xy = tri.p2;","}","#endif","#ifdef HAS_RASTER_QUADS","struct TexQuadData { float angle; vec2 size; };","void decodeTexQuadData(out TexQuadData quad) {","quad.angle     = fields1.z;","quad.size   = fields2.xy;","}","void strokeTexQuad() {","TexQuadData quad; decodeTexQuadData(quad);","vec2 corner = vec2(isLeftVertex() ? -1.0 : 1.0, isStartVertex() ? -1.0 : 1.0);","vec2 p      = 0.5 * corner * quad.size;","vec2 rot    = cos_sin(quad.angle);","vec2 offset = vec2(p.x * rot.x - p.y * rot.y, p.x * rot.y + p.y * rot.x);","offsetPosition.xy += offset;","fsMultipurpose.xy = max(vec2(0.0), corner);","fsMultipurpose.z = 1.0;","fsHalfWidth = 0.0;","}","#endif","#if defined(HAS_CIRCLES) || defined(HAS_ELLIPTICALS)","struct ArcData { vec2 c; float start, end, major, minor, tilt; };","void decodeArcData(out ArcData arc) {","arc.c     = fields1.xy;","arc.start = fields1.z;","arc.end   = fields2.x;","arc.major = fields2.z;","#if defined(HAS_ELLIPTICALS)","arc.minor = extraParams.x;","arc.tilt  = extraParams.y;","#endif // defined(HAS_ELLIPTICALS)","}","void strokeArc(const ArcData arc) {","float isStart = isStartVertex() ? -1.0 : 1.0;","float isLeft  = isLeftVertex()  ? -1.0 : 1.0;","vec2 minPt;","vec2 maxPt;","vec2 angles = vec2(arc.start, arc.end);","vec2 endsX = vec2(arc.c.x) + arc.major * cos(angles);","vec2 endsY = vec2(arc.c.y) + arc.minor * sin(angles);","minPt = maxPt = vec2(endsX.x, endsY.x);","min_max(minPt, maxPt, vec2(endsX.y, endsY.y));","if (arc.end > arc.start) {","if (arc.start < PI_0_5 && arc.end > PI_0_5) {","min_max(minPt, maxPt, vec2(arc.c.x, arc.c.y + arc.minor));","}","if (arc.start < PI && arc.end > PI) {","min_max(minPt, maxPt, vec2(arc.c.x - arc.major, arc.c.y));","}","if (arc.start < PI_1_5 && arc.end > PI_1_5) {","min_max(minPt, maxPt, vec2(arc.c.x, arc.c.y - arc.minor));","}","} else {","min_max(minPt, maxPt, vec2(arc.c.x + arc.major, arc.c.y));","if (arc.start < PI_0_5 || arc.end > PI_0_5) {","min_max(minPt, maxPt, vec2(arc.c.x, arc.c.y + arc.minor));","}","if (arc.start < PI || arc.end > PI) {","min_max(minPt, maxPt, vec2(arc.c.x - arc.major, arc.c.y));","}","if (arc.start < PI_1_5 || arc.end > PI_1_5) {","min_max(minPt, maxPt, vec2(arc.c.x, arc.c.y - arc.minor));","}","}","minPt -= fsHalfWidth + aaRange;","maxPt += fsHalfWidth + aaRange;","offsetPosition.x = (isStart < 0.0) ? minPt.x : maxPt.x;","offsetPosition.y = (isLeft < 0.0)  ? minPt.y : maxPt.y;","fsMultipurpose.x = arc.start;","fsMultipurpose.y = -arc.major;","fsMultipurpose.z = arc.end;","fsMultipurpose.w = arc.minor;","}","#endif // defined(HAS_CIRCLES) || defined(HAS_ELLIPTICALS)","#if defined(HAS_CIRCLES)","void strokeCircularArc() {","ArcData arc; decodeArcData(arc);","float r = arc.major;","if (r * pixelsPerUnit < 0.125)","r = 0.25 * aaRange;","arc.major = arc.minor = r;","strokeArc(arc);","}","#endif","#if defined(HAS_ELLIPTICALS)","void strokeEllipticalArc() {","ArcData arc; decodeArcData(arc);","strokeArc(arc);","}","#endif","struct CommonAttribs { vec2 pos; vec4 color; vec2 layerTC, vpTC; float lineWidthHalf, geomType; };","void decodeCommonAttribs(out CommonAttribs attribs) {","attribs.pos           = fields1.xy;","attribs.color         = color4b;","attribs.geomType      = flags4b.y;","attribs.layerTC       = layerVp4b.xy / 255.0;","attribs.vpTC          = layerVp4b.zw / 255.0;","attribs.lineWidthHalf = fields2.y;","}","void strokeIndexedTriangle() {","fsHalfWidth = 0.0;","fsMultipurpose.z = 0.0;","}","#ifdef SELECTION_RENDERER","bool isSelected(const CommonAttribs attribs) {","vec3 oid = dbId4b.rgb;","float id01 = oid.r + oid.g * 256.0;","float t = (id01 + 0.5) * (1.0 / 4096.0);","float flrt = floor(t);","float texU = t - flrt;","float id23 = oid.b * (65536.0 / 4096.0) + flrt;","t = (id23 + 0.5) / vSelTexSize.y;","float texV = fract(t);","vec4 selBit = texture2D(tSelectionTexture, vec2(texU, texV));","return selBit.r == 1.0;","}","#endif","bool isLayerOff(const CommonAttribs attribs) {","#ifdef HAS_LAYERS","vec4 layerBit = texture2D(tLayerMask, attribs.layerTC);","return (layerBit.r == 0.0 && attribs.layerTC!=ghostingLayer);","#else","return false;","#endif","}","vec4 getColor(const CommonAttribs attribs) {","if (isLayerOff(attribs)) { return vec4(0.0); }","#ifdef SELECTION_RENDERER","if (isSelected(attribs)) { return selectionColor; }","return vec4(0.0);","#else","return attribs.color;","#endif","}","void main() {","CommonAttribs attribs; decodeCommonAttribs(attribs);","fsColor = getColor(attribs);","if (swap != 0.0 ) {","if ( fsColor.r == 0.0 && fsColor.g == 0.0 && fsColor.b == 0.0 )","fsColor.rgb = vec3(1.0,1.0,1.0);","else if ( fsColor.r == 1.0 && fsColor.g == 1.0 && fsColor.b == 1.0 )","fsColor.rgb = vec3(0.0,0.0,0.0);","}","centralVertex = offsetPosition = attribs.pos;","float lineWeight = attribs.lineWidthHalf;","if (lineWeight > 0.0) {","if(lineWeight < 0.5 / pixelsPerUnit) {","lineWeight = 0.5 / pixelsPerUnit;","}","}","else {","lineWeight = abs(lineWeight) / pixelsPerUnit;","}","fsHalfWidth = lineWeight;","dbId = dbId4b / 255.0;","fsVpTC    = attribs.vpTC;","fsLayerTC = attribs.layerTC;","if      (attribs.geomType == VBB_GT_LINE_SEGMENT)     strokeLineSegment();","#ifdef HAS_CIRCLES","else if (attribs.geomType == VBB_GT_ARC_CIRCULAR)     strokeCircularArc();","#endif","#ifdef HAS_ELLIPTICALS","else if (attribs.geomType == VBB_GT_ARC_ELLIPTICAL)   strokeEllipticalArc();","#endif","#ifdef HAS_RASTER_QUADS","else if (attribs.geomType == VBB_GT_TEX_QUAD)         strokeTexQuad();","#endif","#ifdef HAS_TRIANGLE_GEOMS","else if (attribs.geomType == VBB_GT_ONE_TRIANGLE)     strokeOneTriangle();","#endif","else if (attribs.geomType == VBB_GT_TRIANGLE_INDEXED) strokeIndexedTriangle();","fsOffsetDirection = offsetPosition - centralVertex;","gl_Position = mvpMatrix * modelMatrix * vec4( offsetPosition.xy, 0.0, 1.0 );","}"].join("\n"),fragmentShader:[e,f,g,h,"uniform highp float pixelsPerUnit;","uniform highp float aaRange;","uniform float opacity;","uniform highp float viewportId;","uniform highp float swap;","#ifdef HAS_RASTER_QUADS","uniform sampler2D tRaster;","#endif","#ifdef HAS_LINESTYLES","uniform sampler2D tLineStyle;","uniform vec2 vLineStyleTexSize;","#endif","#if defined(MRT_ID_BUFFER) || defined(MODEL_COLOR)","uniform vec3 modelId;","#endif","uniform highp vec2 ghostingLayer;","float curveGaussian(float r, float invWidth) {","float amt = clamp(r * invWidth, 0.0, 1.0);","float exponent = amt * 2.0;","return exp(-exponent*exponent);","}","#ifdef HAS_LINESTYLES","float getLinePatternPixel(int i, int j) {","return texture2D(tLineStyle, (vec2(i, j) + 0.5) / vLineStyleTexSize).x * 255.0;","}","float getPatternLength(int whichPattern) {","float p1 = getLinePatternPixel(0, whichPattern);","float p2 = getLinePatternPixel(1, whichPattern);","return (p2 * 256.0 + p1);","}","#endif","void fillLineSegment() {","float radius = abs(fsHalfWidth);","float parametricDistance = fsMultipurpose.x;","float segmentLength      = fsMultipurpose.y;","float totalDistance      = fsMultipurpose.z;","#ifdef HAS_LINESTYLES","int whichPattern         = int(fsMultipurpose.w);","if (whichPattern > 0) {","const float TEX_TO_UNIT = 1.0 / 96.0;","float LTSCALE = 1.0;","float patternScale;","if (fsHalfWidth < 0.0) {","patternScale = LTSCALE;","} else {","patternScale = LTSCALE * TEX_TO_UNIT * pixelsPerUnit;","}","float patLen = patternScale * getPatternLength(whichPattern);","float phase = mod((totalDistance + parametricDistance) * pixelsPerUnit, patLen);","bool onPixel = true;","float radiusPixels = radius * pixelsPerUnit;","for (int i=2; i<MAX_LINESTYLE_LENGTH; i+=2) {","float on = getLinePatternPixel(i, whichPattern);","if (on == 1.0) on = 0.0;","on *= patternScale;","onPixel = true;","phase -= on;","if (phase < 0.0) {","break;","}","else if (phase <= radiusPixels) {","onPixel = false;","break;","}","float off = getLinePatternPixel(i+1, whichPattern);","if (off <= 1.0) off = 0.0;","off *= patternScale;","onPixel = false;","phase -= off;","if (phase < -radiusPixels)","discard;","if (phase <= 0.0)","break;","}","if (!onPixel && (abs(phase) <= radiusPixels)) {","segmentLength = 0.0;","parametricDistance = phase / pixelsPerUnit;","}","}","#endif","float dist;","float offsetLength2 = dot(fsOffsetDirection, fsOffsetDirection);","float ltz = max(0.0, sign(-parametricDistance));","float gtsl = max(0.0, sign(parametricDistance - segmentLength));","float d = (ltz + gtsl) * (parametricDistance - gtsl * segmentLength);","dist = sqrt(max(0.0, offsetLength2 + d*d));","float range =  dist - radius;","if (range > aaRange) {","discard;","}","gl_FragColor = fsColor;","gl_FragColor.a *= curveGaussian(range+aaRange, pixelsPerUnit);","}","#ifdef HAS_CIRCLES","void fillCircularArc() {","float dist   = length(fsOffsetDirection);","vec2 angles  = fsMultipurpose.xz;","float radius = abs(fsMultipurpose.y);","float range  =  abs(dist - radius);","range -= fsHalfWidth;","if (range > aaRange) {","discard;","}","vec2 direction = fsOffsetDirection;","float angle = atan(direction.y, direction.x);","if (angles.x > angles.y) {","if (angle > angles.x && angle < PI) {","angle -= TAU;","}","angles.x -= TAU;","}","else if (angle < 0.0)","angle += TAU;","if (angle > angles.x && angle < angles.y) {","gl_FragColor = fsColor;","gl_FragColor.a *= curveGaussian(range+aaRange, pixelsPerUnit);","}","else {","discard;","}","}","#endif","#ifdef HAS_ELLIPTICALS","float EllipticalApprox(","const int iters,","inout float t0, inout float t1,","const vec2 y,   out   vec2 x,","const vec2 e,   const vec2 ey, const vec2 esqr",") {","vec2 r;","for (int i = 0; i < 10; ++i) {","if(i >= iters) break;","float t = mix(t0, t1, 0.5);","r = ey / (vec2(t) + esqr);","vec2 rsq = r * r;","float f = rsq.x + rsq.y - 1.0;","if(f > 0.0) { t0 = t; } else { t1 = t; }","}","x = e * r;","return distance(x, y);","}","float DistancePointEllipseSpecial (vec2 e, vec2 y, out vec2 x, float width, float aaRange) {","float dist;","vec2 esqr = e * e;","vec2 ey   = e * y;","float t0 = -esqr[1] + ey[1];","float t1 = -esqr[1] + length(ey);","dist = EllipticalApprox(6, t0, t1, y, x, e, ey, esqr);","if (dist > max(2.0 * (width + aaRange), e[0] * 0.05))","return dist;","dist = EllipticalApprox(6, t0, t1, y, x, e, ey, esqr);","float ecc = 1.0 +  0.1 * e[0] / e[1];","if (dist > max(ecc * (width + aaRange), e[0] * 0.001))","return dist;","if (dist < (width - aaRange) / ecc)","return dist;","dist = EllipticalApprox(10, t0, t1, y, x, e, ey, esqr);","return dist;","}","float DistancePointEllipse(vec2 e, vec2 y, out vec2 locX, float width, float aaRange) {","vec2 locE, locY;","float diff = sign(e[0] - e[1]);","vec2 swizzle = vec2(max(diff, 0.0), -min(diff, 0.0));","locE.x = dot(e, swizzle.xy);","locE.y = dot(e, swizzle.yx);","locY.x = dot(y, swizzle.xy);","locY.y = dot(y, swizzle.yx);","vec2 refl = sign(locY);","locY *= refl;","vec2 x;","float distance = DistancePointEllipseSpecial(locE, locY, x, width, aaRange);","x *= refl;","locX.x = dot(x, swizzle.xy);","locX.y = dot(x, swizzle.yx);","return distance;","}","void fillEllipticalArc() {","vec2 angles = fsMultipurpose.xz;","vec2 radii  = abs(fsMultipurpose.yw);","vec2 dir    = fsOffsetDirection;","vec2 pos;","float range = DistancePointEllipse(radii, dir, pos, fsHalfWidth, aaRange);","range -= fsHalfWidth;","if (range > aaRange)","discard;","float ar = radii[0] / radii[1];","float angle = atan(ar * pos.y, pos.x);","if (angles.x > angles.y) {","if (angle > angles.x && angle < PI) {","angle -= TAU;","}","angles.x -= TAU;","}","else if (angle < 0.0)","angle += TAU;","if (angle > angles.x && angle < angles.y) {","gl_FragColor = fsColor;","gl_FragColor.a *= curveGaussian(range+aaRange, pixelsPerUnit);","}","else {","discard;","}","}","#endif","#ifdef HAS_RASTER_QUADS","void fillTexQuad() { gl_FragColor = texture2D(tRaster, fsMultipurpose.xy); }","#endif","void fillTriangle() { gl_FragColor = fsColor; }","void main() {","if (fsColor == vec4(0.0)) {","discard;","}","if (fsHalfWidth == 0.0) {","#ifdef HAS_RASTER_QUADS","if (fsMultipurpose.z != 0.0)","fillTexQuad();","else","#endif","fillTriangle();","}","else if (fsMultipurpose.y < 0.0) {","#ifdef HAS_CIRCLES","#ifdef HAS_ELLIPTICALS","if (abs(fsMultipurpose.y) == fsMultipurpose.w)","#endif","fillCircularArc();","#endif","#ifdef HAS_ELLIPTICALS","#ifdef HAS_CIRCLES","else","#endif","fillEllipticalArc();","#endif","}","else","fillLineSegment();","#ifdef MRT_NORMALS","gl_FragData[1] = vec4(0.0);","#endif","float writeId = 1.0;","if (fsLayerTC==ghostingLayer || ","((viewportId != 0.0) && (abs(fsVpTC.x * 255.0 + fsVpTC.y) >= 0.5 && abs(fsVpTC.x * 255.0 + fsVpTC.y - viewportId) >= 0.5))) {","writeId = 0.0;","gl_FragColor.a *= opacity * ((swap == 1.0) ? 0.21 : 0.1);","} else {","gl_FragColor.a *= opacity;","}",d.IdOutputShaderChunk,"}"].join("\n")};a.exports=i},function(a,b,c){var d=c(13),e=function(a,b){this.textureID=void 0!==b?b:"tDiffuse",this.material=d.createShaderMaterial(a),this.uniforms=this.material.uniforms,this.renderToScreen=!1,this.enabled=!0,this.clear=!1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);var c=new THREE.BufferGeometry,e=new Float32Array(9);e[0]=-1,e[1]=-1,e[2]=0,e[3]=3,e[4]=-1,e[5]=0,e[6]=-1,e[7]=3,e[8]=0;var f=new Float32Array(6);f[0]=0,f[1]=0,f[2]=2,f[3]=0,f[4]=0,f[5]=2;var g=new Float32Array(9);g[0]=0,g[1]=0,g[2]=1,g[3]=0,g[4]=0,g[5]=1,g[6]=0,g[7]=0,g[8]=1,c.addAttribute("position",new THREE.BufferAttribute(e,3)),c.addAttribute("normal",new THREE.BufferAttribute(g,3)),c.addAttribute("uv",new THREE.BufferAttribute(f,2)),this.quad=new THREE.Mesh(c,this.material),this.scene=new THREE.Scene,this.scene.add(this.quad)};e.prototype={render:function(a,b,c,d){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c),this.renderToScreen||!b?a.render(this.scene,this.camera):a.render(this.scene,this.camera,b,this.clear)}},a.exports=e},function(a,b){var c=function(a){var b={vertexShader:a.vertexShader,fragmentShader:a.fragmentShader};return a.uniforms&&(b.uniforms=THREE.UniformsUtils.clone(a.uniforms)),a.defines&&(b.defines=THREE.UniformsUtils.clone(a.defines)),a.attributes&&(b.attributes=a.attributes),new THREE.ShaderMaterial(b)},d=function(a,b,c){c=c||"",a.defines||(a.defines={}),a.defines[b]!=c&&(a.defines[b]=c,a.needsUpdate=!0)},e=function(a,b){(a.defines||a.defines[b])&&(delete a.defines[b],a.needsUpdate=!0)};a.exports={createShaderMaterial:c,setMacro:d,removeMacro:e}},function(a,b,c){var d=c(12),e={uniforms:{tDiffuse:{type:"t",value:null},uColor:{type:"v4",value:new THREE.Vector4(1,1,1,1)}},vertexShader:["varying vec2 vUv;","void main() {","#if defined(HORIZONTAL) && defined(FLIP_UV)","vUv = vec2(uv.x, 1.0-uv.y);","#else","vUv = vec2(uv.x, uv.y);","#endif","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec4 uColor;","varying vec2 vUv;","#ifdef HORIZONTAL","#define GET_UV(X) vec2(vUv.x + KERNEL_SCALE_H*(X), vUv.y)","#else","#define GET_UV(Y) vec2(vUv.x, vUv.y + KERNEL_SCALE_V*(Y))","#endif","#define PI 3.14159265358979","#define SIGMA ((KERNEL_RADIUS+KERNEL_RADIUS+1.0) / 6.0)","#define SIGMASQ2 (2.0 * SIGMA * SIGMA)","#define GAUSSIAN(X) ( (1.0 / sqrt(PI * SIGMASQ2)) * exp(-(X)*(X)/SIGMASQ2) )","void main() {","vec4 texColSum = vec4(0.0);","float gaussSum = 0.0;","for (float x=-KERNEL_RADIUS; x<=KERNEL_RADIUS; x+=1.0) {","float gauss = GAUSSIAN(x);","vec4 texCol = texture2D(tDiffuse, GET_UV(x));","#ifdef HAS_ALPHA","texCol.rgb *= texCol.a;","#endif","texColSum += texCol * gauss;","gaussSum += gauss;","}","#ifdef HAS_ALPHA","texColSum.rgb /= (texColSum.a == 0.0 ? 0.0001 : texColSum.a);","#endif","#ifdef HORIZONTAL","gl_FragColor = texColSum/gaussSum;","#else","gl_FragColor = texColSum/gaussSum * uColor;","#endif","}"].join("\n")},f=function(a,b,c,f,g){var h,i,j,k=a,l=b,m=c||3,n=f||1,o={hasAlpha:g.hasAlpha||!1,blending:g.blending||!1,flipUV:g.flipUV||!1};this.render=function(a,b,c){h.render(a,j,c),i.render(a,b,j)},this.setSize=function(a,b){this.cleanup(),k=a,l=b,j=new THREE.WebGLRenderTarget(a,b,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:void 0!==g.format?g.format:THREE.RGBAFormat,type:void 0!==g.type?g.type:THREE.UnsignedByteType,stencilBuffer:!1}),j.generateMipmaps=!1,h.material.defines.KERNEL_SCALE_H=i.material.defines.KERNEL_SCALE_H=(n/k).toFixed(4),h.material.defines.KERNEL_SCALE_V=i.material.defines.KERNEL_SCALE_V=(n/l).toFixed(4),h.material.needsUpdate=i.material.needsUpdate=!0},this.cleanup=function(){j&&j.dispose()},this.setColor=function(a){i.material.uniforms.uColor.value.x=a.r,i.material.uniforms.uColor.value.y=a.g,i.material.uniforms.uColor.value.z=a.b},this.setAlpha=function(a){i.material.uniforms.uColor.value.w=a},h=new d(e),i=new d(e),this.setSize(a,b),h.material.blending=i.material.blending=THREE.NoBlending,h.material.depthWrite=i.material.depthWrite=!1,h.material.depthTest=i.material.depthTest=!1,h.material.defines.HORIZONTAL=1,h.material.defines.KERNEL_RADIUS=i.material.defines.KERNEL_RADIUS=m.toFixed(1),o.blending&&(i.material.transparent=!0,i.material.blending=THREE.NormalBlending),o.hasAlpha&&(h.material.defines.HAS_ALPHA=i.material.defines.HAS_ALPHA=""),o.flipUV&&(h.material.defines.FLIP_UV="")};a.exports=f},function(a,b,c){var d=c(12),e=c(14),f=c(1),g=({uniforms:{tDiffuse:{type:"t",value:null},tBackground:{type:"t",value:null},uColor:{type:"v4",value:new THREE.Vector4(1,1,1,1)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform sampler2D tBackground;","uniform vec4 uColor;","varying vec2 vUv;","void main() {","vec4 bgCol = texture2D( tBackground, vUv );","vec4 diffCol = uColor * texture2D( tDiffuse, vUv );","gl_FragColor = mix(bgCol, diffCol, diffCol.a);","}"].join("\n")},{uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = texel;","}"].join("\n")}),h=function(a,b,c,h){var i,j,k,l,m,n,o=a,p=o.getContext(),q=b||512,r=c||512,s=!1,t=new THREE.Color(0,0,0),u=!1,v=!1;this.inTarget=void 0,this.outTarget=void 0;var w={color:new THREE.Color(1,1,1),alpha:.3,texScale:.5,blurRadius:2,blurTexScale:.5,fadeAngle:Math.PI/18},x=function(a){var b=a.normal,c=a.constant;return(new THREE.Matrix4).set(1-2*b.x*b.x,-2*b.y*b.x,-2*b.x*b.z,-2*c*b.x,-2*b.x*b.y,1-2*b.y*b.y,-2*b.y*b.z,-2*c*b.y,-2*b.x*b.z,-2*b.y*b.z,1-2*b.z*b.z,-2*c*b.z,0,0,0,1)};if(this.setTransform=function(a,b,c){l=a,k.normal=b,k.constant=-a.dot(b)},this.cleanup=function(){i&&i.cleanup(),this.inTarget&&this.inTarget.dispose(),this.outTarget&&this.outTarget.dispose()},this.setSize=function(a,b){q=a,r=b,this.cleanup(),this.inTarget=new THREE.WebGLRenderTarget(q*w.texScale,r*w.texScale,{
magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1}),this.inTarget.generateMipmaps=!1,this.outTarget=new THREE.WebGLRenderTarget(q*w.texScale,r*w.texScale,{magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1}),this.outTarget.generateMipmaps=!1,i?i.setSize(q*w.texScale*w.blurTexScale,r*w.texScale*w.blurTexScale):i=new e(q*w.texScale*w.blurTexScale,r*w.texScale*w.blurTexScale,w.blurRadius,1,{hasAlpha:!0,blending:!0,flipUV:!0})},this.updateCamera=function(a){var b=a.position.clone().sub(l).normalize(),c=Math.PI/2-b.angleTo(k.normal);if(s=c<0,!s){if(w.fadeAngle>0){var d=Math.min(w.fadeAngle,c)/w.fadeAngle;i.setAlpha(d*w.alpha)}var e=x(k);m=a.clone(),m.applyMatrix(e),m.projectionMatrix.elements[5]*=-1,m.matrixWorldNeedsUpdate=!0,a.worldUpTransform?m.worldUpTransform=a.worldUpTransform.clone():m.worldUpTransform=new THREE.Matrix4}},this.renderIntoReflection=function(a){s||o.render(a,m,this.inTarget)},this.prepareGroundReflection=function(){var a,b=100,c=10,d=0,e=0,f=0;return function(g,h,i){var j=g.modelQueue();if(this.finished&&!i||j.isEmpty())return!1;if(i){if(this.clear(),this.updateCamera(g.camera),this.rendered=!1,this.finished=!1,this.isGroundCulled())return!1;a=j.getGeomScenes(),d=a.length,e=0,f=Math.max(Math.ceil(d/b),c)}if(this.isGroundCulled())return!1;for(var k=0;(!g.progressiveRender||k<f)&&e<d;){var l=a[e];l&&(l.forceVisible=!0,this.renderIntoReflection(l),l.forceVisible=!1,k++),e++}return e<d?this.rendered=!1:this.finished=!0,!(this.rendered||this.isGroundCulled()||!this.finished&&j.isDone())&&(this.postprocess(g.camera,g.matman()),h&&h.enabled&&g.renderGroundShadow(this.outTarget),this.renderReflection(g.camera,g.renderer().getColorTarget()),this.rendered=this.finished,!0)}}(),this.renderReflection=function(a,b){s||(p.depthRange(.999999,1),j.render(o,b,this.outTarget),p.depthRange(0,1))},this.toggleEnvMapBackground=function(a){v=a,n.uniforms.envMapBackground.value=a},this.postprocess=function(a){s||(u||v?(n.uniforms.uCamDir.value=a.getWorldDirection(),n.uniforms.uCamUp.value=a.up,n.uniforms.uResolution.value.set(q,r),n.uniforms.uHalfFovTan.value=Math.tan(THREE.Math.degToRad(.5*a.fov)),n.render(o,this.outTarget),o.clearTarget(this.outTarget,!1,!0,!1)):(o.setClearColor(t,1),o.clearTarget(this.outTarget,!0,!0,!1)),i.render(o,this.outTarget,this.inTarget))},this.clear=function(){o.setClearColor(t,0),o.clearTarget(this.inTarget,!0,!0,!1)},this.setClearColors=function(a,b,c){b?(t.setRGB(.5*(a.x+b.x),.5*(a.y+b.y),.5*(a.z+b.z)),u=!a.equals(b)&&!c):(t.copy(a),u=!1),u&&(n.uniforms.color1.value.copy(a),n.uniforms.color2.value.copy(b))},this.setEnvRotation=function(a){n.material.envRotationSin=Math.sin(a),n.material.envRotationCos=Math.cos(a)},this.isGroundCulled=function(){return s},this.setColor=function(a){i.setColor(w.color),w.color.set(a)},this.setAlpha=function(a){i.setAlpha(w.alpha),w.alpha=a},h)for(var y in w)w[y]=void 0!==h[y]?h[y]:w[y];j=new d(g),j.material.blending=THREE.NoBlending,j.material.depthTest=!0,j.material.depthWrite=!1,j.scene.position.z=-.999999,h.clearPass?n=h.clearPass:(n=new d(f),n.material.blending=THREE.NoBlending,n.material.depthWrite=!1,n.material.depthTest=!1),this.setSize(q,r),i.setAlpha(w.color),i.setAlpha(w.alpha),k=new THREE.Plane(new THREE.Vector3(0,1,0),0),l=new THREE.Vector3(0,0,0)};h.prototype.constructor=h,a.exports=h},function(a,b){var c=function(){return function(a,b,c){var d=a.createShader(b);return a.shaderSource(d,c),a.compileShader(d),d}}();a.exports=c},function(a,b,c){var d=c(2),e=c(18),f={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.lights,THREE.UniformsLib.fog,d.CutPlanesUniforms,d.IdUniforms,d.ThemingUniform,e.ShadowMapUniforms,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},reflMipIndex:{type:"f",value:0},texMatrix:{type:"m3",value:new THREE.Matrix3},texMatrixBump:{type:"m3",value:new THREE.Matrix3},texMatrixAlpha:{type:"m3",value:new THREE.Matrix3},irradianceMap:{type:"t",value:null},exposureBias:{type:"f",value:1},envMapExposure:{type:"f",value:1},envRotationSin:{type:"f",value:0},envRotationCos:{type:"f",value:1}}]),vertexShader:["varying vec3 vViewPosition;","#ifndef FLAT_SHADED","varying vec3 vNormal;","#endif","#if defined( USE_MAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform mat3 texMatrix;","#endif","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","varying vec2 vUvBump;","uniform mat3 texMatrixBump;","#endif","#if defined( USE_ALPHAMAP )","varying vec2 vUvAlpha;","uniform mat3 texMatrixAlpha;","#endif","#if defined( USE_ENVMAP )","#if ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","uniform float refractionRatio;","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif","#ifdef USE_COLOR","varying vec3 vColor;","#endif","#ifdef USE_LOGDEPTHBUF","#ifdef USE_LOGDEPTHBUF_EXT","varying float vFragDepth;","#endif","uniform float logDepthBufFC;","#endif","#ifdef MRT_NORMALS","varying float depth;","#endif",d.PackNormalsShaderChunk,d.InstancingVertexDeclaration,d.IdVertexDeclaration,e.ShadowMapVertexDeclaration,"void main() {","#if defined( USE_MAP ) || defined( USE_SPECULARMAP )","vUv = (texMatrix * vec3(uv, 1.0)).xy;","#endif","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vUvBump = (texMatrixBump * vec3(uv, 1.0)).xy;","#endif","#if defined( USE_ALPHAMAP )","vUvAlpha = (texMatrixAlpha * vec3(uv, 1.0)).xy;","#endif","#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif","#ifdef UNPACK_NORMALS","vec3 objectNormal = decodeNormal(normal);","#else","vec3 objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","objectNormal = getInstanceNormal(objectNormal);","vec3 instPos = getInstancePos(position);","vec3 transformedNormal = normalMatrix * objectNormal;","#ifndef FLAT_SHADED","vNormal = normalize( transformedNormal );","#endif","vec4 mvPosition = modelViewMatrix * vec4( instPos, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vViewPosition = -mvPosition.xyz;","#if MAX_SPOT_LIGHTS > 0 || NUM_CUTPLANES > 0","vec4 worldPosition = modelMatrix * vec4( instPos, 1.0 );","vWorldPosition = worldPosition.xyz;","#endif","#ifdef USE_LOGDEPTHBUF","if (projectionMatrix[3][3] == 0.0) {","gl_Position.z = log2(max(1.0e-6, gl_Position.w + 1.0)) * logDepthBufFC;","#ifdef USE_LOGDEPTHBUF_EXT","vFragDepth = 1.0 + gl_Position.w;","#else","gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;","#endif","} else {","#ifdef USE_LOGDEPTHBUF_EXT","vFragDepth = 1.0 + vViewPosition.z;","#else","#endif","}","#endif","#ifdef MRT_NORMALS","depth = mvPosition.z;","#endif",e.ShadowMapVertexShaderChunk,d.IdVertexShaderChunk,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",d.EnvSamplingShaderChunk,"#ifdef USE_COLOR","varying vec3 vColor;","#endif","#ifdef GAMMA_INPUT","vec3 InputToLinear(vec3 c) {","return c * c;","}","float InputToLinear(float c) {","return c * c;","}","#else","vec3 InputToLinear(vec3 c) {","return c;","}","float InputToLinear(float c) {","return c;","}","#endif","#if defined( USE_MAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","varying vec2 vUvBump;","#endif","#if defined( USE_ALPHAMAP )","varying vec2 vUvAlpha;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif","#if TONEMAP_OUTPUT > 0","uniform float exposureBias;",d.TonemapShaderChunk,"#endif","#if defined(IRR_RGBM) || defined(ENV_RGBM) || defined(ENV_GAMMA) || defined(IRR_GAMMA)","uniform float envMapExposure;","#endif","#ifdef USE_FOG","uniform vec3 fogColor;","uniform float fogNear;","uniform float fogFar;","#endif",d.IdFragmentDeclaration,d.ThemingFragmentDeclaration,e.ShadowMapFragmentDeclaration,"#ifdef USE_ENVMAP","uniform float reflMipIndex;","uniform float reflectivity;","uniform samplerCube envMap;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform float refractionRatio;","#endif","vec3 sampleReflection(vec3 dir, float mipIndex) {","vec3 adjDir = adjustLookupVector(dir);","#ifdef ENV_GAMMA","#ifdef HAVE_TEXTURE_LOD","vec4 envTexColor = textureCubeLodEXT( envMap, adjDir, mipIndex );","#else","vec4 envTexColor = textureCube( envMap, adjDir, mipIndex );","#endif","return GammaDecode(envTexColor, envMapExposure);","#elif defined(ENV_RGBM)","#ifdef HAVE_TEXTURE_LOD","vec4 envTexColor = textureCubeLodEXT( envMap, adjDir, mipIndex );","#else","vec4 envTexColor = textureCube( envMap, adjDir, mipIndex );","#endif","return RGBMDecode(envTexColor, envMapExposure);","#else","vec4 envTexColor = textureCube( envMap, adjDir );","vec3 cubeColor = envTexColor.xyz;","#ifdef GAMMA_INPUT","cubeColor *= cubeColor;","#endif","return cubeColor;","#endif","}","#endif","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef USE_IRRADIANCEMAP","uniform samplerCube irradianceMap;","#endif","#if MAX_SPOT_LIGHTS > 0 || NUM_CUTPLANES > 0","varying highp vec3 vWorldPosition;","#endif","varying highp vec3 vViewPosition;","#ifndef FLAT_SHADED","varying highp vec3 vNormal;","#endif","#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUvBump );","vec2 dSTdy = dFdy( vUvBump );","float Hll = bumpScale * GET_BUMPMAP(vUvBump).x;","float dBx = bumpScale * GET_BUMPMAP(vUvBump + dSTdx).x - Hll;","float dBy = bumpScale * GET_BUMPMAP(vUvBump + dSTdy).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif","#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUvBump.st );","vec2 st1 = dFdy( vUvBump.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = GET_NORMALMAP(vUvBump).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif","#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif","#ifdef USE_ALPHAMAP","uniform sampler2D alphaMap;","#endif",d.HatchPatternShaderChunk,"#ifdef USE_LOGDEPTHBUF","uniform float logDepthBufFC;","#ifdef USE_LOGDEPTHBUF_EXT","#extension GL_EXT_frag_depth : enable","varying highp float vFragDepth;","#endif","#endif","vec3 Schlick_v3(vec3 v, float cosHV) {","float facing = max(1.0 - cosHV, 0.0);","float facing2 = facing * facing;","return v + (1.0 - v) * facing * facing2 * facing2;","}","float Schlick_f(float v, float cosHV) {","float facing = max(1.0 - cosHV, 0.0);","float facing2 = facing * facing;","return v + ( 1.0 - v ) * facing2 * facing2 * facing;","}",d.CutPlanesShaderChunk,"void main() {","#if NUM_CUTPLANES > 0","checkCutPlanes(vWorldPosition);","#endif","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );","#ifdef USE_MAP","vec4 texelColor = GET_MAP(vUv);","#ifdef MAP_INVERT","texelColor.xyz = 1.0-texelColor.xyz;","#endif","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif","#ifdef USE_ALPHAMAP","vec4 texelAlpha = GET_ALPHAMAP(vUvAlpha);","gl_FragColor.a *= texelAlpha.r;","#endif","#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif","float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = GET_SPECULARMAP(vUv);","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif","#ifndef FLAT_SHADED","vec3 normal = normalize( vNormal );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#else","vec3 fdx = dFdx( vViewPosition );","vec3 fdy = dFdy( vViewPosition );","vec3 normal = normalize( cross( fdx, fdy ) );","#endif","vec3 geomNormal = normal;","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","vec3 viewDirection;","if (projectionMatrix[3][3] == 0.0) {","viewDirection = normalize( vViewPosition );","} else {","viewDirection = vec3(0.0, 0.0, 1.0);","}","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","float shininessB = shininess * 4.0;","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( normal, lVector );","float pointDiffuseWeight = max( dotProduct, 0.0 );","pointDiffuse  += InputToLinear(diffuse) * InputToLinear(pointLightColor[ i ]) * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewDirection );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininessB ), 0.0 );","float specularNormalization = shininessB * 0.125 + 0.25;","vec3 schlick = Schlick_v3(InputToLinear(specular), dot( lVector, pointHalfVector ) );","pointSpecular += schlick * InputToLinear(pointLightColor[ i ]) * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization ;","}","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","float spotDiffuseWeight = max( dotProduct, 0.0 );","spotDiffuse += InputToLinear(diffuse) * InputToLinear(spotLightColor[ i ]) * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewDirection );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininessB ), 0.0 );","float specularNormalization = shininessB * 0.125 + 0.25;","vec3 schlick = Schlick_v3(InputToLinear(specular), dot( lVector, spotHalfVector ) );","spotSpecular += schlick * InputToLinear(spotLightColor[ i ]) * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","}","}","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","float dirDiffuseWeight = max( dotProduct, 0.0 );","dirDiffuse  += InputToLinear(diffuse) * InputToLinear(directionalLightColor[ i ]) * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewDirection );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininessB ), 0.0 );","float specularNormalization = shininessB * 0.125 + 0.25;","vec3 schlick = Schlick_v3(InputToLinear(specular), dot( dirVector, dirHalfVector ));","dirSpecular += schlick * InputToLinear(directionalLightColor[ i ]) * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","}","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#ifdef USE_IRRADIANCEMAP","vec3 worldNormal = mat3(viewMatrixInverse) * normal;","vec3 indirectDiffuse = sampleIrradianceMap(worldNormal, irradianceMap, envMapExposure);","indirectDiffuse = applyEnvShadow(indirectDiffuse, worldNormal);","totalDiffuse += InputToLinear(diffuse) * indirectDiffuse;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( InputToLinear(emissive) + totalDiffuse + ambientLightColor * InputToLinear(diffuse) + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( InputToLinear(emissive) + totalDiffuse + ambientLightColor * InputToLinear(diffuse) ) + totalSpecular;","#endif","#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );","#endif","#if defined(USE_ENVMAP)","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","#ifdef ENVMAP_MODE_REFLECTION","reflectVec = reflect( -viewDirection, normal );","#else ","reflectVec = refract( -viewDirection, normal, refractionRatio );","#endif","#else","reflectVec = reflect( -viewDirection, normal );","#endif","reflectVec = mat3(viewMatrixInverse) * reflectVec;","float reflectScale = 1.0;","vec3 cubeColor = sampleReflection(reflectVec, reflMipIndex);","cubeColor *= reflectScale;","float facing = dot( viewDirection, geomNormal );","if (facing < -1e-2)","facing = 1.0;","else","facing = max(1e-6, facing);","vec3 schlickRefl;","#ifdef METAL","schlickRefl = InputToLinear(specular);","#else","schlickRefl = Schlick_v3(InputToLinear(specular), facing);","gl_FragColor.a = mix(gl_FragColor.a, Schlick_f(gl_FragColor.a, facing), reflectivity);","float invSchlick = (1.0 - facing * 0.5);","float invSchlick2 = invSchlick * invSchlick;","float norm_factor = 1.0 - invSchlick * invSchlick2 * invSchlick2;","norm_factor = (28.0 / 23.0) * norm_factor;","gl_FragColor.xyz *= norm_factor * (1.0 - InputToLinear(specular));","#endif","gl_FragColor.xyz += cubeColor.xyz * specularStrength * schlickRefl.xyz;","#ifdef CLEARCOAT","vec3 reflectVecClearcoat = reflect( -viewDirection, geomNormal );","reflectVecClearcoat = mat3(viewMatrixInverse) * reflectVecClearcoat;","vec3 cubeColorClearcoat = sampleReflection(reflectVecClearcoat, 0.0);","float schlickClearcoat = Schlick_f(InputToLinear(reflectivity), facing);","gl_FragColor.xyz = mix(gl_FragColor.xyz, cubeColorClearcoat * schlickClearcoat, 0.5);","#endif","#endif","#if TONEMAP_OUTPUT == 1","gl_FragColor.xyz = toneMapCanonOGS_WithGamma_WithColorPerserving(exposureBias * gl_FragColor.xyz);","#elif TONEMAP_OUTPUT == 2","gl_FragColor.xyz = toneMapCanonFilmic_WithGamma( exposureBias * gl_FragColor.xyz );","#endif","#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = smoothstep( fogNear, fogFar, depth );","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif",d.ThemingFragmentShaderChunk,d.FinalOutputShaderChunk,"}"].join("\n")};THREE.ShaderLib.firefly_phong=f,a.exports=f},function(a,b){var c={shadowESMConstant:{type:"f",value:0}},d=THREE.UniformsUtils.merge([{shadowMap:{type:"t",value:null},shadowMapSize:{type:"v2",value:new THREE.Vector2(0,0)},shadowBias:{type:"f",value:0},shadowDarkness:{type:"f",value:0},shadowMatrix:{type:"m4",value:new THREE.Matrix4},shadowLightDir:{type:"v3",value:new THREE.Vector3}},c]),e=["uniform float shadowESMConstant;","uniform float shadowMapRangeMin;","uniform float shadowMapRangeSize;"].join("\n"),f=["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord;","uniform mat4 shadowMatrix;","#endif"].join("\n"),g=["#ifdef USE_SHADOWMAP","{","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vShadowCoord = shadowMatrix * worldPosition;","}","#endif"].join("\n"),h=["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap;","uniform vec2      shadowMapSize;","uniform float     shadowDarkness;","uniform float     shadowBias;","uniform vec3      shadowLightDir;","varying vec4 vShadowCoord;",e,"float getShadowValue() {","float fDepth;","vec3 shadowColor = vec3( 1.0 );","vec3 shadowCoord = vShadowCoord.xyz / vShadowCoord.w;","shadowCoord.xyz = 0.5 * (shadowCoord.xyz + vec3(1.0, 1.0, 1.0));","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","float shadowValue = 1.0;","if (inFrustum) {","shadowCoord.z = min(0.999, shadowCoord.z);","shadowCoord.z -= shadowBias;","#ifdef USE_HARD_SHADOWS","vec4 rgbaDepth = texture2D( shadowMap, shadowCoord.xy );","float fDepth = rgbaDepth.r;","if ( fDepth < shadowCoord.z ) {","shadowValue = 1.0 - shadowDarkness;","}","#else","vec4 rgbaDepth = texture2D( shadowMap, shadowCoord.xy );","float shadowMapValue = rgbaDepth.r;","shadowValue = exp(-shadowESMConstant * shadowCoord.z) * shadowMapValue;","shadowValue = min(shadowValue, 1.0);","shadowValue = mix(1.0 - shadowDarkness, 1.0, shadowValue);","#endif","}","return shadowValue;","}","#else","float getShadowValue() { return 1.0; }","#endif","vec3 applyEnvShadow(vec3 colorWithoutShadow, vec3 worldNormal) {","#if defined(USE_SHADOWMAP)","float dp  = dot(shadowLightDir, worldNormal);","float dpValue = (dp + 1.0) / 2.0;","dpValue = min(1.0, dpValue * 1.5);","float sv = getShadowValue();","vec3 result = colorWithoutShadow * min(sv, dpValue);","return result;","#else","return colorWithoutShadow;","#endif","}"].join("\n");a.exports={ShadowMapCommonUniforms:c,ShadowMapUniforms:d,ShadowMapDeclareCommonUniforms:e,ShadowMapVertexDeclaration:f,ShadowMapVertexShaderChunk:g,ShadowMapFragmentDeclaration:h}},function(a,b){function c(){i||(i=new THREE.Matrix4,j=new THREE.Ray,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3)}function d(a,b,d){c();var e=a.geometry;if(e){var f=a.material,g=f?f.side:THREE.FrontSide,h=e.attributes;i.getInverse(a.matrixWorld),j.copy(b.ray).applyMatrix4(i);var n,o,p,q,r,s,t,u,v,w,x=b.precision;if(void 0!==h.index){var y=h.index.array||e.ib;t=e.vb?e.vb:h.position.array,u=e.vb?e.vbstride:3;var z=e.offsets;z&&0!==z.length||(z=[{start:0,count:y.length,index:0}]);for(var A=0,B=z.length;A<B;++A){var C=z[A].start,D=z[A].count,E=z[A].index;for(q=C,s=C+D;q<s;q+=3)n=E+y[q],o=E+y[q+1],p=E+y[q+2],k.fromArray(t,n*u),l.fromArray(t,o*u),m.fromArray(t,p*u),v=g===THREE.BackSide?j.intersectTriangle(m,l,k,!0):j.intersectTriangle(k,l,m,g!==THREE.DoubleSide),null!==v&&(v.applyMatrix4(a.matrixWorld),w=b.ray.origin.distanceTo(v),w<x||w<b.near||w>b.far||d.push({distance:w,point:v,face:new THREE.Face3(n,o,p,THREE.Triangle.normal(k,l,m)),faceIndex:null,fragId:a.fragId,dbId:a.dbId}))}}else for(t=e.vb?e.vb:h.position.array,u=e.vb?e.vbstride:3,q=0,r=0,s=t.length;q<s;q+=3,r+=9)n=q,o=q+1,p=q+2,k.fromArray(t,n*u),l.fromArray(t,o*u),m.fromArray(t,p*u),v=f.side===THREE.BackSide?j.intersectTriangle(m,l,k,!0):j.intersectTriangle(k,l,m,f.side!==THREE.DoubleSide),null!==v&&(v.applyMatrix4(a.matrixWorld),w=b.ray.origin.distanceTo(v),w<x||w<b.near||w>b.far||d.push({distance:w,point:v,face:new THREE.Face3(n,o,p,THREE.Triangle.normal(k,l,m)),faceIndex:null,fragId:a.fragId,dbId:a.dbId}))}}function e(a,b,d){c();var e=b.linePrecision,f=e*e,g=a.geometry;if(g){i.getInverse(a.matrixWorld),j.copy(b.ray).applyMatrix4(i);var h,k,l,m,n,o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,s=a.mode===THREE.LineStrip?1:2;if(g instanceof THREE.BufferGeometry){var t=g.attributes;if(void 0!==t.index){var u=g.ib?g.ib:t.index.array;h=g.vb?g.vb:t.position.array,k=g.vb?g.vbstride:3;var v=g.offsets;v&&0!==v.length||(v=[{start:0,count:u.length,index:0}]);for(var w=0;w<v.length;w++){var x=v[w].start,y=v[w].count,z=v[w].index;for(n=x;n<x+y-1;n+=s){var A=z+u[n],B=z+u[n+1];o.fromArray(h,A*k),p.fromArray(h,B*k),m=j.distanceSqToSegment(o,p,r,q),m>f||(l=j.origin.distanceTo(r),l<b.near||l>b.far||d.push({distance:l,point:q.clone().applyMatrix4(a.matrixWorld),face:null,faceIndex:null,fragId:a.fragId,dbId:a.dbId}))}}}else for(h=g.vb?g.vb:t.position.array,k=g.vb?g.vbstride:3,n=0;n<h.length/k-1;n+=s)o.fromArray(h,k*n),p.fromArray(h,k*n+k),m=j.distanceSqToSegment(o,p,r,q),m>f||(l=j.origin.distanceTo(r),l<b.near||l>b.far||d.push({distance:l,point:q.clone().applyMatrix4(a.matrixWorld),face:null,faceIndex:null,fragId:a.fragId,dbId:a.dbId}))}}}function f(a,b,c){a.isLine?e(a,b,c):d(a,b,c)}function g(a,b,c,d){if(a instanceof THREE.Mesh?f(a,b,c):a.raycast(b,c),d===!0)for(var e=a.children,h=0,i=e.length;h<i;h++)g(e[h],b,c,!0)}function h(a,b,c,d){g(a,b,c,d),c.sort(n)}var i,j,k,l,m,n=function(a,b){return a.distance-b.distance};a.exports={meshRayCast:d,lineRayCast:e,rayCast:f,intersectObject:h}},function(a,b,c){function d(a){this.geoms=[null],this.numGeomsInMemory=0,this.geomMemory=0,this.gpuMeshMemory=0,this.gpuNumMeshes=0,this.geomPolyCount=0,this.instancePolyCount=0,this.is2d=a.is2d(),this.svf=a.getData();var b=this.svf.geomMetadata?this.svf.geomMetadata.primCounts.length:0;if(this.geomBoxes=new Float32Array(6*Math.max(1,b)),this.svf.packFileTotalSize){var c=this.svf.packFileTotalSize-3*this.svf.primitiveCount*2;c<=e.GPU_MEMORY_LIMIT&&b<e.GPU_OBJECT_LIMIT&&(this.svf.disableStreaming=!0)}}var e=c(21);d.prototype.getGeometry=function(a){return this.geoms[a]},d.prototype.chooseMemoryType=function(a,b,c,d){var f=e.GPU_MEMORY_LIMIT,g=2*f,h=e.GPU_OBJECT_LIMIT;if(this.isf2d&&(g*=2),this.disableStreaming||d<f&&c<h)a.streamingDraw=!1,a.streamingIndex=!1;else if(d>=g)a.streamingDraw=!0,a.streamingIndex=!0;else{var i;i=this.is2d?100001:a.byteSize*(b||1),i<1e5&&(a.streamingDraw=!0,a.streamingIndex=!0)}},d.prototype.addGeometry=function(a,b,c){if(this.chooseMemoryType(a,b,this.geoms.length,this.gpuMeshMemory),a.streamingDraw||(this.gpuMeshMemory+=a.byteSize,this.gpuNumMeshes+=1),this.numGeomsInMemory++,(void 0===c||c<=0)&&(c=this.geoms.length),this.geoms[c]=a,this.geomBoxes.length/6<this.geoms.length){var d=new Float32Array(6*(3*this.geoms.length/2));d.set(this.geomBoxes),this.geomBoxes=d}var f=a.boundingBox;this.geomBoxes[6*c]=f.min.x,this.geomBoxes[6*c+1]=f.min.y,this.geomBoxes[6*c+2]=f.min.z,this.geomBoxes[6*c+3]=f.max.x,this.geomBoxes[6*c+4]=f.max.y,this.geomBoxes[6*c+5]=f.max.z,e.memoryOptimizedLoading&&!this.is2d&&(a.boundingBox=null,a.boundingSphere=null),this.geomMemory+=a.byteSize;var g=a.attributes.index.array||a.ib,h=g.length/3;return this.svf.geomPolyCount=this.geomPolyCount+=h,this.instancePolyCount+=h*(b||1),a.polyCount=h,a.instancePolyCount=h*(b||1),a.svfid=c,c},d.prototype.removeGeometry=function(a){var b=this.getGeometry(a);if(!b)return 0;var c=b.byteSize;return b.dispose&&b.dispose(),this.geoms[a]=null,this.geomMemory-=b.byteSize,this.numGeomsInMemory--,this.svf.geomPolyCount=this.geomPolyCount-=b.polyCount,this.instancePolyCount-=b.instancePolyCount,c},d.prototype.getModelBox=function(a,b){if(!this.geoms[a])return void b.makeEmpty();var c=6*a,d=this.geomBoxes;b.min.x=d[c],b.min.y=d[c+1],b.min.z=d[c+2],b.max.x=d[c+3],b.max.y=d[c+4],b.max.z=d[c+5]},d.prototype.dispose=function(a){if(a)for(var b=0,c=this.geoms.length;b<c;b++)this.geoms[b]&&a.deallocateGeometry(this.geoms[b])},d.prototype.printStats=function(){THREE.log("Total geometry size: "+this.geomMemory/1048576+" MB"),THREE.log("Number of meshes: "+this.geoms.length),THREE.log("Num Meshes on GPU: "+this.gpuNumMeshes),THREE.log("Net GPU geom memory used: "+this.gpuMeshMemory)},a.exports=d},function(a,b){var c={},d="undefined"!=typeof navigator?navigator.userAgent.toLowerCase():"";c.isIOSDevice=function(){return d.match(/ip(ad|hone|od)/)},c.isAndroidDevice=function(){return d.indexOf("android")!==-1},c.isMobileDevice=function(){return c.isIOSDevice()||c.isAndroidDevice()},c.isSafari=function(){return d.indexOf("safari")!==-1&&d.indexOf("chrome")===-1},c.isFirefox=function(){return d.indexOf("firefox")!==-1},c.isMac=function(){return d.indexOf("mac os")!==-1},c.isWindows=function(){return d.indexOf("win32")!==-1||d.indexOf("windows")!==-1},c.isNodeJS=function(){return"undefined"==typeof navigator},c.rescueFromPolymer=function(){return c.isSafari()?function(a){if(!window.Polymer)return a;for(var b in a)if(b.indexOf("__impl")!==-1)return a[b];return a}:function(a){return a}}(),c.memoryOptimizedLoading=!0,c.GPU_MEMORY_LIMIT=268435456,c.GPU_OBJECT_LIMIT=1e4;var e=c.isMobileDevice();e?(c.FRAGS_PERSISTENT_COUNT=2e3,c.FRAGS_PERSISTENT_MAX_COUNT=15e4,c.GEOMS_COUNT_LIMIT=8e3,c.MAX_QUEUED_GEOM_PF_FOR_LOADING=10,c.PIXEL_CULLING_THRESHOLD=1):(c.FRAGS_PERSISTENT_COUNT=1e4,c.FRAGS_PERSISTENT_MAX_COUNT=8e5,c.GEOMS_COUNT_LIMIT=3e5,c.MAX_QUEUED_GEOM_PF_FOR_LOADING=50,c.PIXEL_CULLING_THRESHOLD=1),c.pixelCullingEnable=!1,c.onDemandLoading=!1,c.pageOutGeometryEnabled=!1,c.cullGeometryOnLoading=!1,c.PAGEOUT_SUCCESS=0,c.PAGEOUT_FAIL=1,c.PAGEOUT_NONE=2,c.PAGEOUT_PERCENTAGE=.2,c.GEOMS_PAGEOUT_COUNT=c.GEOMS_COUNT_LIMIT*c.PAGEOUT_PERCENTAGE,c.forceOnDemandLoading=!0,c.RENDER_NORMAL=0,c.RENDER_HIGHLIGHTED=1,c.RENDER_HIDDEN=2,c.RENDER_SHADOWMAP=3,c.RENDER_FINISHED=4,c.OUTSIDE=0,c.INTERSECTS=1,c.CONTAINS=2,c.MESH_VISIBLE=1,c.MESH_HIGHLIGHTED=2,c.MESH_HIDE=4,c.MESH_ISLINE=8,c.MESH_MOVED=16,c.MESH_TRAVERSED=32,c.MESH_RENDERFLAG=128,a.exports=c},function(a,b,c){function d(){g||(g=new THREE.Box3)}function e(a,b,c,e){this.frags=a,this.indices=b,this.start=c,this.count=e,this.lastItem=c,this.overrideMaterial=null,this.sortDone=!1,this.numAdded=0,this.avgFrameTime=void 0,this.boundingBox=new THREE.Box3,this.boundingBoxHidden=new THREE.Box3,this.sortObjects=!1,this.sortDone=!1,this.sortByShaderDone=!1,this.depths=null,this.indicesView=null,this.frustumCulled=!0,this.forceVisible=!1,this.renderImmediate=!a.useThreeMesh,this.renderImportance=0,d()}function f(a,b,c,d){var e=!1;return c.getWorldBounds(d,g),a&&!b.intersectsBox(g)&&(e=!0),e}var g,h=c(21),i=c(19);e.prototype.getIndices=function(){return Array.isArray(this.indices)?this.indices[0]:this.indices},e.prototype.sortByMaterial=function(){if(!(this.numAdded<this.count)){var a=this.frags,b=this.getIndices();if(!b)return void THREE.warn("Only indexed RenderSubsets can be sorted.");var c=b.subarray(this.start,this.start+this.count);Array.prototype.sort.call(c,function(b,c){var d=a.getMaterialId(b),e=a.getMaterialId(c);return void 0===d?e?1:0:void 0===e?-1:d-e}),this.numAdded=0,this.sortDone=!0}},e.prototype.sortByShader=function(){if(this.sortDone&&!this.sortByShaderDone){var a=this.frags,b=this.getIndices(),c=b.subarray(this.start,this.start+this.count);Array.prototype.sort.call(c,function(b,c){var d=a.getMaterial(b),e=a.getMaterial(c),f=d.program.id-e.program.id;return f?f:d.id-e.id}),this.numAdded=0,this.sortByShaderDone=!0}},e.prototype.sortByDepth=function(){function a(a,c){b.getGeometry(a)?(b.getWorldBounds(a,e),f[c]=d.estimateDepth(e)):f[c]=-(1/0)}var b,c,d,e,f;
return function(h){if(b=this.frags,c=this.getIndices(),d=h,e=g,!c)return void THREE.warn("Only indexed RenderSubsets can be sorted.");(!this.indicesView||this.indicesView.length<this.count)&&(this.indicesView=c.subarray(this.start,this.start+this.count)),(!this.depths||this.depths.length<this.count)&&(this.depths=new Float32Array(this.count)),f=this.depths,this.forEachNoMesh(a);for(var i,j,k=1;k<f.length;k++)for(var l=k;l>0&&f[l-1]<f[l];)i=f[l-1],f[l-1]=f[l],f[l]=i,j=this.indicesView[l-1],this.indicesView[l-1]=this.indicesView[l],this.indicesView[l]=j,l--}}(),e.prototype.onFragmentAdded=function(){return function(a){this.frags.getWorldBounds(a,g),this.boundingBox.union(g),this.sortDone=!1,this.lastItem<=a&&(this.lastItem=a+1,this.numAdded++)}}(),e.prototype.forEach=function(a,b,c){var d=this.getIndices(),e=this.frags,f=!this.sortByShaderDone;if(b||c||f)for(var g=this.start,h=this.lastItem;g<h;g++){var i=d?d[g]:g,j=e.getVizmesh(i);!f||j&&j.material&&j.material.program||(f=!1),!(c||j&&j.geometry)||b&&!e.isFlagSet(i,b)||a(j,i)}else for(var g=this.start,h=this.lastItem;g<h;g++){var i=d?d[g]:g,j=e.getVizmesh(i);j&&j.geometry&&a(j,i)}f&&this.sortByShader()},e.prototype.forEachNoMesh=function(a,b,c){for(var d=this.getIndices(),e=this.frags,f=this.start,g=this.lastItem;f<g;f++){var h,i=d?d[f]:f;if(e.useThreeMesh){var j=e.getVizmesh(i);j&&(h=j.geometry)}else h=e.getGeometry(i);!c&&!h||b&&!e.isFlagSet(i,b)||a(i,f-this.start)}},e.prototype.raycast=function(){return function(a,b,c){if(a.ray.isIntersectionBox(this.boundingBox)!==!1){var d=this,e=g;this.forEach(function(f,g){if(c&&c.length){var h=0|d.frags.getDbIds(g);if(c.indexOf(h)===-1)return}d.frags.getWorldBounds(g,e),a.ray.isIntersectionBox(e)&&i.rayCast(f,a,b)},h.MESH_VISIBLE)}}}(),e.prototype.calculateBounds=function(){function a(a){e.getWorldBounds(a,f);var g=b[a];1&g?c.union(f):d.union(f)}var b,c,d,e,f;return function(){this.boundingBox.makeEmpty(),this.boundingBoxHidden.makeEmpty(),b=this.frags.vizflags,c=this.boundingBox,d=this.boundingBoxHidden,e=this.frags,f=g,this.forEachNoMesh(a)}}(),e.prototype.evalVisbility=function(a,b,c){var d,e=127&b[c];switch(a){case h.RENDER_HIDDEN:d=!(e&h.MESH_VISIBLE);break;case h.RENDER_HIGHLIGHTED:d=e&h.MESH_HIGHLIGHTED;break;default:d=1==(e&(h.MESH_VISIBLE|h.MESH_HIGHLIGHTED|h.MESH_HIDE))}return b[c]=e|(d?h.MESH_RENDERFLAG:0),d},e.prototype.applyVisibility=function(){function a(a,b){if(!a&&c.useThreeMesh||!a.geometry)return void(i&&i(b));var l=f(j,e,c,b);if(l)return a?a.visible=!1:THREE.warn("Unexpected null mesh"),void(d[b]=d[b]&~h.MESH_RENDERFLAG);var m=this.evalVisbility(g,d,b);a&&(a.visible=!!m),k=k&&!m}function b(a){if(!c.getGeometryId(a))return void(i&&i(a));var b=f(j,e,c,a);if(b)return void(d[a]=d[a]&~h.MESH_RENDERFLAG);var l=this.evalVisbility(g,d,a);k=k&&!l}var c,d,e,g,i,j,k;return function(f,l,m){k=!0,e=l,g=f,i=m;var n=e.intersectsBox(g===h.RENDER_HIDDEN?this.boundingBoxHidden:this.boundingBox);return n===h.OUTSIDE?k:(d=this.frags.vizflags,c=this.frags,j=n!==h.CONTAINS,m||c.useThreeMesh?this.forEach(a.bind(this),null,i):this.forEachNoMesh(b.bind(this),null),k)}}(),a.exports=e},function(a,b,c){function d(a,b){function c(a,b,c,d){m.compose(b,c,d);for(var e=1e-5,f=a.elements,g=m.elements,h=0;h<16;h++){var i=f[h],j=g[h];if(Math.abs(j-i)>e)return!1}return!0}var d=g();d.ib=a.ib,d.vb=a.vb,e(a,d);var h=3,i=3;this.offsets=new Float32Array(3*b),this.rotations=new Float32Array(4*b),this.scalings=new Float32Array(3*b),this.ids=new Uint8Array(i*b);var j=new THREE.Vector3,k=new THREE.Quaternion,l=new THREE.Vector3,m=new THREE.Matrix4,n=0,o=b;this.addInstance=function(a,b){return n>=o?(THREE.warn("Instance buffer is already full."),!1):(a.decompose(j,k,l),!!c(a,j,k,l)&&(this.offsets[3*n]=j.x,this.offsets[3*n+1]=j.y,this.offsets[3*n+2]=j.z,this.rotations[4*n]=k.x,this.rotations[4*n+1]=k.y,this.rotations[4*n+2]=k.z,this.rotations[4*n+3]=k.w,this.scalings[i*n]=l.x,this.scalings[i*n+1]=l.y,this.scalings[i*n+2]=l.z,f(b,this.ids,i*n),n++,!0))},this.finish=function(){if(0==n)return null;n<o&&(this.offsets=new Float32Array(this.offsets.buffer,0,3*n),this.rotations=new Float32Array(this.rotations.buffer,0,4*n),this.scalings=new Float32Array(this.scalings.buffer,0,3*n),this.ids=new Uint8Array(this.ids.buffer,0,i*n));var a=new THREE.BufferAttribute(this.offsets,3),b=new THREE.BufferAttribute(this.rotations,4),c=new THREE.BufferAttribute(this.scalings,3),e=new THREE.BufferAttribute(this.ids,h);return e.normalize=!0,e.bytesPerItem=1,a.divisor=1,b.divisor=1,c.divisor=1,e.divisor=1,d.addAttribute("instOffset",a),d.addAttribute("instRotation",b),d.addAttribute("instScaling",c),d.addAttribute("id",e),d.numInstances=n,d}}var e=c(24).copyVertexFormat,f=c(24).writeIdToBuffer,g=c(25).createBufferGeometry;a.exports=d},function(a,b,c){function d(a){this.geoms=[],this.matrices=[],this.vertexCount=0,this.material=a,this.fragIds=[],this.dbIds=[],this.worldBox=new THREE.Box3}function e(a){a.x=.5*(1+Math.atan2(a.y,a.x)/Math.PI),a.y=.5*(1+a.z),a.z=0}function f(a){var b=2*a.x-1,c=2*a.y-1,d=Math.sin(b*Math.PI),e=Math.cos(b*Math.PI),f=Math.sqrt(1-c*c),g=c;a.x=e*f,a.y=d*f,a.z=g}function g(a,b,c){b[c++]=255&a,b[c++]=a>>8&255,b[c++]=a>>16&255,b[c]=0}function h(a,b){a.vb&&a.vbstride||THREE.warn("copyVertexFormat() supports only interleaved buffers");for(var c in a.attributes)b.attributes[c]=a.attributes[c];b.attributesKeys=a.attributesKeys.slice(0),b.vbstride=a.vbstride}function i(a,b,c,d){for(var e=a[0].vbstride,f=e+1,i=0,j=0,k=0;k<a.length;k++){var l=a[k];i+=a[k].ib.length,j+=m(l)}var o=n();o.boundingBox=d.clone(),o.vb=new Float32Array(j*f),o.ib=new Uint16Array(i),h(a[0],o);var q=new THREE.BufferAttribute(null,3);q.bytesPerItem=1,q.itemOffset=e,q.normalize=!0,o.addAttribute("id",q),o.vbstride=f;for(var r=o.vb,s=o.ib,t=new Uint8Array(r.buffer),u=0,v=0,k=0;k<a.length;k++){for(var l=a[k],w=c[k],x=m(l),y=0;y<l.ib.length;y++)s[v+y]=l.ib[y]+u;for(var y=0;y<x;y++){for(var z=u+y,A=0;A<e;A++){var B=y*e+A,C=z*f+A;r[C]=l.vb[B]}var D=4*(z*f+q.itemOffset);g(w,t,D)}p(o,b[k],u,u+x),u+=x,v+=l.ib.length}return o}function j(a,b){if(a.vbstride!=b.vbstride)return!1;if(a.attributesKeys.length!=b.attributesKeys.length)return!1;for(var c=0,d=a.attributesKeys.length;c<d;c++){var e=a.attributesKeys[c],f=a.attributes[e],g=b.attributes[e];if(!g)return!1;if(f===g)return!0;if(f.itemOffset!==g.itemOffset||f.normalize!==g.normalize||f.itemSize!==g.itemSize||f.bytesPerItem!==g.bytesPerItem||f.isPattern!==g.isPattern)return!1}return!0}function k(){this.buckets=[]}function l(){this.meshes=[],this.fragId2MeshIndex=[]}var m=c(25).getVertexCount,n=c(25).createBufferGeometry,o=65535;d.prototype={constructor:d,addGeom:function(a,b,c,d,e){this.geoms.push(a),this.fragIds.push(d),this.dbIds.push(e),this.matrices.push(b.clone()),this.worldBox.union(c),this.vertexCount+=m(a)}};var p=function(){var a,b;return function(c,d,g,h){if(a||(a=new THREE.Vector3,b=new THREE.Matrix3),!c.vb)return void(c.attributes.position.count>0&&THREE.warn("Unexpected vertex buffer format: Interleaved vertex buffer expected."));g=g||0,h=h||m(c);for(var i=c.attributes.position.itemOffset,j=g;j<h;j++){var k=j*c.vbstride+i;a.set(c.vb[k],c.vb[k+1],c.vb[k+2]),a.applyMatrix4(d),c.vb[k]=a.x,c.vb[k+1]=a.y,c.vb[k+2]=a.z}var l=c.attributes.normal;if(l){var n=2==l.bytesPerItem&&2==l.itemSize;if(!n)return void THREE.warn("Unexpected normal vector storage. Normals will not be transformed correctly.");for(var o=new Uint16Array(c.vb.buffer,c.vb.byteOffset,2*c.vb.length),p=2*c.vbstride,q=2*l.itemOffset,r=65535,s=b.getNormalMatrix(d),j=g;j<h;j++){var t=j*p+q;a.set(o[t],o[t+1],0),a.divideScalar(r),f(a),a.applyMatrix3(s),a.normalize(),e(a),a.multiplyScalar(r),o[t]=a.x,o[t+1]=a.y}}}}();l.prototype={constructor:l,addContainerMesh:function(a,b,c,d,e){var f=new THREE.Mesh(a,b);this.meshes.push(f);var g=d||0,h=e||c.length,i=g+h;f.frustumCulled=!1;for(var j=this.meshes.length-1,k=g;k<i;k++){var l=c[k];this.fragId2MeshIndex[l]=j}},addSingleMesh:function(a,b,c,d,e){var f=new THREE.Mesh(a,b);f.matrix.copy(d),f.matrixAutoUpdate=!1,f.dbId=e,f.fragId=c,this.meshes.push(f),f.frustumCulled=!1,this.fragId2MeshIndex[c]=this.meshes.length-1}},k.prototype={addGeom:function(a,b,c,e,f,g){for(var h=null,i=0;i<this.buckets.length;i++){var k=this.buckets[i];if(k.material.id===b.id){var l=k.geoms[0];if(j(l,a)){var n=m(a);if(!(n+k.vertexCount>o)){h=k;break}}}}h||(h=new d(b),this.buckets.push(h)),h.addGeom(a,c,e,f,g)},finish:function(a,b,c){c||(c=new l);for(var d=0;d<this.buckets.length;d++){var e=this.buckets[d];if(1!=e.geoms.length){var f=i(e.geoms,e.matrices,e.dbIds,e.worldBox),g=a.getMaterialVariant(e.material,avp.MATERIAL_VARIANT.VERTEX_IDS,b);c.addContainerMesh(f,g,e.fragIds)}else c.addSingleMesh(e.geoms[0],e.material,e.fragIds[0],e.matrices[0],e.dbIds[0])}return c}},a.exports={Consolidation:l,ConsolidationBuilder:k,writeIdToBuffer:g,copyVertexFormat:h,mergeGeometries:i}},function(a,b,c){function d(a,b,c){var d;if(b.array)d=new THREE.BufferAttribute(b.array,b.itemSize);else{var e=a+"|"+b.bytesPerItem+"|"+b.normalize+"|"+b.isPattern+"|"+b.divisor+"|"+b.offset;if(d=m[e])return d;d=new THREE.BufferAttribute(void 0,b.itemSize),m[e]=d}return d.bytesPerItem=b.bytesPerItem,d.normalize=b.normalize,d.isPattern=b.isPattern,c&&(d.divisor=b.divisor),b.array||(b.hasOwnProperty("offset")?d.itemOffset=b.offset:THREE.warn("VB attribute is neither interleaved nor separate. Something is wrong with the buffer specificaiton.")),d}function e(a){var b="";for(var c in a.attributes)b+=c+"|";var d=n[b];return d?d:(d=Object.keys(a.attributes),n[b]=d,d)}function f(){j=new THREE.BufferAttribute(void 0,1),k=function(){this.uuid=null,this.name=null,this.id=o++,this.attributes={},this.attributesKeys=[],this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null,this.numInstances=void 0,this.streamingDraw=!1,this.streamingIndex=!1,this.svfid=void 0,this.vb=null,this.vbbuffer=void 0,this.ib=null,this.ibbuffer=void 0,this.vaos=void 0,this.vbNeedsUpdate=!1,this.vbstride=0,this.byteSize=0,this.attributesKeys=void 0,this.__webglInit=void 0},k.prototype=Object.create(THREE.BufferGeometry.prototype),k.prototype.constructor=k}function g(){return k||f(),new k}function h(a){var b=a.mesh,c=g();l.isNodeJS()&&(c.packId=a.packId,c.meshIndex=a.meshIndex),c.byteSize=0,c.vb=b.vb,c.vbbuffer=void 0,c.vbNeedsUpdate=!0,c.byteSize+=b.vb.byteLength,c.vbstride=b.vbstride,b.isLines&&(c.isLines=b.isLines),a.is2d&&(c.is2d=!0),c.numInstances=b.numInstances;for(var f in b.vblayout){var h=b.vblayout[f];c.attributes[f]=d(f,h,c.numInstances)}l.memoryOptimizedLoading?(c.attributes.index=j,c.ib=b.indices,c.ibbuffer=void 0):c.addAttribute("index",new THREE.BufferAttribute(b.indices,1)),c.attributesKeys=e(c),c.byteSize+=b.indices.byteLength,b.vb.length/b.vbstride>65535&&THREE.warn("Mesh with >65535 vertices. It will fail to draw."),c.boundingBox=(new THREE.Box3).copy(b.boundingBox),c.boundingSphere=(new THREE.Sphere).copy(b.boundingSphere),c.drawcalls=null,c.offsets=null,a.geometry=c,a.mesh=null}function i(a){return a.vb?a.vb.length/a.vbstride:a.attributes.positions?a.attributes.positions.count:0}var j,k,l=c(21),m={},n={},o=1;a.exports={meshToGeometry:h,createBufferGeometry:g,getVertexCount:i}},function(a,b,c){var d=c(21),e=c(27),f=c(28),g=c(22),h=function(a){function b(a){a.__webglVertexBuffer=Oa.createBuffer(),a.__webglColorBuffer=Oa.createBuffer(),a.__webglLineDistanceBuffer=Oa.createBuffer(),Sa.info.memory.geometries++}function c(a){a.__webglVertexBuffer=Oa.createBuffer(),a.__webglColorBuffer=Oa.createBuffer(),Sa.info.memory.geometries++}function h(a){a.__webglVertexBuffer=Oa.createBuffer(),a.__webglNormalBuffer=Oa.createBuffer(),a.__webglTangentBuffer=Oa.createBuffer(),a.__webglColorBuffer=Oa.createBuffer(),a.__webglUVBuffer=Oa.createBuffer(),a.__webglUV2Buffer=Oa.createBuffer(),a.__webglSkinIndicesBuffer=Oa.createBuffer(),a.__webglSkinWeightsBuffer=Oa.createBuffer(),a.__webglFaceBuffer=Oa.createBuffer(),a.__webglLineBuffer=Oa.createBuffer(),Sa.info.memory.geometries++}function i(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=Oa.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function j(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__lineDistanceArray=new Float32Array(1*c),a.__webglLineCount=c,i(a,b)}function k(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__webglPointCount=c,i(a,b)}function l(a,b){var c=b.geometry,d=a.faces3,e=3*d.length,f=1*d.length,g=3*d.length,h=m(b,a),i=q(h),j=o(h),k=p(h);a.__vertexArray=new Float32Array(3*e),j&&(a.__normalArray=new Float32Array(3*e)),c.hasTangents&&(a.__tangentArray=new Float32Array(4*e)),k&&(a.__colorArray=new Float32Array(3*e)),i&&(c.faceVertexUvs.length>0&&(a.__uvArray=new Float32Array(2*e)),c.faceVertexUvs.length>1&&(a.__uv2Array=new Float32Array(2*e))),b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*e),a.__skinWeightArray=new Float32Array(4*e));var l=null!==ob.get("OES_element_index_uint")&&f>21845?Uint32Array:Uint16Array;if(a.__typeArray=l,a.__faceArray=new l(3*f),a.__lineArray=new l(2*g),a.__webglFaceCount=3*f,a.__webglLineCount=2*g,h.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var n in h.attributes){var r=h.attributes[n],s={};for(var t in r)s[t]=r[t];if(!s.__webglInitialized||s.createUniqueBuffers){s.__webglInitialized=!0;var u=1;"v2"===s.type?u=2:"v3"===s.type?u=3:"v4"===s.type?u=4:"c"===s.type&&(u=3),s.size=u,s.array=new Float32Array(e*u),s.buffer=Oa.createBuffer(),s.buffer.belongsToAttribute=n,r.needsUpdate=!0,s.__original=r}a.__webglCustomAttributesList.push(s)}}a.__inittedArrays=!0}function m(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function n(a){return a&&void 0!==a.shading&&a.shading===THREE.SmoothShading}function o(a){return!(a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial)&&(n(a)?THREE.SmoothShading:THREE.FlatShading)}function p(a){return!!a.vertexColors&&a.vertexColors}function q(a){return!!(a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a instanceof THREE.ShaderMaterial)}function r(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o=a.vertices,p=a.colors,q=a.lineDistances,r=o.length,s=p.length,t=q.length,u=a.__vertexArray,v=a.__colorArray,w=a.__lineDistanceArray,x=a.verticesNeedUpdate,y=a.colorsNeedUpdate,z=a.lineDistancesNeedUpdate,A=a.__webglCustomAttributesList;if(x){for(c=0;c<r;c++)f=o[c],g=3*c,u[g]=f.x,u[g+1]=f.y,u[g+2]=f.z;Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglVertexBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,u,b)}if(y){for(d=0;d<s;d++)h=p[d],g=3*d,v[g]=h.r,v[g+1]=h.g,v[g+2]=h.b;Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglColorBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,v,b)}if(z){for(e=0;e<t;e++)w[e]=q[e];Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglLineDistanceBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,w,b)}if(A)for(i=0,j=A.length;i<j;i++)if(n=A[i],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo)){if(g=0,l=n.value.length,1===n.size)for(k=0;k<l;k++)n.array[k]=n.value[k];else if(2===n.size)for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,g+=2;else if(3===n.size)if("c"===n.type)for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.r,n.array[g+1]=m.g,n.array[g+2]=m.b,g+=3;else for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,g+=3;else if(4===n.size)for(k=0;k<l;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,n.array[g+3]=m.w,g+=4;Oa.bindBuffer(Oa.ARRAY_BUFFER,n.buffer),Oa.bufferData(Oa.ARRAY_BUFFER,n.array,b)}}function s(a,b){var c,d,e,f,g,h,i,j,k,l,m,n=a.vertices,o=a.colors,p=n.length,q=o.length,r=a.__vertexArray,s=a.__colorArray,t=a.verticesNeedUpdate,u=a.colorsNeedUpdate,v=a.__webglCustomAttributesList;if(t){for(c=0;c<p;c++)e=n[c],f=3*c,r[f]=e.x,r[f+1]=e.y,r[f+2]=e.z;Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglVertexBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,r,b)}if(u){for(d=0;d<q;d++)g=o[d],f=3*d,s[f]=g.r,s[f+1]=g.g,s[f+2]=g.b;Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglColorBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,s,b)}if(v)for(h=0,i=v.length;h<i;h++)if(m=v[h],m.needsUpdate&&(void 0===m.boundTo||"vertices"===m.boundTo)){if(f=0,k=m.value.length,1===m.size)for(j=0;j<k;j++)m.array[j]=m.value[j];else if(2===m.size)for(j=0;j<k;j++)l=m.value[j],m.array[f]=l.x,m.array[f+1]=l.y,f+=2;else if(3===m.size)if("c"===m.type)for(j=0;j<k;j++)l=m.value[j],m.array[f]=l.r,m.array[f+1]=l.g,m.array[f+2]=l.b,f+=3;else for(j=0;j<k;j++)l=m.value[j],m.array[f]=l.x,m.array[f+1]=l.y,m.array[f+2]=l.z,f+=3;else if(4===m.size)for(j=0;j<k;j++)l=m.value[j],m.array[f]=l.x,m.array[f+1]=l.y,m.array[f+2]=l.z,m.array[f+3]=l.w,f+=4;Oa.bindBuffer(Oa.ARRAY_BUFFER,m.buffer),Oa.bufferData(Oa.ARRAY_BUFFER,m.array,b)}}function t(a,b,c,d,e){if(a.__inittedArrays){var f,g,h,i,j,k,l,m,n,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J=o(e),K=p(e),L=q(e),M=J===THREE.SmoothShading,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=a.__vertexArray,Z=a.__uvArray,$=a.__uv2Array,_=a.__normalArray,aa=a.__tangentArray,ba=a.__colorArray,ca=a.__webglCustomAttributesList,da=a.__faceArray,ea=a.__lineArray,fa=b.geometry,ga=fa.verticesNeedUpdate,ha=fa.elementsNeedUpdate,ia=fa.uvsNeedUpdate,ja=fa.normalsNeedUpdate,ka=fa.tangentsNeedUpdate,la=fa.colorsNeedUpdate,ma=fa.vertices,na=a.faces3,oa=fa.faces,pa=fa.faceVertexUvs[0],qa=fa.faceVertexUvs[1];if(ga){for(f=0,g=na.length;f<g;f++)i=oa[na[f]],t=ma[i.a],u=ma[i.b],v=ma[i.c],Y[O]=t.x,Y[O+1]=t.y,Y[O+2]=t.z,Y[O+3]=u.x,Y[O+4]=u.y,Y[O+5]=u.z,Y[O+6]=v.x,Y[O+7]=v.y,Y[O+8]=v.z,O+=9;Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglVertexBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,Y,c)}if(la&&K){for(f=0,g=na.length;f<g;f++)i=oa[na[f]],l=i.vertexColors,m=i.color,3===l.length&&K===THREE.VertexColors?(z=l[0],A=l[1],B=l[2]):(z=m,A=m,B=m),ba[V]=z.r,ba[V+1]=z.g,ba[V+2]=z.b,ba[V+3]=A.r,ba[V+4]=A.g,ba[V+5]=A.b,ba[V+6]=B.r,ba[V+7]=B.g,ba[V+8]=B.b,V+=9;V>0&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglColorBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,ba,c))}if(ka&&fa.hasTangents){for(f=0,g=na.length;f<g;f++)i=oa[na[f]],n=i.vertexTangents,w=n[0],x=n[1],y=n[2],aa[T]=w.x,aa[T+1]=w.y,aa[T+2]=w.z,aa[T+3]=w.w,aa[T+4]=x.x,aa[T+5]=x.y,aa[T+6]=x.z,aa[T+7]=x.w,aa[T+8]=y.x,aa[T+9]=y.y,aa[T+10]=y.z,aa[T+11]=y.w,T+=12;Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglTangentBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,aa,c)}if(ja&&J){for(f=0,g=na.length;f<g;f++)if(i=oa[na[f]],j=i.vertexNormals,k=i.normal,3===j.length&&M)for(C=0;C<3;C++)E=j[C],_[S]=E.x,_[S+1]=E.y,_[S+2]=E.z,S+=3;else for(C=0;C<3;C++)_[S]=k.x,_[S+1]=k.y,_[S+2]=k.z,S+=3;Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglNormalBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,_,c)}if(ia&&pa&&L){for(f=0,g=na.length;f<g;f++)if(h=na[f],r=pa[h],void 0!==r)for(C=0;C<3;C++)F=r[C],Z[P]=F.x,Z[P+1]=F.y,P+=2;P>0&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglUVBuffer),Oa.bufferData(Oa.ARRAY_BUFFER,Z,c))}if(ia&&qa&&L){for(f=0,g=na.length;f<g;f++)if(h=na[f],s=qa[h],void 0!==s)for(C=0;C<3;C++)G=s[C],$[Q]=G.x,$[Q+1]=G.y,Q+=2;Q>0&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,a.__webglUV2Buffer),Oa.bufferData(Oa.ARRAY_BUFFER,$,c))}if(ha){for(f=0,g=na.length;f<g;f++)da[R]=N,da[R+1]=N+1,da[R+2]=N+2,R+=3,ea[U]=N,ea[U+1]=N+1,ea[U+2]=N,ea[U+3]=N+2,ea[U+4]=N+1,ea[U+5]=N+2,U+=6,N+=3;Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,a.__webglFaceBuffer),Oa.bufferData(Oa.ELEMENT_ARRAY_BUFFER,da,c),Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,a.__webglLineBuffer),Oa.bufferData(Oa.ELEMENT_ARRAY_BUFFER,ea,c)}if(ca)for(C=0,D=ca.length;C<D;C++)if(I=ca[C],I.__original.needsUpdate){if(W=0,X=0,1===I.size){if(void 0===I.boundTo||"vertices"===I.boundTo)for(f=0,g=na.length;f<g;f++)i=oa[na[f]],I.array[W]=I.value[i.a],I.array[W+1]=I.value[i.b],I.array[W+2]=I.value[i.c],W+=3;else if("faces"===I.boundTo)for(f=0,g=na.length;f<g;f++)H=I.value[na[f]],I.array[W]=H,I.array[W+1]=H,I.array[W+2]=H,W+=3}else if(2===I.size){if(void 0===I.boundTo||"vertices"===I.boundTo)for(f=0,g=na.length;f<g;f++)i=oa[na[f]],t=I.value[i.a],u=I.value[i.b],v=I.value[i.c],I.array[W]=t.x,I.array[W+1]=t.y,I.array[W+2]=u.x,I.array[W+3]=u.y,I.array[W+4]=v.x,I.array[W+5]=v.y,W+=6;else if("faces"===I.boundTo)for(f=0,g=na.length;f<g;f++)H=I.value[na[f]],t=H,u=H,v=H,I.array[W]=t.x,I.array[W+1]=t.y,I.array[W+2]=u.x,I.array[W+3]=u.y,I.array[W+4]=v.x,I.array[W+5]=v.y,W+=6}else if(3===I.size){var ra;if(ra="c"===I.type?["r","g","b"]:["x","y","z"],void 0===I.boundTo||"vertices"===I.boundTo)for(f=0,g=na.length;f<g;f++)i=oa[na[f]],t=I.value[i.a],u=I.value[i.b],v=I.value[i.c],I.array[W]=t[ra[0]],I.array[W+1]=t[ra[1]],I.array[W+2]=t[ra[2]],I.array[W+3]=u[ra[0]],I.array[W+4]=u[ra[1]],I.array[W+5]=u[ra[2]],I.array[W+6]=v[ra[0]],I.array[W+7]=v[ra[1]],I.array[W+8]=v[ra[2]],W+=9;else if("faces"===I.boundTo)for(f=0,g=na.length;f<g;f++)H=I.value[na[f]],t=H,u=H,v=H,I.array[W]=t[ra[0]],I.array[W+1]=t[ra[1]],I.array[W+2]=t[ra[2]],I.array[W+3]=u[ra[0]],I.array[W+4]=u[ra[1]],I.array[W+5]=u[ra[2]],I.array[W+6]=v[ra[0]],I.array[W+7]=v[ra[1]],I.array[W+8]=v[ra[2]],W+=9;else if("faceVertices"===I.boundTo)for(f=0,g=na.length;f<g;f++)H=I.value[na[f]],t=H[0],u=H[1],v=H[2],I.array[W]=t[ra[0]],I.array[W+1]=t[ra[1]],I.array[W+2]=t[ra[2]],I.array[W+3]=u[ra[0]],I.array[W+4]=u[ra[1]],I.array[W+5]=u[ra[2]],I.array[W+6]=v[ra[0]],I.array[W+7]=v[ra[1]],I.array[W+8]=v[ra[2]],W+=9}else if(4===I.size)if(void 0===I.boundTo||"vertices"===I.boundTo)for(f=0,g=na.length;f<g;f++)i=oa[na[f]],t=I.value[i.a],u=I.value[i.b],v=I.value[i.c],I.array[W]=t.x,I.array[W+1]=t.y,I.array[W+2]=t.z,I.array[W+3]=t.w,I.array[W+4]=u.x,I.array[W+5]=u.y,I.array[W+6]=u.z,I.array[W+7]=u.w,I.array[W+8]=v.x,I.array[W+9]=v.y,I.array[W+10]=v.z,I.array[W+11]=v.w,W+=12;else if("faces"===I.boundTo)for(f=0,g=na.length;f<g;f++)H=I.value[na[f]],t=H,u=H,v=H,I.array[W]=t.x,I.array[W+1]=t.y,I.array[W+2]=t.z,I.array[W+3]=t.w,I.array[W+4]=u.x,I.array[W+5]=u.y,I.array[W+6]=u.z,I.array[W+7]=u.w,I.array[W+8]=v.x,I.array[W+9]=v.y,I.array[W+10]=v.z,I.array[W+11]=v.w,W+=12;else if("faceVertices"===I.boundTo)for(f=0,g=na.length;f<g;f++)H=I.value[na[f]],t=H[0],u=H[1],v=H[2],I.array[W]=t.x,I.array[W+1]=t.y,I.array[W+2]=t.z,I.array[W+3]=t.w,I.array[W+4]=u.x,I.array[W+5]=u.y,I.array[W+6]=u.z,I.array[W+7]=u.w,I.array[W+8]=v.x,I.array[W+9]=v.y,I.array[W+10]=v.z,I.array[W+11]=v.w,W+=12;Oa.bindBuffer(Oa.ARRAY_BUFFER,I.buffer),Oa.bufferData(Oa.ARRAY_BUFFER,I.array,c)}d&&(delete a.__inittedArrays,delete a.__colorArray,delete a.__normalArray,delete a.__tangentArray,delete a.__uvArray,delete a.__uv2Array,delete a.__faceArray,delete a.__vertexArray,delete a.__lineArray,delete a.__skinIndexArray,delete a.__skinWeightArray)}}function u(a){if(a.streamingDraw){if(!a.streamingIndex){var b=a.attributes.index;b&&(b.buffer=Oa.createBuffer(),Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,b.buffer),Oa.bufferData(Oa.ELEMENT_ARRAY_BUFFER,b.array||a.ib,Oa.STATIC_DRAW))}}else{a.vb&&void 0===a.vbbuffer&&(a.vbbuffer=Oa.createBuffer(),a.vbNeedsUpdate=!0),a.ib&&void 0===a.ibbuffer&&(a.ibbuffer=Oa.createBuffer(),Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,a.ibbuffer),Oa.bufferData(Oa.ELEMENT_ARRAY_BUFFER,a.ib,Oa.STATIC_DRAW));for(var c=a.attributes,d=a.attributesKeys,e=0,f=d.length;e<f;e++){var g=d[e],h=c[g],i="index"===g;if(h.array&&void 0===h.buffer&&(h.buffer=Oa.createBuffer(),h.needsUpdate=!0),h.needsUpdate===!0){var j=i?Oa.ELEMENT_ARRAY_BUFFER:Oa.ARRAY_BUFFER;Oa.bindBuffer(j,h.buffer),Oa.bufferData(j,h.array,Oa.STATIC_DRAW),h.needsUpdate=!1}}a.vbNeedsUpdate&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,a.vbbuffer),Oa.bufferData(Oa.ARRAY_BUFFER,a.vb,Oa.STATIC_DRAW),a.vbNeedsUpdate=!1,a.discardAfterUpload&&(a.vb=null))}}function v(a,b,c,d){var e;if(c.streamingDraw)return c.vaos=null,!1;if(c.offsets&&c.offsets.length>1)return c.vaos=null,!1;if(!Ra)return c.vaos=null,!1;void 0===c.vaos&&(c.vaos=[]),e=Ra.createVertexArrayOES(),c.vaos.push({geomhash:b.id,uv:d,vao:e}),Ra.bindVertexArrayOES(e);var f=c.attributes.index;f&&Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,c.ibbuffer||f.buffer);for(var g=null,h=b.attributes,i=b.attributesKeys,j=c.vbstride,k=c.offsets&&c.offsets.length?c.offsets[0].index:0,l=0,m=i.length;l<m;l++){var n=i[l],o=h[n];if(o>=0){var p=c.attributes[n];if("uv"===n&&d&&(p=c.attributes["uv"+(d+1)]),!p){Ra.bindVertexArrayOES(null);for(var q=0;q<c.vaos.length;q++)Ra.deleteVertexArrayOES(c.vaos[q].vao);return c.vaos=null,!1}var r=Oa.FLOAT,s=p.bytesPerItem||4;1===s?r=Oa.UNSIGNED_BYTE:2===s&&(r=Oa.UNSIGNED_SHORT),Oa.enableVertexAttribArray(o),void 0!==p.itemOffset?(g!=c.vbbuffer&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,c.vbbuffer),g=c.vbbuffer),Oa.vertexAttribPointer(o,p.itemSize,r,!!p.normalize,4*j,4*(p.itemOffset+k*j))):(Oa.bindBuffer(Oa.ARRAY_BUFFER,p.buffer),g=p.buffer,Oa.vertexAttribPointer(o,p.itemSize,r,!!p.normalize,0,k*p.itemSize*s)),Qa&&c.numInstances&&Qa.vertexAttribDivisorANGLE(o,p.divisor||0)}}return!0}function w(a,b,c,d){var e=c.vaos;if(e)for(var f=0,g=e.length;f<g;f++){var h=e[f];if(h.geomhash===b.id&&h.uv===d)return Ra.bindVertexArrayOES(h.vao),!0}else if(null===e)return!1;return v(a,b,c,d)}function x(a,b){var c=eb[a];return c||(c=Oa.createBuffer(),eb[a]=c),Oa.bindBuffer(Oa.ARRAY_BUFFER,c),Oa.bufferData(Oa.ARRAY_BUFFER,b,Oa.DYNAMIC_DRAW),c}function y(a,b,c,d,e){var f,g=b.attributes,h=b.attributesKeys,i=0;if(e)if(!e.buffer&&c.streamingDraw){var j=eb.index;j||(j=Oa.createBuffer(),eb.index=j),Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,j),Oa.bufferData(Oa.ELEMENT_ARRAY_BUFFER,e.array||c.ib,Oa.DYNAMIC_DRAW)}else Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,c.ibbuffer||e.buffer);for(var k=0,l=h.length;k<l;k++){var m=h[k],n=g[m];if(n>=0){var o=c.attributes[m];if(o){var p,q,r=void 0!==o.itemOffset;r?(p=c.vbstride,q=o.itemOffset,i!==f&&(c.streamingDraw?i=x("interleavedVB",c.vb):(i=c.vbbuffer,Oa.bindBuffer(Oa.ARRAY_BUFFER,i)),f=i)):(p=o.itemSize,q=0,c.streamingDraw?i=x(m,o.array):(i=o.buffer,Oa.bindBuffer(Oa.ARRAY_BUFFER,i)));var s=Oa.FLOAT,t=o.bytesPerItem||4;1===t?s=Oa.UNSIGNED_BYTE:2===t&&(s=Oa.UNSIGNED_SHORT),r&&(t=4),nb.enableAttribute(n),Oa.vertexAttribPointer(n,o.itemSize,s,o.normalize,p*t,(q+d*p)*t),Qa&&c.numInstances&&Qa.vertexAttribDivisorANGLE(n,o.divisor||0)}else if(a.defaultAttributeValues){var u=a.defaultAttributeValues[m];u&&2===u.length?Oa.vertexAttrib2fv(n,a.defaultAttributeValues[m]):u&&3===u.length&&Oa.vertexAttrib3fv(n,a.defaultAttributeValues[m])}}}nb.disableUnusedAttributes()}function z(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?a.z-b.z:a.id-b.id}function A(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?b.z-a.z:a.id-b.id}function B(a){D(a,!0)}function C(a){D(a,!1)}function D(a,b,c){var d,e;if(c||a.visible!==!1){if(a instanceof THREE.Scene||a instanceof THREE.Group);else if(a instanceof g)a.forEach(b?B:C);else if(L(a),a instanceof THREE.Light)Ha.push(a);else{var f=Ia[a.id];if(f&&(a.frustumCulled===!1||fb.intersectsObject(a)===!0))for(d=0,e=f.length;d<e;d++){var h=f[d];K(h),h.render=!0,b===!0&&(ib.setFromMatrixPosition(a.matrixWorld),ib.applyProjection(gb),h.z=ib.z)}}if(a.children)for(d=0,e=a.children.length;d<e;d++)D(a.children[d],b,c)}}function E(a,b){if(!b.getCustomOverrideMaterial)return b;var c=b.getCustomOverrideMaterial(a);return c?c:b}function F(a,b,c,d,e){for(var f,g=0,h=a.length;g<h;g++){var i=a[g],j=i.object,k=i.buffer;if(e)f=E(i.material,e);else{if(f=i.material,!f)continue;X(f)}if(f.twoPassTransparency){var l=f.side;f.side=THREE.BackSide,G(f,b,c,d,k,e,j),f.side=THREE.FrontSide,G(f,b,c,d,k,e,j),f.side=l}else G(f,b,c,d,k,e,j)}}function G(a,b,c,d,e,f,g){if(Sa.setMaterialFaces(a),e instanceof THREE.BufferGeometry?Sa.renderBufferDirect(b,c,d,a,e,g):Sa.renderBuffer(b,c,d,a,e,g),a.decals)for(var h=a.decals,i=0,j=h.length;i<j;i++){var k=h[i];a=k.material,X(a),Sa.setMaterialFaces(a),e instanceof THREE.BufferGeometry&&Sa.renderBufferDirect(b,c,d,a,e,g,k.uv)}}function H(a,b){if(a.visible&&!a.hide){var c;if(Tb)c=E(a.material,Tb);else{if(c=a.material,!c)return;X(c)}if(c.twoPassTransparency){var d=c.side;c.side=THREE.BackSide,I(a,c),c.side=THREE.FrontSide,I(a,c),c.side=d}else I(a,c)}}function I(a,b){if(Sa.setMaterialFaces(b),Sa.renderBufferDirect(Qb,Rb,Sb,b,a.geometry,a),b.decals)for(var c=b.decals,d=0,e=c.length;d<e;d++){var f=c[d];b=f.material,X(b),Sa.setMaterialFaces(b),Sa.renderBufferDirect(Qb,Rb,Sb,b,a.geometry,a,f.uv)}}function J(a,b,c,d,e,f){Pb=b,Qb=c,Rb=d,Sb=e,Tb=f||null,a.forEach(H,a.forceVisible?1:128,!1)}function K(a){var b=a.object,c=a.buffer,d=b.geometry,e=b.material;if(e instanceof THREE.MeshFaceMaterial){var f=d instanceof THREE.BufferGeometry?0:c.materialIndex;e=e.materials[f],a.material=e,e.transparent?Na.push(a):Ma.push(a)}else e&&(a.material=e,e.transparent?Na.push(a):Ma.push(a))}function L(a){void 0===a.__webglInit&&(a.__webglInit=!0,a.addEventListener("removed",Fb));var d=a.geometry;if(void 0===d||void 0===d.__webglInit&&(d.__webglInit=!0,d.addEventListener("dispose",Gb),d instanceof THREE.BufferGeometry||(a instanceof THREE.Mesh?N(a,d):a instanceof THREE.Line?void 0===d.__webglVertexBuffer&&(b(d),j(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0,d.lineDistancesNeedUpdate=!0):a instanceof THREE.PointCloud&&void 0===d.__webglVertexBuffer&&(c(d),k(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0))),void 0===a.__webglActive)if(a.__webglActive=!0,a instanceof THREE.Mesh){if(d instanceof THREE.BufferGeometry)O(Ia,d,a);else if(d instanceof THREE.Geometry)for(var e=Ub[d.id],f=0,g=e.length;f<g;f++)O(Ia,e[f],a)}else a instanceof THREE.Line||a instanceof THREE.PointCloud?O(Ia,d,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&P(Ja,a)}function M(a,b){for(var c,d,e=ob.get("OES_element_index_uint")?4294967296:65535,f={},g=a.morphTargets?a.morphTargets.length:0,h=a.morphNormals?a.morphNormals.length:0,i={},j=[],k=0,l=a.faces.length;k<l;k++){var m=a.faces[k],n=b?m.materialIndex:0;n in f||(f[n]={hash:n,counter:0}),c=f[n].hash+"_"+f[n].counter,c in i||(d={id:Vb++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:g,numMorphNormals:h},i[c]=d,j.push(d)),i[c].vertices+3>e&&(f[n].counter+=1,c=f[n].hash+"_"+f[n].counter,c in i||(d={id:Vb++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:g,numMorphNormals:h},i[c]=d,j.push(d))),i[c].faces3.push(k),i[c].vertices+=3}return j}function N(a,b){var c=a.material,d=!1;void 0!==Ub[b.id]&&b.groupsNeedUpdate!==!0||(delete Ia[a.id],Ub[b.id]=M(b,c instanceof THREE.MeshFaceMaterial),b.groupsNeedUpdate=!1);for(var e=Ub[b.id],f=0,g=e.length;f<g;f++){var i=e[f];void 0===i.__webglVertexBuffer?(h(i),l(i,a),b.verticesNeedUpdate=!0,b.morphTargetsNeedUpdate=!0,b.elementsNeedUpdate=!0,b.uvsNeedUpdate=!0,b.normalsNeedUpdate=!0,b.tangentsNeedUpdate=!0,b.colorsNeedUpdate=!0,d=!0):d=!1,(d||void 0===a.__webglActive)&&O(Ia,i,a)}a.__webglActive=!0}function O(a,b,c){var d=c.id;a[d]=a[d]||[],a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function P(a,b){a.push({id:null,object:b,opaque:null,transparent:null,z:0})}function Q(a){var b,c,d=a.geometry;if(d instanceof THREE.BufferGeometry)u(d);else if(a instanceof THREE.Mesh){d.groupsNeedUpdate===!0&&N(a,d);for(var e=Ub[d.id],f=0,g=e.length;f<g;f++){var h=e[f];c=m(a,h),b=c.attributes&&R(c),(d.verticesNeedUpdate||d.morphTargetsNeedUpdate||d.elementsNeedUpdate||d.uvsNeedUpdate||d.normalsNeedUpdate||d.colorsNeedUpdate||d.tangentsNeedUpdate||b)&&t(h,a,Oa.DYNAMIC_DRAW,!d.dynamic,c)}d.verticesNeedUpdate=!1,d.morphTargetsNeedUpdate=!1,d.elementsNeedUpdate=!1,d.uvsNeedUpdate=!1,d.normalsNeedUpdate=!1,d.colorsNeedUpdate=!1,d.tangentsNeedUpdate=!1,c.attributes&&S(c)}else a instanceof THREE.Line?(c=m(a,d),b=c.attributes&&R(c),(d.verticesNeedUpdate||d.colorsNeedUpdate||d.lineDistancesNeedUpdate||b)&&r(d,Oa.DYNAMIC_DRAW),
d.verticesNeedUpdate=!1,d.colorsNeedUpdate=!1,d.lineDistancesNeedUpdate=!1,c.attributes&&S(c)):a instanceof THREE.PointCloud&&(c=m(a,d),b=c.attributes&&R(c),(d.verticesNeedUpdate||d.colorsNeedUpdate||b)&&s(d,Oa.DYNAMIC_DRAW),d.verticesNeedUpdate=!1,d.colorsNeedUpdate=!1,c.attributes&&S(c))}function R(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function S(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function T(a){a instanceof THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line?delete Ia[a.id]:(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&U(Ja,a),delete a.__webglInit,delete a.__webglActive}function U(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function V(a,b){if(b.textureMaps)for(var c=0;c<e.PrismMaps.length;c++){var d=e.PrismMaps[c],f=b.textureMaps[d+"_map"];if(f){var g=f.textureObj.properties.booleans;a[d]={S:!g.texture_URepeat.values[0],T:!g.texture_VRepeat.values[0]}}}}function W(a,b,c,d){a.addEventListener("dispose",Jb);var f=Wb[a.type];if(f){var g=THREE.ShaderLib[f];a.__webglShader={uniforms:THREE.UniformsUtils.clone(g.uniforms),vertexShader:g.vertexShader,fragmentShader:g.fragmentShader}}else a.__webglShader={uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader};var h=ua(b),i={precision:xa,precisionFragment:ya,supportsVertexTextures:wb,haveTextureLod:!!ob.get("EXT_shader_texture_lod"),map:!!a.map,envMap:!!a.envMap,irradianceMap:!!a.irradianceMap,envIsSpherical:a.envMap&&a.envMap.mapping==THREE.SphericalReflectionMapping,envGammaEncoded:a.envMap&&a.envMap.GammaEncoded,irrGammaEncoded:a.irradianceMap&&a.irradianceMap.GammaEncoded,envRGBM:a.envMap&&a.envMap.RGBM,irrRGBM:a.irradianceMap&&a.irradianceMap.RGBM,lightMap:!!a.lightMap,bumpMap:ob.get("OES_standard_derivatives")&&!!a.bumpMap,normalMap:ob.get("OES_standard_derivatives")&&!!a.normalMap,specularMap:!!a.specularMap,alphaMap:!!a.alphaMap,vertexColors:a.vertexColors,vertexIds:a.vertexIds,useInstancing:a.useInstancing,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:Ea,maxDirLights:h.directional,maxPointLights:h.point,maxSpotLights:h.spot,maxHemiLights:h.hemi,alphaTest:a.alphaTest,metal:a.metal,clearcoat:a.clearcoat,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide,mrtNormals:a.mrtNormals,mrtIdBuffer:a.mrtIdBuffer,tonemapOutput:a.tonemapOutput,packedNormals:a.packedNormals,hatchPattern:!!a.hatchParams,numCutplanes:a.cutplanes?a.cutplanes.length:0,mapInvert:a.map&&a.map.invert,mapClampS:a.map&&a.map.clampS,mapClampT:a.map&&a.map.clampT,bumpMapClampS:a.bumpMap&&a.bumpMap.clampS,bumpMapClampT:a.bumpMap&&a.bumpMap.clampT,normalMapClampS:a.normalMap&&a.normalMap.clampS,normalMapClampT:a.normalMap&&a.normalMap.clampT,specularMapClampS:a.specularMap&&a.specularMap.clampS,specularMapClampT:a.specularMap&&a.specularMap.clampT,alphaMapInvert:a.alphaMap&&a.alphaMap.invert,alphaMapClampS:a.alphaMap&&a.alphaMap.clampS,alphaMapClampT:a.alphaMap&&a.alphaMap.clampT};a.isPrismMaterial&&(V(i,a),i.isPrism=!0);var j=[];f?j.push(f):(j.push(a.fragmentShader),j.push(a.vertexShader));for(var k in a.defines)j.push(k),j.push(a.defines[k]);var l,m;for(l in i)j.push(l),j.push(i[l]);var n,o=j.join();for(l=0,m=Ta.length;l<m;l++){var p=Ta[l];if(p.code===o){n=p,n.usedTimes++;break}}void 0===n&&(n=new e.WebGLProgram(Sa,o,a,i),Ta.push(n),Sa.info.memory.programs=Ta.length),a.program=n,a.uniformsList=[];for(var q in a.__webglShader.uniforms){var r=a.program.uniforms[q];r&&a.uniformsList.push([a.__webglShader.uniforms[q],r])}}function X(a){a.transparent===!0&&nb.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha),nb.setDepthTest(a.depthTest),nb.setDepthWrite(a.depthWrite),nb.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function Y(a,b,c,d,e){Za=0,d.needsUpdate&&(d.program&&Ob(d),W(d,b,c,e),d.needsUpdate=!1);var g=!1,h=!1,i=!1,j=d.program,k=j.uniforms,l=d.__webglShader.uniforms;if(j.id!==Ua&&(Oa.useProgram(j.program),Ua=j.id,g=!0,h=!0,i=!0),d.id!==Wa&&(Wa===-1&&(i=!0),Wa=d.id,h=!0),(g||a!==Xa)&&(Oa.uniformMatrix4fv(k.projectionMatrix,!1,a.projectionMatrix.elements),Ea&&Oa.uniform1f(k.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==Xa&&(Xa=a),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.isPrismMaterial||d.envMap)&&null!==k.cameraPosition&&(ib.setFromMatrixPosition(a.matrixWorld),Oa.uniform3f(k.cameraPosition,ib.x,ib.y,ib.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.isPrismMaterial||d.skinning)&&(null!==k.viewMatrix&&Oa.uniformMatrix4fv(k.viewMatrix,!1,a.matrixWorldInverse.elements),null!==k.viewMatrixInverse&&Oa.uniformMatrix4fv(k.viewMatrixInverse,!1,hb.elements),k.mvpMatrix&&Oa.uniformMatrix4fv(k.mvpMatrix,!1,gb.elements),i?(ba(l,d),ca(l,!0)):ca(l,!1))),h){c&&d.fog&&aa(l,c),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.isPrismMaterial||d.lights)&&(kb&&(i=!0,ma(b),kb=!1),i?(ga(l,lb),ha(l,!0)):ha(l,!1)),(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)&&(Z(l,d),ba(l,d)),d instanceof THREE.LineBasicMaterial?$(l,d):d instanceof THREE.LineDashedMaterial?($(l,d),_(l,d)):d instanceof THREE.MeshPhongMaterial?da(l,d):d instanceof THREE.MeshLambertMaterial?fa(l,d):d instanceof THREE.MeshDepthMaterial?(l.mNear.value=a.near,l.mFar.value=a.far,l.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial?l.opacity.value=d.opacity:d.isPrismMaterial&&(ea(l,d),ba(l,d)),f.ShadowRender&&d.shadowMap&&f.ShadowRender.RefreshUniformsShadow(l,d);var m=l.cutplanes;d.cutplanes&&d.cutplanes.length>0&&m&&(m.value=d.cutplanes,m._array&&m._array.length!=4*d.cutplanes&&(m._array=void 0)),d.hatchParams&&l.hatchParams&&(l.hatchParams.value.copy(d.hatchParams),l.hatchTintColor.value.copy(d.hatchTintColor),l.hatchTintIntensity.value=d.hatchTintIntensity),ka(d.uniformsList)}if(ia(k,e,a),null!==k.modelMatrix&&Oa.uniformMatrix4fv(k.modelMatrix,!1,e.matrixWorld.elements),k.modelId){if(k.dbId){var n=e.dbId||e.fragId||0;Oa.uniform3f(k.dbId,(255&n)/255,(n>>8&255)/255,(n>>16&255)/255)}var o=e.modelId;Oa.uniform3f(k.modelId,(255&o)/255,(o>>8&255)/255,(n>>24&255)/255)}else if(null!==k.dbId){var n=e.dbId||e.fragId||0;Oa.uniform3f(k.dbId,(255&n)/255,(n>>8&255)/255,(n>>16&255)/255)}if(k.themingColor){var p=e.themingColor;p instanceof THREE.Vector4?Oa.uniform4f(k.themingColor,p.x,p.y,p.z,p.w):Oa.uniform4f(k.themingColor,0,0,0,0)}return j}function Z(a,b){function c(a,b,c){var d=c.offset,e=c.repeat;if(b){var f=b.value;c.matrix?f.copy(c.matrix):f.identity(),f.elements[6]+=d.x,f.elements[7]+=d.y,f.elements[0]*=e.x,f.elements[3]*=e.x,f.elements[1]*=e.y,f.elements[4]*=e.y}else a.offsetRepeat.value.set(d.x,d.y,e.x,e.y)}a.opacity.value=b.opacity,a.diffuse.value.copy(b.color),a.map.value=b.map,a.lightMap.value=b.lightMap,a.specularMap.value=b.specularMap,a.alphaMap.value=b.alphaMap,b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale),b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale)),b.alphaMap&&c(a,a.texMatrixAlpha,b.alphaMap);var d;b.normalMap?d=b.normalMap:b.bumpMap&&(d=b.bumpMap),void 0!==d&&c(a,a.texMatrixBump,d);var e;b.map?e=b.map:b.specularMap&&(e=b.specularMap),void 0!==e&&c(a,a.texMatrix,e),a.envMap.value=b.envMap,a.irradianceMap&&(a.irradianceMap.value=b.irradianceMap),a.reflectivity.value=b.reflectivity,a.refractionRatio.value=b.refractionRatio}function $(a,b){a.diffuse.value=b.color,a.opacity.value=b.opacity}function _(a,b){a.dashSize.value=b.dashSize,a.totalSize.value=b.dashSize+b.gapSize,a.scale.value=b.scale}function aa(a,b){a.fogColor.value=b.color,b instanceof THREE.Fog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b instanceof THREE.FogExp2&&(a.fogDensity.value=b.density)}function ba(a,b){a.envMap&&(a.envMap.value=b.envMap),a.irradianceMap&&(a.irradianceMap.value=b.irradianceMap),a.envMapExposure&&(a.envMapExposure.value=b.envMapExposure),a.envRotationSin&&a.envRotationCos&&(a.envRotationSin.value=b.envRotationSin,a.envRotationCos.value=b.envRotationCos)}function ca(a,b){a.envMap&&(a.envMap.needsUpdate=b),a.irradianceMap&&(a.irradianceMap.needsUpdate=b),a.envMapExposure&&(a.envMapExposure.needsUpdate=b)}function da(a,b){if(a.shininess.value=b.shininess,a.reflMipIndex){var c=Math.log(Math.max(1+1e-10,b.shininess));a.reflMipIndex.value=Math.max(0,-.72134752*c+5.5)}a.emissive&&a.emissive.value.copy(b.emissive),a.specular.value.copy(b.specular),a.exposureBias&&(a.exposureBias.value=b.exposureBias)}function ea(a,b){function c(a,b,c){a[c].value=b[c],null!=b[c]&&(a[c+"_texMatrix"].value=(new THREE.Matrix3).copy(b[c].matrix),a[c+"_invert"].value=b[c].invert)}function d(a,b,c){a[c].value=b[c],null!=b[c]&&(a[c+"_texMatrix"].value=(new THREE.Matrix3).copy(b[c].matrix),a[c+"_bumpScale"].value=(new THREE.Vector2).copy(b[c].bumpScale),a[c+"_bumpmapType"].value=b[c].bumpmapType)}switch(a.exposureBias.value=b.exposureBias,a.surface_albedo.value=(new THREE.Color).copy(b.surface_albedo),a.surface_roughness.value=b.surface_roughness,a.surface_anisotropy.value=b.surface_anisotropy,a.surface_rotation.value=b.surface_rotation,c(a,b,"surface_albedo_map"),c(a,b,"surface_roughness_map"),c(a,b,"surface_cutout_map"),c(a,b,"surface_anisotropy_map"),c(a,b,"surface_rotation_map"),d(a,b,"surface_normal_map"),b.prismType){case"PrismOpaque":a.opaque_albedo.value=(new THREE.Color).copy(b.opaque_albedo),a.opaque_luminance_modifier.value=(new THREE.Color).copy(b.opaque_luminance_modifier),a.opaque_f0.value=b.opaque_f0,a.opaque_luminance.value=b.opaque_luminance,c(a,b,"opaque_albedo_map"),c(a,b,"opaque_luminance_modifier_map"),c(a,b,"opaque_f0_map");break;case"PrismMetal":a.metal_f0.value=(new THREE.Color).copy(b.metal_f0),c(a,b,"metal_f0_map");break;case"PrismLayered":a.layered_f0.value=b.layered_f0,a.layered_diffuse.value=(new THREE.Color).copy(b.layered_diffuse),a.layered_fraction.value=b.layered_fraction,a.layered_bottom_f0.value=(new THREE.Color).copy(b.layered_bottom_f0),a.layered_roughness.value=b.layered_roughness,a.layered_anisotropy.value=b.layered_anisotropy,a.layered_rotation.value=b.layered_rotation,c(a,b,"layered_bottom_f0_map"),c(a,b,"layered_f0_map"),c(a,b,"layered_diffuse_map"),c(a,b,"layered_fraction_map"),c(a,b,"layered_roughness_map"),c(a,b,"layered_anisotropy_map"),c(a,b,"layered_rotation_map"),d(a,b,"layered_normal_map");break;case"PrismTransparent":a.transparent_color.value=(new THREE.Color).copy(b.transparent_color),a.transparent_distance.value=b.transparent_distance,a.transparent_ior.value=b.transparent_ior;break;case"PrismWood":a.wood_fiber_cosine_enable.value=b.wood_fiber_cosine_enable,a.wood_fiber_cosine_bands.value=b.wood_fiber_cosine_bands,a.wood_fiber_cosine_weights.value=(new THREE.Vector4).copy(b.wood_fiber_cosine_weights),a.wood_fiber_cosine_frequencies.value=(new THREE.Vector4).copy(b.wood_fiber_cosine_frequencies),a.wood_fiber_perlin_enable.value=b.wood_fiber_perlin_enable,a.wood_fiber_perlin_bands.value=b.wood_fiber_perlin_bands,a.wood_fiber_perlin_weights.value=(new THREE.Vector4).copy(b.wood_fiber_perlin_weights),a.wood_fiber_perlin_frequencies.value=(new THREE.Vector4).copy(b.wood_fiber_perlin_frequencies),a.wood_fiber_perlin_scale_z.value=b.wood_fiber_perlin_scale_z,a.wood_growth_perlin_enable.value=b.wood_growth_perlin_enable,a.wood_growth_perlin_bands.value=b.wood_growth_perlin_bands,a.wood_growth_perlin_weights.value=(new THREE.Vector4).copy(b.wood_growth_perlin_weights),a.wood_growth_perlin_frequencies.value=(new THREE.Vector4).copy(b.wood_growth_perlin_frequencies),a.wood_latewood_ratio.value=b.wood_latewood_ratio,a.wood_earlywood_sharpness.value=b.wood_earlywood_sharpness,a.wood_latewood_sharpness.value=b.wood_latewood_sharpness,a.wood_ring_thickness.value=b.wood_ring_thickness,a.wood_earlycolor_perlin_enable.value=b.wood_earlycolor_perlin_enable,a.wood_earlycolor_perlin_bands.value=b.wood_earlycolor_perlin_bands,a.wood_earlycolor_perlin_weights.value=(new THREE.Vector4).copy(b.wood_earlycolor_perlin_weights),a.wood_earlycolor_perlin_frequencies.value=(new THREE.Vector4).copy(b.wood_earlycolor_perlin_frequencies),a.wood_early_color.value=(new THREE.Color).copy(b.wood_early_color),a.wood_use_manual_late_color.value=b.wood_use_manual_late_color,a.wood_manual_late_color.value=(new THREE.Color).copy(b.wood_manual_late_color),a.wood_latecolor_perlin_enable.value=b.wood_latecolor_perlin_enable,a.wood_latecolor_perlin_bands.value=b.wood_latecolor_perlin_bands,a.wood_latecolor_perlin_weights.value=(new THREE.Vector4).copy(b.wood_latecolor_perlin_weights),a.wood_latecolor_perlin_frequencies.value=(new THREE.Vector4).copy(b.wood_latecolor_perlin_frequencies),a.wood_late_color_power.value=b.wood_late_color_power,a.wood_diffuse_perlin_enable.value=b.wood_diffuse_perlin_enable,a.wood_diffuse_perlin_bands.value=b.wood_diffuse_perlin_bands,a.wood_diffuse_perlin_weights.value=(new THREE.Vector4).copy(b.wood_diffuse_perlin_weights),a.wood_diffuse_perlin_frequencies.value=(new THREE.Vector4).copy(b.wood_diffuse_perlin_frequencies),a.wood_diffuse_perlin_scale_z.value=b.wood_diffuse_perlin_scale_z,a.wood_use_pores.value=b.wood_use_pores,a.wood_pore_type.value=b.wood_pore_type,a.wood_pore_radius.value=b.wood_pore_radius,a.wood_pore_cell_dim.value=b.wood_pore_cell_dim,a.wood_pore_color_power.value=b.wood_pore_color_power,a.wood_pore_depth.value=b.wood_pore_depth,a.wood_use_rays.value=b.wood_use_rays,a.wood_ray_color_power.value=b.wood_ray_color_power,a.wood_ray_seg_length_z.value=b.wood_ray_seg_length_z,a.wood_ray_num_slices.value=b.wood_ray_num_slices,a.wood_ray_ellipse_z2x.value=b.wood_ray_ellipse_z2x,a.wood_ray_ellipse_radius_x.value=b.wood_ray_ellipse_radius_x,a.wood_use_latewood_bump.value=b.wood_use_latewood_bump,a.wood_latewood_bump_depth.value=b.wood_latewood_bump_depth,a.wood_use_groove_roughness.value=b.wood_use_groove_roughness,a.wood_groove_roughness.value=b.wood_groove_roughness,a.wood_diffuse_lobe_weight.value=b.wood_diffuse_lobe_weight,c(a,b,"wood_curly_distortion_map"),null!=a.wood_curly_distortion_map.value&&(a.wood_curly_distortion_map.value.minFilter=THREE.NearestFilter,a.wood_curly_distortion_map.value.magFilter=THREE.NearestFilter,a.wood_curly_distortion_enable.value=b.wood_curly_distortion_enable,a.wood_curly_distortion_scale.value=b.wood_curly_distortion_scale);break;default:THREE.warn("Unknown prism type: "+b.prismType)}a.envExponentMin.value=b.envExponentMin,a.envExponentMax.value=b.envExponentMax,a.envExponentCount.value=b.envExponentCount}function fa(a,b){a.emissive.value.copy(b.emissive),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function ga(a,b){a.ambientLightColor.value=b.ambient,a.directionalLightColor.value=b.directional.colors,a.directionalLightDirection.value=b.directional.positions,a.pointLightColor.value=b.point.colors,a.pointLightPosition.value=b.point.positions,a.pointLightDistance.value=b.point.distances,a.spotLightColor.value=b.spot.colors,a.spotLightPosition.value=b.spot.positions,a.spotLightDistance.value=b.spot.distances,a.spotLightDirection.value=b.spot.directions,a.spotLightAngleCos.value=b.spot.anglesCos,a.spotLightExponent.value=b.spot.exponents,a.hemisphereLightSkyColor.value=b.hemi.skyColors,a.hemisphereLightGroundColor.value=b.hemi.groundColors,a.hemisphereLightDirection.value=b.hemi.positions}function ha(a,b){a.ambientLightColor.needsUpdate=b,a.directionalLightColor.needsUpdate=b,a.directionalLightDirection.needsUpdate=b,a.pointLightColor.needsUpdate=b,a.pointLightPosition.needsUpdate=b,a.pointLightDistance.needsUpdate=b,a.spotLightColor.needsUpdate=b,a.spotLightPosition.needsUpdate=b,a.spotLightDistance.needsUpdate=b,a.spotLightDirection.needsUpdate=b,a.spotLightAngleCos.needsUpdate=b,a.spotLightExponent.needsUpdate=b,a.hemisphereLightSkyColor.needsUpdate=b,a.hemisphereLightGroundColor.needsUpdate=b,a.hemisphereLightDirection.needsUpdate=b}function ia(a,b,c){Ka.multiplyMatrices(c.matrixWorldInverse,b.matrixWorld),Oa.uniformMatrix4fv(a.modelViewMatrix,!1,Ka.elements),a.normalMatrix&&(La.getNormalMatrix(Ka),Oa.uniformMatrix3fv(a.normalMatrix,!1,La.elements))}function ja(){var a=Za;return a>=sb&&THREE.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+sb),Za+=1,a}function ka(a){for(var b,c,d,e=0,f=a.length;e<f;e++){var g=a[e][0];if(g.needsUpdate!==!1){var h,i,j=g.type,k=g.value,l=a[e][1];switch(j){case"1i":Oa.uniform1i(l,k);break;case"1f":Oa.uniform1f(l,k);break;case"2f":Oa.uniform2f(l,k[0],k[1]);break;case"3f":Oa.uniform3f(l,k[0],k[1],k[2]);break;case"4f":Oa.uniform4f(l,k[0],k[1],k[2],k[3]);break;case"1iv":Oa.uniform1iv(l,k);break;case"3iv":Oa.uniform3iv(l,k);break;case"1fv":Oa.uniform1fv(l,k);break;case"2fv":Oa.uniform2fv(l,k);break;case"3fv":Oa.uniform3fv(l,k);break;case"4fv":Oa.uniform4fv(l,k);break;case"Matrix3fv":Oa.uniformMatrix3fv(l,!1,k);break;case"Matrix4fv":Oa.uniformMatrix4fv(l,!1,k);break;case"i":Oa.uniform1i(l,k);break;case"f":Oa.uniform1f(l,k);break;case"v2":Oa.uniform2f(l,k.x,k.y);break;case"v3":Oa.uniform3f(l,k.x,k.y,k.z);break;case"v4":Oa.uniform4f(l,k.x,k.y,k.z,k.w);break;case"c":Oa.uniform3f(l,k.r,k.g,k.b);break;case"iv1":Oa.uniform1iv(l,k);break;case"iv":Oa.uniform3iv(l,k);break;case"fv1":Oa.uniform1fv(l,k);break;case"fv":Oa.uniform3fv(l,k);break;case"v2v":for(void 0===g._array&&(g._array=new Float32Array(2*k.length)),h=0,i=k.length;h<i;h++)d=2*h,g._array[d]=k[h].x,g._array[d+1]=k[h].y;Oa.uniform2fv(l,g._array);break;case"v3v":for(void 0===g._array&&(g._array=new Float32Array(3*k.length)),h=0,i=k.length;h<i;h++)d=3*h,g._array[d]=k[h].x,g._array[d+1]=k[h].y,g._array[d+2]=k[h].z;Oa.uniform3fv(l,g._array);break;case"v4v":for(void 0===g._array&&(g._array=new Float32Array(4*k.length)),h=0,i=k.length;h<i;h++)d=4*h,g._array[d]=k[h].x,g._array[d+1]=k[h].y,g._array[d+2]=k[h].z,g._array[d+3]=k[h].w;Oa.uniform4fv(l,g._array);break;case"m3":Oa.uniformMatrix3fv(l,!1,k.elements);break;case"m3v":for(void 0===g._array&&(g._array=new Float32Array(9*k.length)),h=0,i=k.length;h<i;h++)k[h].flattenToArrayOffset(g._array,9*h);Oa.uniformMatrix3fv(l,!1,g._array);break;case"m4":Oa.uniformMatrix4fv(l,!1,k.elements);break;case"m4v":for(void 0===g._array&&(g._array=new Float32Array(16*k.length)),h=0,i=k.length;h<i;h++)k[h].flattenToArrayOffset(g._array,16*h);Oa.uniformMatrix4fv(l,!1,g._array);break;case"t":if(b=k,c=ja(),Oa.uniform1i(l,c),!b)continue;Array.isArray(b.image)&&6===b.image.length||b instanceof THREE.CubeTexture?b.needsUpdate?pa(b,c):(Oa.activeTexture(Oa.TEXTURE0+c),Oa.bindTexture(Oa.TEXTURE_CUBE_MAP,b.__webglTextureCube)):b instanceof THREE.WebGLRenderTargetCube?qa(b,c):Sa.setTexture(b,c);break;case"tv":for(void 0===g._array&&(g._array=[]),h=0,i=g.value.length;h<i;h++)g._array[h]=ja();for(Oa.uniform1iv(l,g._array),h=0,i=g.value.length;h<i;h++)b=g.value[h],c=g._array[h],b&&Sa.setTexture(b,c);break;default:THREE.warn("THREE.WebGLRenderer: Unknown uniform type: "+j)}}}}function la(a,b,c,d){a[b]=c.r*d,a[b+1]=c.g*d,a[b+2]=c.b*d}function ma(a){var b,c,d,e,f,g,h,i,j=0,k=0,l=0,m=lb,n=m.directional.colors,o=m.directional.positions,p=m.point.colors,q=m.point.positions,r=m.point.distances,s=m.spot.colors,t=m.spot.positions,u=m.spot.distances,v=m.spot.directions,w=m.spot.anglesCos,x=m.spot.exponents,y=m.hemi.skyColors,z=m.hemi.groundColors,A=m.hemi.positions,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;for(b=0,c=a.length;b<c;b++)if(d=a[b],!d.onlyShadow)if(e=d.color,h=d.intensity,i=d.distance,d instanceof THREE.AmbientLight){if(!d.visible)continue;j+=e.r,k+=e.g,l+=e.b}else if(d instanceof THREE.DirectionalLight){if(F+=1,!d.visible)continue;jb.setFromMatrixPosition(d.matrixWorld),ib.setFromMatrixPosition(d.target.matrixWorld),jb.sub(ib),jb.normalize(),J=3*B,o[J]=jb.x,o[J+1]=jb.y,o[J+2]=jb.z,la(n,J,e,h),B+=1}else if(d instanceof THREE.PointLight){if(G+=1,!d.visible)continue;K=3*C,la(p,K,e,h),ib.setFromMatrixPosition(d.matrixWorld),q[K]=ib.x,q[K+1]=ib.y,q[K+2]=ib.z,r[C]=i,C+=1}else if(d instanceof THREE.SpotLight){if(H+=1,!d.visible)continue;L=3*D,la(s,L,e,h),ib.setFromMatrixPosition(d.matrixWorld),t[L]=ib.x,t[L+1]=ib.y,t[L+2]=ib.z,u[D]=i,jb.copy(ib),ib.setFromMatrixPosition(d.target.matrixWorld),jb.sub(ib),jb.normalize(),v[L]=jb.x,v[L+1]=jb.y,v[L+2]=jb.z,w[D]=Math.cos(d.angle),x[D]=d.exponent,D+=1}else if(d instanceof THREE.HemisphereLight){if(I+=1,!d.visible)continue;jb.setFromMatrixPosition(d.matrixWorld),jb.normalize(),M=3*E,A[M]=jb.x,A[M+1]=jb.y,A[M+2]=jb.z,f=d.color,g=d.groundColor,la(y,M,f,h),la(z,M,g,h),E+=1}for(b=3*B,c=Math.max(n.length,3*F);b<c;b++)n[b]=0;for(b=3*C,c=Math.max(p.length,3*G);b<c;b++)p[b]=0;for(b=3*D,c=Math.max(s.length,3*H);b<c;b++)s[b]=0;for(b=3*E,c=Math.max(y.length,3*I);b<c;b++)y[b]=0;for(b=3*E,c=Math.max(z.length,3*I);b<c;b++)z[b]=0;m.directional.length=B,m.point.length=C,m.spot.length=D,m.hemi.length=E,m.ambient[0]=j,m.ambient[1]=k,m.ambient[2]=l}function na(a,b,c){var d;c?(Oa.texParameteri(a,Oa.TEXTURE_WRAP_S,ta(b.wrapS)),Oa.texParameteri(a,Oa.TEXTURE_WRAP_T,ta(b.wrapT)),Oa.texParameteri(a,Oa.TEXTURE_MAG_FILTER,ta(b.magFilter)),Oa.texParameteri(a,Oa.TEXTURE_MIN_FILTER,ta(b.minFilter))):(Oa.texParameteri(a,Oa.TEXTURE_WRAP_S,Oa.CLAMP_TO_EDGE),Oa.texParameteri(a,Oa.TEXTURE_WRAP_T,Oa.CLAMP_TO_EDGE),b.wrapS===THREE.ClampToEdgeWrapping&&b.wrapT===THREE.ClampToEdgeWrapping||THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( "+b.sourceFile+" )"),Oa.texParameteri(a,Oa.TEXTURE_MAG_FILTER,sa(b.magFilter)),Oa.texParameteri(a,Oa.TEXTURE_MIN_FILTER,sa(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( "+b.sourceFile+" )")),d=ob.get("EXT_texture_filter_anisotropic"),d&&b.type!==THREE.FloatType&&b.type!==THREE.HalfFloatType&&(b.anisotropy>1||b.__oldAnisotropy)&&(Oa.texParameterf(a,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Sa.getMaxAnisotropy())),b.__oldAnisotropy=b.anisotropy)}function oa(a,b){if(a.width<=b&&a.height<=b)return a;var c=Math.max(a.width,a.height),d=Math.floor(a.width*b/c),e=Math.floor(a.height*b/c),f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");return g.drawImage(a,0,0,a.width,a.height,0,0,d,e),f}function pa(a,b){if(6===a.image.length)if(a.needsUpdate){a.__webglTextureCube||(a.addEventListener("dispose",Hb),a.__webglTextureCube=Oa.createTexture(),Sa.info.memory.textures++),Oa.activeTexture(Oa.TEXTURE0+b),Oa.bindTexture(Oa.TEXTURE_CUBE_MAP,a.__webglTextureCube),Oa.pixelStorei(Oa.UNPACK_FLIP_Y_WEBGL,a.flipY);var c,d=a instanceof THREE.CompressedTexture,e=a.image[0]instanceof THREE.DataTexture,f=[];for(c=0;c<6;c++)!Sa.autoScaleCubemaps||d||e?f[c]=e?a.image[c].image:a.image[c]:f[c]=oa(a.image[c],vb);var g=f[0],h=THREE.Math.isPowerOfTwo(g.width)&&THREE.Math.isPowerOfTwo(g.height),i=ta(a.format),j=ta(a.type);for(na(Oa.TEXTURE_CUBE_MAP,a,h),c=0;c<6;c++)if(d)for(var k,l=f[c].mipmaps,m=0,n=l.length;m<n;m++)k=l[m],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?Bb().indexOf(i)>-1?Oa.compressedTexImage2D(Oa.TEXTURE_CUBE_MAP_POSITIVE_X+c,m,i,k.width,k.height,0,k.data):THREE.warn("Attempt to load unsupported compressed texture format"):Oa.texImage2D(Oa.TEXTURE_CUBE_MAP_POSITIVE_X+c,m,i,k.width,k.height,0,i,j,k.data);else e?Oa.texImage2D(Oa.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,i,f[c].width,f[c].height,0,i,j,f[c].data):Oa.texImage2D(Oa.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,i,i,j,f[c]);a.generateMipmaps&&h&&Oa.generateMipmap(Oa.TEXTURE_CUBE_MAP),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else Oa.activeTexture(Oa.TEXTURE0+b),Oa.bindTexture(Oa.TEXTURE_CUBE_MAP,a.__webglTextureCube)}function qa(a,b){Oa.activeTexture(Oa.TEXTURE0+b),Oa.bindTexture(Oa.TEXTURE_CUBE_MAP,a.__webglTexture)}function ra(a){Oa.bindTexture(Oa.TEXTURE_2D,a.__webglTexture),Oa.generateMipmap(Oa.TEXTURE_2D),Oa.bindTexture(Oa.TEXTURE_2D,null)}function sa(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?Oa.NEAREST:Oa.LINEAR}function ta(a){var b;if(a===THREE.RepeatWrapping)return Oa.REPEAT;if(a===THREE.ClampToEdgeWrapping)return Oa.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return Oa.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return Oa.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return Oa.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return Oa.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return Oa.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return Oa.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return Oa.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return Oa.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return Oa.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return Oa.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return Oa.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return Oa.BYTE;if(a===THREE.ShortType)return Oa.SHORT;if(a===THREE.UnsignedShortType)return Oa.UNSIGNED_SHORT;if(a===THREE.IntType)return Oa.INT;if(a===THREE.UnsignedIntType)return Oa.UNSIGNED_INT;if(a===THREE.FloatType)return Oa.FLOAT;if(a===THREE.HalfFloatType)return 36193;if(a===THREE.AlphaFormat)return Oa.ALPHA;if(a===THREE.RGBFormat)return Oa.RGB;if(a===THREE.RGBAFormat)return Oa.RGBA;if(a===THREE.LuminanceFormat)return Oa.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return Oa.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return Oa.FUNC_ADD;if(a===THREE.SubtractEquation)return Oa.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return Oa.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return Oa.ZERO;if(a===THREE.OneFactor)return Oa.ONE;if(a===THREE.SrcColorFactor)return Oa.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return Oa.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return Oa.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return Oa.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return Oa.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return Oa.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return Oa.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return Oa.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return Oa.SRC_ALPHA_SATURATE;if(b=ob.get("WEBGL_compressed_texture_s3tc"),null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(b=ob.get("WEBGL_compressed_texture_pvrtc"),null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(b=ob.get("EXT_blend_minmax"),null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}function ua(a){for(var b=0,c=0,d=0,e=0,f=0,g=a.length;f<g;f++){var h=a[f];h.onlyShadow||(h instanceof THREE.DirectionalLight&&b++,h instanceof THREE.PointLight&&c++,h instanceof THREE.SpotLight&&d++,h instanceof THREE.HemisphereLight&&e++)}return{directional:b,point:c,spot:d,hemi:e}}THREE.log("THREE.WebGLRenderer",THREE.REVISION),a=a||{};var va=void 0!==a.canvas?a.canvas:document.createElement("canvas"),wa=window.devicePixelRatio||1,xa=void 0!==a.precision?a.precision:"highp",ya=void 0!==a.precision?a.precision:d.isAndroidDevice()?"mediump":"highp",za=void 0!==a.alpha&&a.alpha,Aa=void 0===a.premultipliedAlpha||a.premultipliedAlpha,Ba=void 0!==a.antialias&&a.antialias,Ca=void 0===a.stencil||a.stencil,Da=void 0===a.preserveDrawingBuffer||a.preserveDrawingBuffer,Ea=void 0!==a.logarithmicDepthBuffer&&a.logarithmicDepthBuffer,Fa=new THREE.Color(0),Ga=0,Ha=[],Ia={},Ja=[],Ka=new THREE.Matrix4,La=new THREE.Matrix3,Ma=[],Na=[];this.domElement=va,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Oa,Pa,Qa,Ra,Sa=this,Ta=[],Ua=null,Va=null,Wa=-1,Xa=null,Ya="",Za=0,$a=0,_a=0,ab=va.width,bb=va.height,cb=0,db=0,eb={},fb=new THREE.Frustum,gb=new THREE.Matrix4,hb=new THREE.Matrix4,ib=new THREE.Vector3,jb=new THREE.Vector3,kb=!0,lb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{var mb={alpha:za,premultipliedAlpha:Aa,antialias:Ba,stencil:Ca,preserveDrawingBuffer:Da};if(Oa=va.getContext("webgl",mb)||va.getContext("experimental-webgl",mb),null===Oa)throw null!==va.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";Oa=d.rescueFromPolymer(Oa),va.addEventListener("webglcontextlost",function(a){a.preventDefault(),rb(),qb(),Ia={}},!1)}catch(a){return void THREE.error(a)}var nb=new THREE.WebGLState(Oa,ta);void 0===Oa.getShaderPrecisionFormat&&(Oa.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var ob=new THREE.WebGLExtensions(Oa);ob.get("OES_texture_float"),ob.get("OES_texture_float_linear"),ob.get("OES_texture_half_float"),ob.get("OES_texture_half_float_linear"),ob.get("OES_standard_derivatives"),ob.get("EXT_shader_texture_lod"),ob.get("EXT_texture_filter_anisotropic"),ob.get("WEBGL_compressed_texture_s3tc"),Pa=ob.get("WEBGL_draw_buffers"),Qa=ob.get("ANGLE_instanced_arrays"),Ra=ob.get("OES_vertex_array_object"),Ea&&ob.get("EXT_frag_depth");var pb=function(a,b,c,d){Aa===!0&&(a*=d,b*=d,c*=d),Oa.clearColor(a,b,c,d)},qb=function(){Oa.clearColor(0,0,0,1),Oa.clearDepth(1),Oa.clearStencil(0),Oa.enable(Oa.DEPTH_TEST),Oa.depthFunc(Oa.LEQUAL),Oa.frontFace(Oa.CCW),Oa.cullFace(Oa.BACK),Oa.enable(Oa.CULL_FACE),Oa.enable(Oa.BLEND),Oa.blendEquation(Oa.FUNC_ADD),Oa.blendFunc(Oa.SRC_ALPHA,Oa.ONE_MINUS_SRC_ALPHA),Oa.viewport($a,_a,ab,bb),pb(Fa.r,Fa.g,Fa.b,Ga)},rb=function(){Ua=null,Xa=null,Ya="",Wa=-1,kb=!0,nb.reset(),nb.disableUnusedAttributes()};qb(),this.context=Oa,this.state=nb;var sb=Oa.getParameter(Oa.MAX_TEXTURE_IMAGE_UNITS),tb=Oa.getParameter(Oa.MAX_VERTEX_TEXTURE_IMAGE_UNITS),ub=Oa.getParameter(Oa.MAX_TEXTURE_SIZE),vb=Oa.getParameter(Oa.MAX_CUBE_MAP_TEXTURE_SIZE),wb=tb>0,xb=Oa.getShaderPrecisionFormat(Oa.VERTEX_SHADER,Oa.HIGH_FLOAT),yb=Oa.getShaderPrecisionFormat(Oa.VERTEX_SHADER,Oa.MEDIUM_FLOAT),zb=Oa.getShaderPrecisionFormat(Oa.FRAGMENT_SHADER,Oa.HIGH_FLOAT),Ab=Oa.getShaderPrecisionFormat(Oa.FRAGMENT_SHADER,Oa.MEDIUM_FLOAT),Bb=function(){var a;return function(){if(void 0!==a)return a;if(a=[],ob.get("WEBGL_compressed_texture_pvrtc")||ob.get("WEBGL_compressed_texture_s3tc"))for(var b=Oa.getParameter(Oa.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return a}}(),Cb=xb.precision>0,Db=yb.precision>0;"highp"!==xa||Cb||(Db?(xa="mediump",THREE.warn("WebGLRenderer: highp not supported, using mediump")):(xa="lowp",THREE.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==xa||Db||(xa="lowp",THREE.warn("WebGLRenderer: mediump not supported, using lowp")),Cb=zb.precision>0,Db=Ab.precision>0,"highp"!==ya||Cb||(Db?(ya="mediump",THREE.warn("WebGLRenderer: highp not supported, using mediump")):(ya="lowp",THREE.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==ya||Db||(ya="lowp",THREE.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return Oa;
},this.forceContextLoss=function(){ob.get("WEBGL_lose_context").loseContext()},this.supportsVertexTextures=function(){return wb},this.supportsFloatTextures=function(){return ob.get("OES_texture_float")},this.supportsHalfFloatTextures=function(){return ob.get("OES_texture_half_float_linear")},this.supportsStandardDerivatives=function(){return ob.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return ob.get("WEBGL_compressed_texture_s3tc")},this.supportsMRT=function(){return Pa},this.supportsInstancedArrays=function(){return!!Qa},this.supportsBlendMinMax=function(){return ob.get("EXT_blend_minmax")},this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=ob.get("EXT_texture_filter_anisotropic");return a=null!==b?Oa.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}(),this.getPixelRatio=function(){return wa},this.setPixelRatio=function(a){wa=a},this.setSize=function(a,b,c){va.width=a*wa,va.height=b*wa,c!==!1&&(va.style.width=a+"px",va.style.height=b+"px"),this.setViewport(0,0,a,b)},this.setViewport=function(a,b,c,d){$a=a*wa,_a=b*wa,ab=c*wa,bb=d*wa,Oa.viewport($a,_a,ab,bb)};var Eb=[];this.pushViewport=function(){Eb.push($a),Eb.push(_a),Eb.push(ab),Eb.push(bb)},this.popViewport=function(){var a=Eb.length-4;$a=Eb[a],_a=Eb[a+1],ab=Eb[a+2],bb=Eb[a+3],Oa.viewport($a,_a,ab,bb),Eb.length=a},this.setScissor=function(a,b,c,d){Oa.scissor(a*wa,b*wa,c*wa,d*wa)},this.enableScissorTest=function(a){a?Oa.enable(Oa.SCISSOR_TEST):Oa.disable(Oa.SCISSOR_TEST)},this.getClearColor=function(){return Fa},this.setClearColor=function(a,b){Fa.set(a),Ga=void 0!==b?b:1,pb(Fa.r,Fa.g,Fa.b,Ga)},this.getClearAlpha=function(){return Ga},this.setClearAlpha=function(a){Ga=a,pb(Fa.r,Fa.g,Fa.b,Ga)},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=Oa.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=Oa.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=Oa.STENCIL_BUFFER_BIT),Oa.clear(d)},this.clearColor=function(){Oa.clear(Oa.COLOR_BUFFER_BIT)},this.clearDepth=function(){Oa.clear(Oa.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Oa.clear(Oa.STENCIL_BUFFER_BIT)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.resetGLState=rb;var Fb=function(a){var b=a.target;b.traverse(function(a){a.removeEventListener("remove",Fb),T(a)})},Gb=function(a){var b=a.target;b.removeEventListener("dispose",Gb),Lb(b)},Hb=function(a){var b=a.target;b.removeEventListener("dispose",Hb),Mb(b),Sa.info.memory.textures--},Ib=function(a){var b=a.target;b.removeEventListener("dispose",Ib),Nb(b),Sa.info.memory.textures--},Jb=function(a){var b=a.target;b.removeEventListener("dispose",Jb),Ob(b)},Kb=function(a){if(void 0!==a.__webglVertexBuffer&&(Oa.deleteBuffer(a.__webglVertexBuffer),a.__webglVertexBuffer=void 0),void 0!==a.__webglNormalBuffer&&(Oa.deleteBuffer(a.__webglNormalBuffer),a.__webglNormalBuffer=void 0),void 0!==a.__webglTangentBuffer&&(Oa.deleteBuffer(a.__webglTangentBuffer),a.__webglTangentBuffer=void 0),void 0!==a.__webglColorBuffer&&(Oa.deleteBuffer(a.__webglColorBuffer),a.__webglColorBuffer=void 0),void 0!==a.__webglUVBuffer&&(Oa.deleteBuffer(a.__webglUVBuffer),a.__webglUVBuffer=void 0),void 0!==a.__webglUV2Buffer&&(Oa.deleteBuffer(a.__webglUV2Buffer),a.__webglUV2Buffer=void 0),void 0!==a.__webglSkinIndicesBuffer&&(Oa.deleteBuffer(a.__webglSkinIndicesBuffer),a.__webglSkinIndicesBuffer=void 0),void 0!==a.__webglSkinWeightsBuffer&&(Oa.deleteBuffer(a.__webglSkinWeightsBuffer),a.__webglSkinWeightsBuffer=void 0),void 0!==a.__webglFaceBuffer&&(Oa.deleteBuffer(a.__webglFaceBuffer),a.__webglFaceBuffer=void 0),void 0!==a.__webglLineBuffer&&(Oa.deleteBuffer(a.__webglLineBuffer),a.__webglLineBuffer=void 0),void 0!==a.__webglLineDistanceBuffer&&(Oa.deleteBuffer(a.__webglLineDistanceBuffer),a.__webglLineDistanceBuffer=void 0),void 0!==a.__webglCustomAttributesList){for(var b in a.__webglCustomAttributesList)Oa.deleteBuffer(a.__webglCustomAttributesList[b].buffer);a.__webglCustomAttributesList=void 0}Sa.info.memory.geometries--},Lb=function(a){a.__webglInit=void 0;var b,c,d,e;if(a instanceof THREE.BufferGeometry){if(void 0!==a.vbbuffer&&(Oa.deleteBuffer(a.vbbuffer),a.vbbuffer=void 0),void 0!==a.ibbuffer&&(Oa.deleteBuffer(a.ibbuffer),a.ibbuffer=void 0),a.vaos){for(b=0;b<a.vaos.length;b++)Ra.deleteVertexArrayOES(a.vaos[b].vao);a.vaos=void 0}var f=a.attributes;for(var g in f)void 0!==f[g].buffer&&(Oa.deleteBuffer(f[g].buffer),f[g].buffer=void 0);Sa.info.memory.geometries--}else{var h=Ub[a.id];if(void 0!==h){for(b=0,c=h.length;b<c;b++){var i=h[b];if(void 0!==i.numMorphTargets){for(d=0,e=i.numMorphTargets;d<e;d++)Oa.deleteBuffer(i.__webglMorphTargetsBuffers[d]);delete i.__webglMorphTargetsBuffers}if(void 0!==i.numMorphNormals){for(d=0,e=i.numMorphNormals;d<e;d++)Oa.deleteBuffer(i.__webglMorphNormalsBuffers[d]);delete i.__webglMorphNormalsBuffers}Kb(i)}delete Ub[a.id]}else Kb(a)}};this.deallocateGeometry=Lb;var Mb=function(a){if(a.__webglTextureCube)Oa.deleteTexture(a.__webglTextureCube),a.__webglTextureCube=void 0;else{if(!a.__webglInit)return;Oa.deleteTexture(a.__webglTexture),a.__webglInit=void 0,a.__webglTexture=void 0}},Nb=function(a){a&&a.__webglTexture&&(Oa.deleteTexture(a.__webglTexture),Oa.deleteFramebuffer(a.__webglFramebuffer),Oa.deleteRenderbuffer(a.__webglRenderbuffer))},Ob=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e,f=!1;for(c=0,d=Ta.length;c<d;c++)if(e=Ta[c],e.program===b){e.usedTimes--,0===e.usedTimes&&(f=!0);break}if(f===!0){var g=[];for(c=0,d=Ta.length;c<d;c++)e=Ta[c],e.program!==b&&g.push(e);Ta=g,Oa.deleteProgram(b),Sa.info.memory.programs--}}};this.renderBufferDirect=function(a,b,c,d,e,f,g){if(d.visible!==!1){u(f.geometry);var h=Y(a,b,c,d,f),i=e.attributes,j=!1,k=d.wireframe?1:0,l="direct_"+e.id+(g?"/"+g:"")+"_"+h.id+"_"+k;l!==Ya&&(Ya=l,j=!0);var m=w(d,h,e,g||0);if(j=j&&!m,j&&nb.initAttributes(),f instanceof THREE.Mesh){var n=i.index;if(n){var o,p,q=n.array?n.array:e.ib;q instanceof Uint32Array&&ob.get("OES_element_index_uint")?(o=Oa.UNSIGNED_INT,p=4):(o=Oa.UNSIGNED_SHORT,p=2);var r=e.offsets;r&&r.length>1&&(j=!0);var s=0;do{var t,v,x;r&&r.length?(t=r[s].index,v=r[s].start,x=r[s].count):(t=0,v=0,x=q.length),j&&y(d,h,e,t,n),e.numInstances?Qa.drawElementsInstancedANGLE(e.isLines?Oa.LINES:Oa.TRIANGLES,x,o,v*p,e.numInstances):Oa.drawElements(e.isLines?Oa.LINES:Oa.TRIANGLES,x,o,v*p)}while(r&&++s<r.length)}else{j&&y(d,h,e,0);var z=e.attributes.position;e.numInstances?Qa.drawArraysInstancedANGLE(e.isLines?Oa.LINES:Oa.TRIANGLES,0,z.array.length/3,e.numInstances):Oa.drawArrays(e.isLines?Oa.LINES:Oa.TRIANGLES,0,z.array.length/z.itemSize)}}else THREE.log("Only THREE.Mesh can be rendered by the Firefly renderer. Use THREE.Mesh to draw lines.");m&&Ra.bindVertexArrayOES(null)}},this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==!1){Q(f);var g=Y(a,b,c,d,f),h=g.attributes,i=!1,j=d.wireframe?1:0,k=e.id+"_"+g.id+"_"+j;if(k!==Ya&&(Ya=k,i=!0),i&&nb.initAttributes(),!d.morphTargets&&h.position>=0&&i&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,e.__webglVertexBuffer),nb.enableAttribute(h.position),Oa.vertexAttribPointer(h.position,3,Oa.FLOAT,!1,0,0)),i){if(e.__webglCustomAttributesList)for(var l=0,m=e.__webglCustomAttributesList.length;l<m;l++){var n=e.__webglCustomAttributesList[l];h[n.buffer.belongsToAttribute]>=0&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,n.buffer),nb.enableAttribute(h[n.buffer.belongsToAttribute]),Oa.vertexAttribPointer(h[n.buffer.belongsToAttribute],n.size,Oa.FLOAT,!1,0,0))}h.color>=0&&(f.geometry.colors.length>0||f.geometry.faces.length>0?(Oa.bindBuffer(Oa.ARRAY_BUFFER,e.__webglColorBuffer),nb.enableAttribute(h.color),Oa.vertexAttribPointer(h.color,3,Oa.FLOAT,!1,0,0)):d.defaultAttributeValues&&Oa.vertexAttrib3fv(h.color,d.defaultAttributeValues.color)),h.normal>=0&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,e.__webglNormalBuffer),nb.enableAttribute(h.normal),Oa.vertexAttribPointer(h.normal,3,Oa.FLOAT,!1,0,0)),h.tangent>=0&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,e.__webglTangentBuffer),nb.enableAttribute(h.tangent),Oa.vertexAttribPointer(h.tangent,4,Oa.FLOAT,!1,0,0)),h.uv>=0&&(f.geometry.faceVertexUvs[0]?(Oa.bindBuffer(Oa.ARRAY_BUFFER,e.__webglUVBuffer),nb.enableAttribute(h.uv),Oa.vertexAttribPointer(h.uv,2,Oa.FLOAT,!1,0,0)):d.defaultAttributeValues&&Oa.vertexAttrib2fv(h.uv,d.defaultAttributeValues.uv)),h.uv2>=0&&(f.geometry.faceVertexUvs[1]?(Oa.bindBuffer(Oa.ARRAY_BUFFER,e.__webglUV2Buffer),nb.enableAttribute(h.uv2),Oa.vertexAttribPointer(h.uv2,2,Oa.FLOAT,!1,0,0)):d.defaultAttributeValues&&Oa.vertexAttrib2fv(h.uv2,d.defaultAttributeValues.uv2)),h.lineDistance>=0&&(Oa.bindBuffer(Oa.ARRAY_BUFFER,e.__webglLineDistanceBuffer),nb.enableAttribute(h.lineDistance),Oa.vertexAttribPointer(h.lineDistance,1,Oa.FLOAT,!1,0,0))}if(nb.disableUnusedAttributes(),f instanceof THREE.Mesh){var o=e.__typeArray===Uint32Array?Oa.UNSIGNED_INT:Oa.UNSIGNED_SHORT;d.wireframe?(nb.setLineWidth(d.wireframeLinewidth*wa),i&&Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),Oa.drawElements(Oa.LINES,e.__webglLineCount,o,0)):(i&&Oa.bindBuffer(Oa.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),Oa.drawElements(Oa.TRIANGLES,e.__webglFaceCount,o,0))}else if(f instanceof THREE.Line){var p=f.mode===THREE.LineStrip?Oa.LINE_STRIP:Oa.LINES;nb.setLineWidth(d.linewidth*wa),Oa.drawArrays(p,0,e.__webglLineCount)}else f instanceof THREE.PointCloud&&Oa.drawArrays(Oa.POINTS,0,e.__webglPointCount)}},this.render=function(a,b,c,d,e){if(b instanceof THREE.Camera==!1)return void THREE.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");Ya="",Wa=-1,Xa=null,void 0!==e&&(Ha.length=0,kb=!0);var f=a.fog;a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===b.parent&&b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),b.worldUpTransform?hb.multiplyMatrices(b.worldUpTransform,b.matrixWorld):hb.copy(b.matrixWorld),gb.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),fb.setFromMatrix(gb);var h=a instanceof g&&a.renderImmediate;if(h||(Ma.length=0,Na.length=0,D(a,Sa.sortObjects===!0,a.forceVisible===!0),Sa.sortObjects===!0&&(Ma.sort(A),Na.sort(z))),kb&&(e&&e.length&&(Ha=e.slice()),ma(Ha)),this.setRenderTarget(c),this.resetGLState(),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),a.overrideMaterial){var i=a.overrideMaterial;X(i),h?J(a,"",b,Ha,f,i):(F(Ma,b,Ha,f,i),F(Na,b,Ha,f,i))}else h?J(a,"",b,Ha,f,null):(nb.setBlending(THREE.NoBlending),F(Ma,b,Ha,f,null),F(Na,b,Ha,f,null));c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&ra(c),this.resetGLState(),nb.setDepthTest(!0),nb.setDepthWrite(!0)};var Pb,Qb,Rb,Sb,Tb,Ub={},Vb=0,Wb={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"firefly_basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"firefly_phong",LineBasicMaterial:"firefly_basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?Oa.disable(Oa.CULL_FACE):(b===THREE.FrontFaceDirectionCW?Oa.frontFace(Oa.CW):Oa.frontFace(Oa.CCW),a===THREE.CullFaceBack?Oa.cullFace(Oa.BACK):a===THREE.CullFaceFront?Oa.cullFace(Oa.FRONT):Oa.cullFace(Oa.FRONT_AND_BACK),Oa.enable(Oa.CULL_FACE))},this.setMaterialFaces=function(a){nb.setDoubleSided(a.side===THREE.DoubleSide),nb.setFlipSided(a.side===THREE.BackSide)},this.uploadTexture=function(a){void 0===a.__webglInit&&(a.__webglInit=!0,a.addEventListener("dispose",Hb),a.__webglTexture=Oa.createTexture(),Sa.info.memory.textures++),Oa.bindTexture(Oa.TEXTURE_2D,a.__webglTexture),Oa.pixelStorei(Oa.UNPACK_FLIP_Y_WEBGL,a.flipY),Oa.pixelStorei(Oa.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),Oa.pixelStorei(Oa.UNPACK_ALIGNMENT,a.unpackAlignment),a.image=oa(a.image,ub);var b=a.image,c=THREE.Math.isPowerOfTwo(b.width)&&THREE.Math.isPowerOfTwo(b.height),e=ta(a.format),f=ta(a.type);na(Oa.TEXTURE_2D,a,c);var g,h,i,j=a.mipmaps;if(a instanceof THREE.DataTexture)if(j.length>0&&c){for(h=0,i=j.length;h<i;h++)g=j[h],Oa.texImage2D(Oa.TEXTURE_2D,h,e,g.width,g.height,0,e,f,g.data);a.generateMipmaps=!1}else Oa.texImage2D(Oa.TEXTURE_2D,0,e,b.width,b.height,0,e,f,b.data);else if(a instanceof THREE.CompressedTexture){for(h=0,i=j.length;h<i;h++)g=j[h],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?Bb().indexOf(e)>-1?Oa.compressedTexImage2D(Oa.TEXTURE_2D,h,e,g.width,g.height,0,g.data):THREE.warn("Attempt to load unsupported compressed texture format"):Oa.texImage2D(Oa.TEXTURE_2D,h,e,g.width,g.height,0,e,f,g.data);if(j.length>1&&Bb().indexOf(e)>-1)for(var k,l=g.width>>1,m=g.height>>1,n=j.length;l>=1||m>=1;)k=4==g.width&&4==g.height?g.data:new DataView(g.data.buffer,g.data.byteOffset,g.data.byteLength*(Math.max(l,4)*Math.max(m,4))/(g.width*g.height)),Oa.compressedTexImage2D(Oa.TEXTURE_2D,n,e,Math.max(l,1),Math.max(m,1),0,k),l>>=1,m>>=1,++n}else if(j.length>0&&c){for(h=0,i=j.length;h<i;h++)g=d.rescueFromPolymer(j[h]),Oa.texImage2D(Oa.TEXTURE_2D,h,e,e,f,g);a.generateMipmaps=!1}else Oa.texImage2D(Oa.TEXTURE_2D,0,e,e,f,d.rescueFromPolymer(a.image));a.generateMipmaps&&c&&Oa.generateMipmap(Oa.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()},this.setTexture=function(a,b){Oa.activeTexture(Oa.TEXTURE0+b),a.needsUpdate?Sa.uploadTexture(a):a.__webglTexture&&Oa.bindTexture(Oa.TEXTURE_2D,a.__webglTexture)},this.initFrameBufferMRT=function(a,b){var c=a[0],d=!1;if(c&&!c.__webglFramebuffer){void 0===c.depthBuffer&&(c.depthBuffer=!0),void 0===c.stencilBuffer&&(c.stencilBuffer=!0),c.__webglFramebuffer=Oa.createFramebuffer(),Oa.bindFramebuffer(Oa.FRAMEBUFFER,c.__webglFramebuffer);var e;c.shareDepthFrom?e=c.__webglRenderbuffer=c.shareDepthFrom.__webglRenderbuffer:c.depthBuffer&&!c.stencilBuffer?(e=c.__webglRenderbuffer=Oa.createRenderbuffer(),Oa.bindRenderbuffer(Oa.RENDERBUFFER,e),Oa.renderbufferStorage(Oa.RENDERBUFFER,Oa.DEPTH_COMPONENT16,c.width,c.height)):c.depthBuffer&&c.stencilBuffer&&(e=c.__webglRenderbuffer=Oa.createRenderbuffer(),Oa.bindRenderbuffer(Oa.RENDERBUFFER,e),Oa.renderbufferStorage(Oa.RENDERBUFFER,Oa.DEPTH_STENCIL,c.width,c.height)),c.depthBuffer&&!c.stencilBuffer?Oa.framebufferRenderbuffer(Oa.FRAMEBUFFER,Oa.DEPTH_ATTACHMENT,Oa.RENDERBUFFER,e):c.depthBuffer&&c.stencilBuffer&&Oa.framebufferRenderbuffer(Oa.FRAMEBUFFER,Oa.DEPTH_STENCIL_ATTACHMENT,Oa.RENDERBUFFER,e),d=!0}var f=Va;Oa.bindFramebuffer(Oa.FRAMEBUFFER,c.__webglFramebuffer);var g;for(g=0;g<a.length;g++){var h=a[g];if(!h.__webglTexture){var i=THREE.Math.isPowerOfTwo(h.width)&&THREE.Math.isPowerOfTwo(h.height),j=ta(h.format),k=ta(h.type);h.addEventListener("dispose",Ib),h.__webglTexture=Oa.createTexture(),Sa.info.memory.textures++,Oa.bindTexture(Oa.TEXTURE_2D,h.__webglTexture),na(Oa.TEXTURE_2D,h,i),Oa.texImage2D(Oa.TEXTURE_2D,0,j,h.width,h.height,0,j,k,null),i&&h.generateMipmaps&&Oa.generateMipmap(Oa.TEXTURE_2D)}Oa.framebufferTexture2D(Oa.FRAMEBUFFER,Oa.COLOR_ATTACHMENT0+g,Oa.TEXTURE_2D,h.__webglTexture,0)}if(Pa){var l=[Pa.COLOR_ATTACHMENT0_WEBGL];for(g=1;g<a.length;g++)l.push(Pa.COLOR_ATTACHMENT0_WEBGL+g);Pa.drawBuffersWEBGL(l)}if(b){var m=Oa.checkFramebufferStatus(Oa.FRAMEBUFFER);m!==Oa.FRAMEBUFFER_COMPLETE&&(THREE.log("Can't use multiple render targets. Falling back to two passes. "+m),delete c.__webglFramebuffer,b=!1)}return Oa.bindFramebuffer(Oa.FRAMEBUFFER,f),d&&(Oa.bindTexture(Oa.TEXTURE_2D,null),Oa.bindRenderbuffer(Oa.RENDERBUFFER,null),Oa.bindFramebuffer(Oa.FRAMEBUFFER,null)),b},this.setRenderTarget=function(a){var b;if(Array.isArray(a))this.initFrameBufferMRT(a),b=a[0];else if(a){var c=a.__webglFramebuffer;c&&Va===c||this.initFrameBufferMRT([a]),b=a}var d,e,f,g,h;b?(d=b.__webglFramebuffer,e=b.width,f=b.height,g=0,h=0):(d=null,e=ab,f=bb,g=$a,h=_a),d!==Va&&(Oa.bindFramebuffer(Oa.FRAMEBUFFER,d),Oa.viewport(g,h,e,f),Va=d),cb=e,db=f},this.verifyMRTWorks=function(a){return!!Pa&&this.initFrameBufferMRT(a,!0)},this.readRenderTargetPixels=function(a,b,c,d,e,f){if(!(a instanceof THREE.WebGLRenderTarget))return void THREE.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");if(a.__webglFramebuffer){if(a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat||a.type!==THREE.UnsignedByteType)return void THREE.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not a readable format.");var g=!1;a.__webglFramebuffer!==Va&&(Oa.bindFramebuffer(Oa.FRAMEBUFFER,a.__webglFramebuffer),g=!0),a.canReadPixels||Oa.checkFramebufferStatus(Oa.FRAMEBUFFER)===Oa.FRAMEBUFFER_COMPLETE?Oa.readPixels(b,c,d,e,Oa.RGBA,Oa.UNSIGNED_BYTE,f):THREE.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."),g&&Oa.bindFramebuffer(Oa.FRAMEBUFFER,Va)}}};a.exports=h},function(a,b,c){var d=c(16),e="undefined"!=typeof navigator&&!!navigator.userAgent.match(/Trident\/7\./),f=["opaque_luminance_modifier","surface_albedo","surface_roughness","surface_anisotropy","surface_rotation","opaque_f0","opaque_albedo","metal_f0","layered_f0","layered_diffuse","layered_roughness","layered_anisotropy","layered_rotation","layered_bottom_f0","layered_fraction","surface_cutout","wood_curly_distortion"],g=function(a,b,c){var d="uv_"+a+"_map",e="";return b&&c?e="if ("+d+".x < 0.0 || "+d+".x > 1.0 || "+d+".y < 0.0 || "+d+".y > 1.0) { discard; }":b?e="if ("+d+".x < 0.0 || "+d+".x > 1.0) { discard; }":c&&(e="if ("+d+".y < 0.0 || "+d+".y > 1.0) { discard; }"),"#define "+a.toUpperCase()+"_CLAMP_TEST "+e},h=function(){"use strict";var a=0,b=function(a){var b,c,d=[];for(var e in a)b=a[e],b!==!1&&(c="#define "+e+" "+b,d.push(c));return d.join("\n")},c=function(a,b,c){for(var d={},e=0,f=c.length;e<f;e++){var g=c[e];d[g]=a.getUniformLocation(b,g)}return d},h=function(a,b,c){for(var d={},e=0,f=c.length;e<f;e++){var g=c[e];d[g]=a.getAttribLocation(b,g)}return d},i=function(a,b,c,d,e){var f=d?"1.0-":"",g="texture2D("+a+", (UV))",h="";return e=e||"vec4(0.0)",b&&c?h="((UV).x < 0.0 || (UV).x > 1.0 || (UV).y < 0.0 || (UV).y > 1.0) ? "+e+" : ":b?h="((UV).x < 0.0 || (UV).x > 1.0) ? "+e+" : ":c&&(h="((UV).y < 0.0 || (UV).y > 1.0) ? "+e+" : "),"#define GET_"+a.toUpperCase()+"(UV) ("+h+f+g+")"},j=function(a){for(var b="\n",c=0;c<f.length;c++){var d=a[f[c]];d&&(b+=g(f[c],d.S,d.T)+"\n")}return b};return function(f,g,k,l){var m=f,n=m.context,o=k.defines,p=k.__webglShader.uniforms,q=k.attributes,r=k.__webglShader.vertexShader,s=k.__webglShader.fragmentShader,t=k.index0AttributeName;void 0===t&&l.morphTargets===!0&&(t="position");var u="ENVMAP_TYPE_CUBE",v="ENVMAP_MODE_REFLECTION",w="ENVMAP_BLENDING_MULTIPLY";l.envMap;var x,y,z=f.gammaFactor>0?f.gammaFactor:1,A=b(o),B=n.createProgram();k instanceof THREE.RawShaderMaterial?(x="",y=""):(x=["precision "+l.precision+" float;","precision "+l.precision+" int;",A,l.supportsVertexTextures?"#define VERTEX_TEXTURES":"",m.gammaInput?"#define GAMMA_INPUT":"",m.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+z,l.mrtNormals?"#define MRT_NORMALS":"",l.mrtIdBuffer?"#define MRT_ID_BUFFER":"","#define MAX_DIR_LIGHTS "+l.maxDirLights,"#define MAX_POINT_LIGHTS "+l.maxPointLights,"#define MAX_SPOT_LIGHTS "+l.maxSpotLights,"#define MAX_HEMI_LIGHTS "+l.maxHemiLights,"#define MAX_BONES "+l.maxBones,"#define NUM_CUTPLANES "+l.numCutplanes,l.map?"#define USE_MAP":"",l.envMap?"#define USE_ENVMAP":"",l.envMap?"#define "+v:"",l.irradianceMap?"#define USE_IRRADIANCEMAP":"",l.lightMap?"#define USE_LIGHTMAP":"",l.bumpMap?"#define USE_BUMPMAP":"",l.normalMap?"#define USE_NORMALMAP":"",l.specularMap?"#define USE_SPECULARMAP":"",l.alphaMap?"#define USE_ALPHAMAP":"",l.vertexColors?"#define USE_COLOR":"",l.vertexIds?"#define USE_VERTEX_ID":"",l.useInstancing?"#define USE_INSTANCING":"",l.skinning?"#define USE_SKINNING":"",l.useVertexTexture?"#define BONE_TEXTURE":"",l.morphTargets?"#define USE_MORPHTARGETS":"",l.morphNormals?"#define USE_MORPHNORMALS":"",l.wrapAround?"#define WRAP_AROUND":"",l.doubleSided?"#define DOUBLE_SIDED":"",l.flipSided?"#define FLIP_SIDED":"",l.sizeAttenuation?"#define USE_SIZEATTENUATION":"",l.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",l.useFragDepthExt?"#define USE_LOGDEPTHBUF_EXT":"",l.packedNormals?"#define UNPACK_NORMALS":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","#ifdef UNPACK_NORMALS","attribute vec2 normal;","#else","attribute vec3 normal;","#endif","attribute vec2 uv;","attribute vec2 uv2;","#ifdef PRISMWOOD","attribute vec3 uvw;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif",""].join("\n"),y=[l.bumpMap||l.normalMap?"#extension GL_OES_standard_derivatives : enable":"",!l.mrtIdBuffer&&!l.mrtNormals||e?"":"#extension GL_EXT_draw_buffers : enable",l.mrtIdBuffer?"#define gl_FragColor gl_FragData[0]":"",l.haveTextureLod?"#define HAVE_TEXTURE_LOD":"",A,"#define MAX_DIR_LIGHTS "+l.maxDirLights,"#define MAX_POINT_LIGHTS "+l.maxPointLights,"#define MAX_SPOT_LIGHTS "+l.maxSpotLights,"#define MAX_HEMI_LIGHTS "+l.maxHemiLights,"#define NUM_CUTPLANES "+l.numCutplanes,l.alphaTest?"#define ALPHATEST "+l.alphaTest:"",m.gammaInput?"#define GAMMA_INPUT":"",m.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+z,l.mrtNormals?"#define MRT_NORMALS":"",l.mrtIdBuffer?"#define MRT_ID_BUFFER":"",l.mrtIdBuffer>1?"#define MODEL_COLOR":"","#define TONEMAP_OUTPUT "+(l.tonemapOutput||0),l.useFog&&l.fog?"#define USE_FOG":"",l.useFog&&l.fogExp?"#define FOG_EXP2":"",l.map?"#define USE_MAP":"",l.envMap?"#define USE_ENVMAP":"",l.envMap?"#define "+u:"",l.envMap?"#define "+v:"",l.envMap?"#define "+w:"",l.irradianceMap?"#define USE_IRRADIANCEMAP":"",l.envGammaEncoded?"#define ENV_GAMMA":"",l.irrGammaEncoded?"#define IRR_GAMMA":"",l.envRGBM?"#define ENV_RGBM":"",l.irrRGBM?"#define IRR_RGBM":"",l.lightMap?"#define USE_LIGHTMAP":"",l.bumpMap?"#define USE_BUMPMAP":"",l.normalMap?"#define USE_NORMALMAP":"",l.specularMap?"#define USE_SPECULARMAP":"",l.alphaMap?"#define USE_ALPHAMAP":"",l.vertexColors?"#define USE_COLOR":"",l.vertexIds?"#define USE_VERTEX_ID":"",l.metal?"#define METAL":"",l.clearcoat?"#define CLEARCOAT":"",l.wrapAround?"#define WRAP_AROUND":"",l.doubleSided?"#define DOUBLE_SIDED":"",l.flipSided?"#define FLIP_SIDED":"",l.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",l.hatchPattern?"#define HATCH_PATTERN":"",l.mapInvert?"#define MAP_INVERT":"",i("map",l.mapClampS,l.mapClampT),i("bumpMap",l.bumpMapClampS,l.bumpMapClampT),i("normalMap",l.normalMapClampS,l.normalMapClampT),i("specularMap",l.specularMapClampS,l.specularMapClampT),i("alphaMap",l.alphaMapClampS,l.alphaMapClampT,l.alphaMapInvert),"#ifdef USE_ENVMAP","#ifdef HAVE_TEXTURE_LOD","#extension GL_EXT_shader_texture_lod : enable","#endif","#endif","#extension GL_OES_standard_derivatives : enable","precision "+l.precisionFragment+" float;","precision "+l.precisionFragment+" int;","uniform highp mat4 viewMatrix;","uniform highp mat4 projectionMatrix;","uniform highp vec3 cameraPosition;","#ifdef USE_ENVMAP","uniform mat4 viewMatrixInverse;","#endif",""].join("\n"),l.isPrism&&(y+=j(l)));var C=new d(n,n.VERTEX_SHADER,x+r),D=new d(n,n.FRAGMENT_SHADER,y+s);n.attachShader(B,C),n.attachShader(B,D),void 0!==t&&n.bindAttribLocation(B,0,t),n.linkProgram(B),n.deleteShader(C),n.deleteShader(D);var E=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","viewMatrixInverse","mvpMatrix","dbId"];l.logarithmicDepthBuffer&&E.push("logDepthBufFC");for(var F in p)E.push(F);this.uniforms=c(n,B,E),E=["position","normal","uv","uv2","tangent","color","lineDistance","uvw","id","instOffset","instScaling","instRotation"];for(var G in q)E.push(G);return this.attributes=h(n,B,E),this.attributesKeys=Object.keys(this.attributes),this.id=a++,this.code=g,this.usedTimes=1,this.program=B,this.vertexShader=C,this.fragmentShader=D,this}}();a.exports={PrismMaps:f,GetPrismMapChunk:g,WebGLProgram:h}},function(a,b,c){function d(){this.shadowMap=void 0,this.shadowMapSize=void 0,this.shadowMatrix=void 0,this.shadowLightDir=void 0,this.init=function(a){this.shadowMap=a,this.shadowMapSize=new THREE.Vector2(a.width,a.height),this.shadowMatrix=new THREE.Matrix4,this.shadowLightDir=new THREE.Vector3},this.apply=function(a){a.shadowMap=this.shadowMap,a.shadowMatrix=this.shadowMatrix,a.shadowLightDir=this.shadowLightDir,this.shadowMap?(g.setMacro(a,"USE_SHADOWMAP"),o.UseHardShadows&&g.setMacro(a,"USE_HARD_SHADOWS")):(g.removeMacro(a,"USE_SHADOWMAP"),g.removeMacro(a,"USE_HARD_SHADOWS"))}}function e(a){function b(a){var b=new THREE.WebGLRenderTarget(a,a,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,type:THREE.FloatType,stencilBuffer:!1,generateMipmaps:!1});return b.generateMipmaps=!1,b}function c(a){x.setRenderTarget(a),x.setClearColor(w,1),x.clear()}function e(a){var b=i.shadowMap;i.shadowMap=D,a.setShadowParams(i),i.apply(y),i.shadowMap=b}function f(a){a.uniforms.shadowMapRangeMin.value=u.near,a.uniforms.shadowMapRangeSize.value=u.far-u.near,a.uniforms.shadowESMConstant.value=o.ShadowESMConstant,a.uniforms.shadowMinOpacity.value=o.ShadowMinOpacity}function h(a,b,c){var d=c||new THREE.Vector3;return d.x=1&b?a.max.x:a.min.x,d.y=2&b?a.max.y:a.min.y,d.z=4&b?a.max.z:a.min.z,d}var i=null,t=null,u=new THREE.OrthographicCamera,v=Math.exp(o.ShadowESMConstant),w=o.UseHardShadows?new THREE.Color(1,1,1):new THREE.Color(v,1,1),x=a,y=null,z=null,A=null,B=g.createShaderMaterial(l),C=new n;B.getCustomOverrideMaterial=C.getCustomOverrideMaterial;var D=null,E=function(){var a=new THREE.Matrix4,b=new THREE.Matrix4,c=new THREE.Vector3(0,0,0),d=new THREE.Box3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g,h,i){g.position.copy(i),g.lookAt(c),a.makeRotationFromQuaternion(g.quaternion),b.getInverse(a),d.copy(h).applyMatrix4(b),f=d.center(f),e.set(f.x,f.y,d.max.z),e.applyMatrix4(a),g.position.copy(e),f=d.size(f),g.left=-.5*f.x,g.right=.5*f.x,g.bottom=-.5*f.y,g.top=.5*f.y,g.near=0,g.far=f.z,g.updateMatrixWorld(),g.matrixWorldInverse.getInverse(g.matrixWorld),g.updateProjectionMatrix()}}();this.init=function(){i=new d,i.init(b(o.ShadowMapSize)),t=o.BlurShadowMap?new k(o.ShadowMapSize,o.ShadowMapSize,o.ShadowMapBlurRadius,1,{type:i.shadowMap.type,format:i.shadowMap.format}):void 0,y=g.createShaderMaterial(m),y.depthWrite=!1,y.transparent=!0,z=j.createGroundShape(y),A=new THREE.Scene,A.add(z),this.groundShapeBox=new THREE.Box3,D=b(1),c(D)},this.init(),this.state=p,this.startUpdate=function(a,b,c,d,e){var f=a.getVisibleBounds(!0);return this.beginShadowMapUpdate(c,f,d),a.reset(u,3,!0),this.state=q,b=this.continueUpdate(a,b,e)},this.continueUpdate=function(a,b,c){return b=a.renderSome(this.renderSceneIntoShadowMap,b),a.isDone()?(this.state=r,this.finishShadowMapUpdate(c)):e(c),b},this.beginShadowMapUpdate=function(a,b,d){E(u,b,d),f(B),C.forEachMaterial(f),o.UseHardShadows&&(g.setMacro(B,"USE_HARD_SHADOWS"),C.forEachMaterial(function(a){g.setMacro(a,"USE_HARD_SHADOWS")})),c(i.shadowMap),this.renderSceneIntoShadowMap(A)},this.renderSceneIntoShadowMap=function(a){a.overrideMaterial=B,x.render(a,u,i.shadowMap),a.overrideMaterial=null},this.finishShadowMapUpdate=function(a){t&&!o.UseHardShadows&&t.render(x,i.shadowMap,i.shadowMap),i.shadowMatrix.multiplyMatrices(u.projectionMatrix,u.matrixWorldInverse),i.shadowMapRangeMin=u.near,i.shadowMapRangeSize=u.far-u.near,i.shadowLightDir.copy(u.position).normalize(),a.setShadowParams(i),i.apply(y),this.isValid=!0},this.cleanup=function(a){t&&t.cleanup(),i.shadowMap&&i.shadowMap.dispose(),a.setShadowParams(s),B.dispose(),C.dispose(),y.dispose(),z.geometry.dispose()},this.setGroundShadowTransform=function(){return function(a,b,c,d){j.setGroundShapeTransform(z,a,b,c,d),this.groundShapeBox.setFromObject(z)}}(),this.renderGroundShadow=function(a,b){x.render(A,a,b,!1)},this.expandByGroundShadow=function(){var a=new THREE.Plane,b=new THREE.Ray,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Box3;return function(f,g){a.normal.set(0,1,0),a.constant=-f.min.y,b.direction.copy(g).negate().normalize();var i=100,j=f.center(c),k=j.distanceToSquared(f.min)*i*i;e.makeEmpty();for(var l=0;l<8;l++){b.origin=h(f,l);var m=b.intersectPlane(a,d);m&&(m.distanceToSquared(j)>=k||e.expandByPoint(m))}f.union(e)}}(),this.getShadowParams=function(){return i},this.getShadowCamera=function(){return u}}function f(){}var g=(c(2),c(13)),h=c(18),i=c(29),j=c(30),k=c(14),l={uniforms:THREE.UniformsUtils.merge([h.ShadowMapCommonUniforms,{shadowMapRangeMin:{type:"f",value:0},shadowMapRangeSize:{type:"f",value:0},shadowMinOpacity:{type:"f",value:0},map:{type:"t",value:null},alphaMap:{type:"t",value:null},texMatrix:{type:"m3",value:new THREE.Matrix3},texMatrixAlpha:{type:"m3",value:new THREE.Matrix3}},i.GetPrismMapUniforms("surface_cutout_map")]),vertexShader:[h.ShadowMapDeclareCommonUniforms,"varying float depth;","#ifdef USE_SURFACE_CUTOUT_MAP","varying vec2 vUv;","#else","#ifdef USE_MAP","varying vec2 vUv;","uniform mat3 texMatrix;","#endif","#ifdef USE_ALPHAMAP","varying vec2 vUvAlpha;","uniform mat3 texMatrixAlpha;","#endif","#endif","void passCutoutUVCoords() {","#ifdef USE_SURFACE_CUTOUT_MAP","vUv = uv;","#else","#ifdef USE_MAP","vUv = (texMatrix * vec3(uv, 1.0)).xy;","#endif","#ifdef USE_ALPHAMAP","vUvAlpha = (texMatrixAlpha * vec3(uv, 1.0)).xy;","#endif","#endif","}","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vec4 p_Position = projectionMatrix * mvPosition;","gl_Position = p_Position;","depth = -mvPosition.z;","passCutoutUVCoords();","}"].join("\n"),fragmentShader:[h.ShadowMapDeclareCommonUniforms,"varying float depth;","#ifdef USE_SURFACE_CUTOUT_MAP",i.AverageOfFloat3,i.GetPrismMapUniformChunk("surface_cutout_map"),"varying vec2 vUv;","#else","#ifdef USE_MAP","varying vec2 vUv;","uniform sampler2D map;","#endif","#ifdef USE_ALPHAMAP","varying vec2 vUvAlpha;","uniform sampler2D alphaMap;","#endif","#endif","uniform float shadowMinOpacity;","void applyCutoutMaps() {","float opacity = 1.0;","#ifdef USE_SURFACE_CUTOUT_MAP",i.GetPrismMapSampleChunk("surface_cutout","opacity",!0,!1),"#else","#ifdef USE_MAP","opacity *= GET_MAP(vUv).a;","#endif","#ifdef USE_ALPHAMAP","opacity *= GET_ALPHAMAP(vUvAlpha).r;","#endif","#endif","#if defined(USE_SURFACE_CUTOUT_MAP) || defined(USE_MAP) || defined(USE_ALPHAMAP)","if (opacity < shadowMinOpacity) discard;","#endif","}","void main() {","float normalizedLinearDepth = (depth - shadowMapRangeMin) / shadowMapRangeSize;","float val = exp(shadowESMConstant * normalizedLinearDepth);","#ifdef USE_HARD_SHADOWS","val = normalizedLinearDepth;","#endif","applyCutoutMaps();","gl_FragColor = vec4(val, 0, 0, 1);","}"].join("\n")},m={uniforms:h.ShadowMapUniforms,vertexShader:[h.ShadowMapVertexDeclaration,"void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);",h.ShadowMapVertexShaderChunk,"}"].join("\n"),fragmentShader:[h.ShadowMapFragmentDeclaration,"void main() {","float shadowIntensity = 0.5 * (1.0 - getShadowValue());","gl_FragColor = vec4(0.0, 0.0, 0.0, shadowIntensity);","}"].join("\n")},n=function(){function a(){this.init=function(){this.isPrism=!1,this.alphaMap=!1,this.alphaClampS=!1,this.alphaClampT=!1,this.alphaInvert=!1,this.rgbaMap=!1,this.rgbaClampS=!1,this.rgbaClampT=!1,this.rgbaInvert=!1,this.instanced=!1,this.decalIndex=-1},this.init(),this.getMaterialIndex=function(){var a=(this.isPrism?1:0)|(this.alphaMap?2:0)|(this.alphaClampS?4:0)|(this.alphaClampT?8:0)|(this.alphaInvert?16:0)|(this.rgbaMap?32:0)|(this.rgbaClampS?64:0)|(this.rgbaClampT?128:0)|(this.rgbaInvert?256:0)|(this.instanced?512:0)|1024*(this.decalIndex+1);return a}}function b(a,b){var c=a.getMaterialIndex();if(!e[c]){var d=f.clone();a.isPrism&&a.alphaMap&&(g.setMacro(d,"USE_SURFACE_CUTOUT_MAP"),d.fragmentShader=i.GetPrismMapChunk("surface_cutout",a.alphaClampS,a.alphaClampT)+"\n"+d.fragmentShader),a.instanced&&(d.useInstancing=!0),e[c]=d}return e[c]}function c(a){return a instanceof THREE.MeshPhongMaterial?a.opacity<o.ShadowMinOpacity:a.isPrismMaterial?"PrismTransparent"===a.prismType:!a.visible}function d(a,d){if(c(a))return h;var e=a instanceof THREE.MeshPhongMaterial,f=a.isPrismMaterial;
if(!e&&!f)return null;var g=e?a.alphaMap:a.surface_cutout_map,i=e&&a.alphaTest?a.map:null;if(!g&&!i&&!a.useInstancing)return null;var j=k;j.init(),j.isPrism=f,j.alphaMap=!!g,j.rgbaMap=!!i,j.instanced=a.useInstancing,j.decalIndex=void 0===d?-1:d,g&&(j.alphaClampS=g.clampS,j.alphaClampT=g.clampT,j.alphaInvert=g.invert),i&&(j.rgbaClampS=i.clampS,j.rgbaClampT=i.clampT,j.rgbaInvert=i.invert);var l=b(j,d);return g&&(e?(l.uniforms.alphaMap.value=g,l.uniforms.texMatrixAlpha.value=g.matrix,l.alphaMap=g,l.side=a.side):(l.uniforms.surface_cutout_map.value=g,l.uniforms.surface_cutout_map_texMatrix.value.copy(g.matrix),l.uniforms.surface_cutout_map_invert.value=g.invert,l.side=THREE.DoubleSide)),i&&(l.uniforms.map.value=i,l.uniforms.texMatrix.value=i.matrix,l.map=i),l}var e=[],f=g.createShaderMaterial(l),h=new THREE.Material;h.visible=!1;var j=[],k=new a;this.forEachMaterial=function(a){for(var b=0;b<e.length;b++){var c=e[b];c&&a(c)}a(f)},this.getCustomOverrideMaterial=function(a){var b=d(a);if(!b)return null;if(!a.decals)return b.decals=null,b;if(a.decals){j.length=0;for(var c=0;c<a.decals.length;c++){var e=a.decals[c],f=d(e.material,c);if(!f)return null;j.push({uv:e.uv,material:f})}}return b.decals=j,b},this.dispose=function(){this.forEachMaterial(function(a){a.dispose()})}},o={ShadowMapSize:1024,ShadowESMConstant:80,ShadowBias:.001,ShadowDarkness:.7,ShadowMapBlurRadius:4,ShadowMinOpacity:.9,UseHardShadows:!1,BlurShadowMap:!0},p=0,q=1,r=2,s=new d;f.RefreshUniformsShadow=function(a,b){a.shadowMap&&(a.shadowMap.value=b.shadowMap),a.shadowMatrix&&(a.shadowMatrix.value=b.shadowMatrix),a.shadowLightDir&&(a.shadowLightDir.value=b.shadowLightDir),a.shadowESMConstant&&(a.shadowESMConstant.value=o.ShadowESMConstant),a.shadowBias&&(a.shadowBias.value=o.ShadowBias),a.shadowMapSize&&(a.shadowMapSize.value=o.ShadowMapSize),a.shadowDarkness&&(a.shadowDarkness.value=o.ShadowDarkness)},a.exports={ShadowMapShader:l,GroundShadowShader:m,ShadowMapOverrideMaterials:n,SHADOWMAP_NEEDS_UPDATE:0,SHADOWMAP_INCOMPLETE:1,SHADOWMAP_VALID:2,ShadowConfig:o,ShadowRender:f,ShadowMaps:e}},function(a,b,c){function d(a){var b=a+"_texMatrix",c=a+"_invert",d={};return d[a]={type:"t",value:null},d[b]={type:"m3",value:new THREE.Matrix3},d[c]={type:"i",value:0},d}function e(a){var b=a+"_texMatrix",c=a+"_bumpScale",d=a+"_bumpmapType",e={};return e[a]={type:"t",value:null},e[b]={type:"m3",value:new THREE.Matrix3},e[c]={type:"v2",value:new THREE.Vector2(1,1)},e[d]={type:"i",value:0},e}function f(a){var b=["#if defined( USE_SURFACE_ALBEDO_MAP ) || defined( USE_SURFACE_ROUGHNESS_MAP ) || defined( USE_SURFACE_CUTOUT_MAP ) || defined( USE_SURFACE_ANISOTROPY_MAP ) || defined( USE_SURFACE_ROTATION_MAP ) || defined( USE_OPAQUE_ALBEDO_MAP ) || defined( USE_OPAQUE_F0_MAP ) || defined( USE_OPAQUE_LUMINANCE_MODIFIER_MAP ) || defined( USE_LAYERED_BOTTOM_F0_MAP ) || defined( USE_LAYERED_F0_MAP ) || defined( USE_LAYERED_DIFFUSE_MAP ) || defined( USE_LAYERED_FRACTION_MAP ) || defined( USE_LAYERED_ROUGHNESS_MAP ) || defined( USE_LAYERED_ANISOTROPY_MAP ) || defined( USE_LAYERED_ROTATION_MAP ) || defined( USE_METAL_F0_MAP ) || defined( USE_SURFACE_NORMAL_MAP ) || defined( USE_LAYERED_NORMAL_MAP )",a,"#endif"].join("\n");return b}function g(a,b,c,d){var e=c?"_v3":"",f=c?"vec3 ":"",g=c?b+" = averageOfFloat3("+b+e+");":"",h=d?b+e+" = SRGBToLinear("+b+e+");":"",i=["#if defined( USE_"+a.toUpperCase()+"_MAP )","vec2 uv_"+a+"_map = ("+a+"_map_texMatrix * vec3(vUv, 1.0)).xy;",a.toUpperCase()+"_CLAMP_TEST;",f+b+e+" = texture2D("+a+"_map, uv_"+a+"_map).xyz;",h,"if("+a+"_map_invert) "+b+e+" = vec3(1.0) - "+b+e+";",g,"#else",b+" = "+a+";","#endif"].join("\n");return i}function h(a){var b=a+"_texMatrix",c=a+"_invert",d="USE_"+a,e=["#if defined( "+d.toUpperCase()+" )","uniform sampler2D "+a+";","uniform mat3 "+b+";","uniform bool "+c+";","#endif"].join("\n");return e}function i(a){var b=a+"_texMatrix",c=a+"_bumpScale",d=a+"_bumpmapType",e="USE_"+a,f=["#if defined( "+e.toUpperCase()+" )","uniform sampler2D "+a+";","uniform mat3 "+b+";","uniform vec2 "+c+";","uniform int "+d+";","#endif"].join("\n");return f}var j=c(2),k=c(18),l=c(13),m=["float averageOfFloat3(in vec3 value)","{ ","    const float oneThird = 1.0 / 3.0; ","    return dot(value, vec3(oneThird, oneThird, oneThird)); ","} "].join("\n"),n={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,THREE.UniformsLib.fog,j.CutPlanesUniforms,j.IdUniforms,j.ThemingUniform,k.ShadowMapUniforms,d("surface_albedo_map"),d("surface_roughness_map"),d("surface_cutout_map"),d("surface_anisotropy_map"),d("surface_rotation_map"),d("opaque_albedo_map"),d("opaque_f0_map"),d("opaque_luminance_modifier_map"),d("layered_bottom_f0_map"),d("layered_f0_map"),d("layered_diffuse_map"),d("layered_fraction_map"),d("layered_roughness_map"),d("layered_anisotropy_map"),d("layered_rotation_map"),d("metal_f0_map"),d("wood_curly_distortion_map"),e("surface_normal_map"),e("layered_normal_map"),{surface_albedo:{type:"c",value:new THREE.Color(1118481)},surface_roughness:{type:"f",value:1},surface_anisotropy:{type:"f",value:1},surface_rotation:{type:"f",value:1},opaque_albedo:{type:"c",value:new THREE.Color(1118481)},opaque_f0:{type:"f",value:1},opaque_luminance_modifier:{type:"c",value:new THREE.Color(1118481)},opaque_luminance:{type:"f",value:1},metal_f0:{type:"c",value:new THREE.Color(1118481)},layered_f0:{type:"f",value:1},layered_diffuse:{type:"c",value:new THREE.Color(0)},layered_fraction:{type:"f",value:1},layered_bottom_f0:{type:"c",value:new THREE.Color(1118481)},layered_roughness:{type:"f",value:1},layered_anisotropy:{type:"f",value:1},layered_rotation:{type:"f",value:1},transparent_ior:{type:"f",value:2},transparent_color:{type:"c",value:new THREE.Color(1118481)},transparent_distance:{type:"f",value:1},wood_fiber_cosine_enable:{type:"i",value:1},wood_fiber_cosine_bands:{type:"i",value:2},wood_fiber_cosine_weights:{type:"v4",value:new THREE.Vector4(2.5,.5,1,1)},wood_fiber_cosine_frequencies:{type:"v4",value:new THREE.Vector4(15,4,1,1)},wood_fiber_perlin_enable:{type:"i",value:1},wood_fiber_perlin_bands:{type:"i",value:3},wood_fiber_perlin_weights:{type:"v4",value:new THREE.Vector4(3,1,.2,1)},wood_fiber_perlin_frequencies:{type:"v4",value:new THREE.Vector4(40,20,3.5,1)},wood_fiber_perlin_scale_z:{type:"f",value:.3},wood_growth_perlin_enable:{type:"i",value:1},wood_growth_perlin_bands:{type:"i",value:3},wood_growth_perlin_weights:{type:"v4",value:new THREE.Vector4(1,2,1,1)},wood_growth_perlin_frequencies:{type:"v4",value:new THREE.Vector4(1,5,13,1)},wood_latewood_ratio:{type:"f",value:.238},wood_earlywood_sharpness:{type:"f",value:.395},wood_latewood_sharpness:{type:"f",value:.109},wood_ring_thickness:{type:"f",value:.75},wood_earlycolor_perlin_enable:{type:"i",value:1},wood_earlycolor_perlin_bands:{type:"i",value:2},wood_earlycolor_perlin_weights:{type:"v4",value:new THREE.Vector4(.3,.5,.15,1)},wood_earlycolor_perlin_frequencies:{type:"v4",value:new THREE.Vector4(8,3,.35,1)},wood_early_color:{type:"c",value:new THREE.Color(.286,.157,.076)},wood_use_manual_late_color:{type:"i",value:0},wood_manual_late_color:{type:"c",value:new THREE.Color(.62,.35,.127)},wood_latecolor_perlin_enable:{type:"i",value:1},wood_latecolor_perlin_bands:{type:"i",value:1},wood_latecolor_perlin_weights:{type:"v4",value:new THREE.Vector4(.75,.55,1,1)},wood_latecolor_perlin_frequencies:{type:"v4",value:new THREE.Vector4(4.5,.05,1,1)},wood_late_color_power:{type:"f",value:1.25},wood_diffuse_perlin_enable:{type:"i",value:1},wood_diffuse_perlin_bands:{type:"i",value:3},wood_diffuse_perlin_weights:{type:"v4",value:new THREE.Vector4(.15,.2,.05,1)},wood_diffuse_perlin_frequencies:{type:"v4",value:new THREE.Vector4(.05,.1,3,1)},wood_diffuse_perlin_scale_z:{type:"f",value:.2},wood_use_pores:{type:"i",value:1},wood_pore_type:{type:"i",value:0},wood_pore_radius:{type:"f",value:.04},wood_pore_cell_dim:{type:"f",value:.15},wood_pore_color_power:{type:"f",value:1.45},wood_pore_depth:{type:"f",value:.02},wood_use_rays:{type:"i",value:1},wood_ray_color_power:{type:"f",value:1.1},wood_ray_seg_length_z:{type:"f",value:5},wood_ray_num_slices:{type:"f",value:160},wood_ray_ellipse_z2x:{type:"f",value:10},wood_ray_ellipse_radius_x:{type:"f",value:.2},wood_use_latewood_bump:{type:"i",value:1},wood_latewood_bump_depth:{type:"f",value:.01},wood_use_groove_roughness:{type:"i",value:1},wood_groove_roughness:{type:"f",value:.85},wood_diffuse_lobe_weight:{type:"f",value:.9},wood_curly_distortion_enable:{type:"i",value:0},wood_curly_distortion_scale:{type:"f",value:.25},permutationMap:{type:"t",value:null},gradientMap:{type:"t",value:null},perm2DMap:{type:"t",value:null},permGradMap:{type:"t",value:null},irradianceMap:{type:"t",value:null},envMap:{type:"t",value:null},exposureBias:{type:"f",value:1},envMapExposure:{type:"f",value:1},envRotationSin:{type:"f",value:0},envRotationCos:{type:"f",value:1},envExponentMin:{type:"f",value:1},envExponentMax:{type:"f",value:512},envExponentCount:{type:"f",value:10}}]),vertexShader:["varying vec3 vViewPosition;","varying vec3 vNormal;","#if defined(PRISMWOOD) && !defined(NO_UVW)","varying vec3 vUvw;","#endif","#if MAX_SPOT_LIGHTS > 0 || NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif",f("#define USE_MAP"),"#ifdef USE_MAP","varying vec2 vUv;","#endif","#ifdef USE_LOGDEPTHBUF","#ifdef USE_LOGDEPTHBUF_EXT","varying float vFragDepth;","#endif","uniform float logDepthBufFC;","#endif","#ifdef MRT_NORMALS","varying float depth;","#endif",j.PackNormalsShaderChunk,j.InstancingVertexDeclaration,j.IdVertexDeclaration,k.ShadowMapVertexDeclaration,"#if !defined(USE_MAP) && (MAX_DIR_LIGHTS > 0 || MAX_POINT_LIGHTS > 0 || MAX_SPOT_LIGHTS > 0)","varying vec3 vTangent;","varying vec3 vBitangent;","void ComputeTangents(vec3 normal, out vec3 u, out vec3 v)","{","    float scale = normal.z < 0.0 ? -1.0 : 1.0;","    vec3 temp = scale * normal;","    float e    = temp.z;","    float h    = 1.0/(1.0 + e);","    float hvx  = h   *  temp.y;","    float hvxy = hvx * -temp.x;","    u = vec3(e + hvx * temp.y, hvxy,                -temp.x);","    v = vec3(hvxy,             e + h * temp.x * temp.x, -temp.y);","    u *= scale;","    v *= scale;","}","#endif","void main() {","#ifdef USE_MAP","vUv = uv;","#endif","#if defined(PRISMWOOD) && !defined(NO_UVW)","vUvw = uvw;","#endif","#ifdef UNPACK_NORMALS","vec3 objectNormal = decodeNormal(normal);","#else","vec3 objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","objectNormal = getInstanceNormal(objectNormal);","vec3 instPos = getInstancePos(position);","vec3 transformedNormal = normalMatrix * objectNormal;","vNormal = normalize( transformedNormal );","vec4 mvPosition = modelViewMatrix * vec4( instPos, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vViewPosition = -mvPosition.xyz;","#if MAX_SPOT_LIGHTS > 0 || NUM_CUTPLANES > 0","vec4 worldPosition = modelMatrix * vec4( instPos, 1.0 );","vWorldPosition = worldPosition.xyz;","#endif","#if !defined(USE_MAP) && (MAX_DIR_LIGHTS > 0 || MAX_POINT_LIGHTS > 0 || MAX_SPOT_LIGHTS > 0)","vec3 Tu, Tv;","ComputeTangents(vNormal, Tu, Tv);","vTangent = Tu;","vBitangent = Tv;","#endif","#ifdef USE_LOGDEPTHBUF","if (projectionMatrix[3][3] == 0.0) {","gl_Position.z = log2(max(1.0e-6, gl_Position.w + 1.0)) * logDepthBufFC;","#ifdef USE_LOGDEPTHBUF_EXT","vFragDepth = 1.0 + gl_Position.w;","#else","gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;","#endif","} else {","#ifdef USE_LOGDEPTHBUF_EXT","vFragDepth = 1.0 + vViewPosition.z;","#else","#endif","}","#endif","#ifdef MRT_NORMALS","depth = mvPosition.z;","#endif",j.IdVertexShaderChunk,k.ShadowMapVertexShaderChunk,"}"].join("\n"),fragmentShader:["//**************************************************************************/","// Copyright 2015 Autodesk, Inc. ","// All rights reserved.","// ","// This computer source code and related instructions and comments are the ","// unpublished confidential and proprietary information of Autodesk, Inc. ","// and are protected under Federal copyright and state trade secret law. ","// They may not be disclosed to, copied or used by any third party without","// the prior written consent of Autodesk, Inc. ","//**************************************************************************/ ","#define PI 3.141592654","#define RECIPROCAL_PI 0.318309886","#define RECIPROCAL_2PI 0.159154943","#define ONE 0.00390625","uniform vec3 surface_albedo;","uniform float surface_roughness;","uniform float surface_anisotropy;","uniform float surface_rotation;","#if defined( PRISMOPAQUE )","uniform vec3 opaque_albedo;","uniform float opaque_f0;","uniform vec3 opaque_luminance_modifier;","uniform float opaque_luminance;","#elif defined( PRISMMETAL )","uniform vec3 metal_f0;","#elif defined( PRISMLAYERED )","uniform float layered_f0;","uniform vec3 layered_diffuse;","uniform float layered_fraction;","uniform vec3 layered_bottom_f0;","uniform float layered_roughness;","uniform float layered_anisotropy;","uniform float layered_rotation;","#elif defined( PRISMTRANSPARENT )","uniform float transparent_ior;","uniform vec3 transparent_color;","uniform float transparent_distance;","#elif defined( PRISMWOOD )","uniform bool wood_fiber_cosine_enable;","uniform int wood_fiber_cosine_bands;","uniform vec4 wood_fiber_cosine_weights;","uniform vec4 wood_fiber_cosine_frequencies;","uniform bool wood_fiber_perlin_enable;","uniform int wood_fiber_perlin_bands;","uniform vec4 wood_fiber_perlin_weights;","uniform vec4 wood_fiber_perlin_frequencies;","uniform float wood_fiber_perlin_scale_z;","uniform bool wood_growth_perlin_enable;","uniform int wood_growth_perlin_bands;","uniform vec4 wood_growth_perlin_weights;","uniform vec4 wood_growth_perlin_frequencies;","uniform float wood_latewood_ratio;","uniform float wood_earlywood_sharpness;","uniform float wood_latewood_sharpness;","uniform float wood_ring_thickness;","uniform bool wood_earlycolor_perlin_enable;","uniform int wood_earlycolor_perlin_bands;","uniform vec4 wood_earlycolor_perlin_weights;","uniform vec4 wood_earlycolor_perlin_frequencies;","uniform vec3 wood_early_color;","uniform bool wood_use_manual_late_color;","uniform vec3 wood_manual_late_color;","uniform bool wood_latecolor_perlin_enable;","uniform int wood_latecolor_perlin_bands;","uniform vec4 wood_latecolor_perlin_weights;","uniform vec4 wood_latecolor_perlin_frequencies;","uniform float wood_late_color_power;","uniform bool wood_diffuse_perlin_enable;","uniform int wood_diffuse_perlin_bands;","uniform vec4 wood_diffuse_perlin_weights;","uniform vec4 wood_diffuse_perlin_frequencies;","uniform float wood_diffuse_perlin_scale_z;","uniform bool wood_use_pores;","uniform int wood_pore_type;","uniform float wood_pore_radius;","uniform float wood_pore_cell_dim;","uniform float wood_pore_color_power;","uniform float wood_pore_depth;","uniform bool wood_use_rays;","uniform float wood_ray_color_power;","uniform float wood_ray_seg_length_z;","uniform float wood_ray_num_slices;","uniform float wood_ray_ellipse_z2x;","uniform float wood_ray_ellipse_radius_x;","uniform bool wood_use_latewood_bump;","uniform float wood_latewood_bump_depth;","uniform bool wood_use_groove_roughness;","uniform float wood_groove_roughness;","uniform float wood_diffuse_lobe_weight;","uniform sampler2D permutationMap;","uniform sampler2D gradientMap;","uniform sampler2D perm2DMap;","uniform sampler2D permGradMap;","#endif","uniform float envExponentMin;","uniform float envExponentMax;","uniform float envExponentCount;",j.EnvSamplingShaderChunk,"#if TONEMAP_OUTPUT > 0","uniform float exposureBias;",j.TonemapShaderChunk,"#endif","#if MAX_SPOT_LIGHTS > 0 || NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif","#ifdef USE_LOGDEPTHBUF","uniform float logDepthBufFC;","#ifdef USE_LOGDEPTHBUF_EXT","#extension GL_EXT_frag_depth : enable","varying highp float vFragDepth;","#endif","#endif",j.IdFragmentDeclaration,j.ThemingFragmentDeclaration,k.ShadowMapFragmentDeclaration,"#ifdef USE_FOG","uniform vec3 fogColor;","uniform float fogNear;","uniform float fogFar;","#endif",f("#define USE_MAP"),"#ifdef USE_MAP","varying vec2 vUv;","#endif","#if defined(PRISMWOOD) && !defined(NO_UVW)","varying vec3 vUvw;","#endif",h("surface_albedo_map"),h("surface_roughness_map"),h("surface_cutout_map"),h("surface_anisotropy_map"),h("surface_rotation_map"),h("opaque_albedo_map"),h("opaque_f0_map"),h("opaque_luminance_modifier_map"),h("layered_bottom_f0_map"),h("layered_f0_map"),h("layered_diffuse_map"),h("layered_fraction_map"),h("layered_roughness_map"),h("layered_anisotropy_map"),h("layered_rotation_map"),h("metal_f0_map"),h("wood_curly_distortion_map"),"#if defined( USE_WOOD_CURLY_DISTORTION_MAP )","uniform bool wood_curly_distortion_enable;","uniform float wood_curly_distortion_scale;","#endif",i("surface_normal_map"),i("layered_normal_map"),"float SRGBToLinearComponent(float color) {","float result = color;","if (result<=0.04045)","result *= 0.07739938;","else","result = pow(abs((result+0.055)*0.947867298), 2.4);","return result;","}","vec3 SRGBToLinear(vec3 color) {","vec3 result = color;","result.x = SRGBToLinearComponent(result.x);","result.y = SRGBToLinearComponent(result.y);","result.z = SRGBToLinearComponent(result.z);","return result;","}","#if defined( USE_ENVMAP )","uniform float envMapExposure;","uniform samplerCube envMap;","#endif",m,"#if defined( USE_SURFACE_NORMAL_MAP ) || defined( USE_LAYERED_NORMAL_MAP )","vec3 heightMapTransform(sampler2D bumpTexture, vec2 uv, mat3 transform, vec2 bumpScale, vec3 T, vec3 B, vec3 N) {","vec2 st = (transform * vec3(uv, 1.0)).xy;","mat3 mtxTangent = mat3(T, B, N);","T = normalize(mtxTangent * (transform * vec3(1.0, 0.0, 0.0)));","B = normalize(mtxTangent * (transform * vec3(0.0, 1.0, 0.0)));","const float oneThird = 1.0 / 3.0;","vec3 avg = vec3(oneThird, oneThird, oneThird);","vec2 offset = fwidth(st);","float h0 = dot(texture2D(bumpTexture, st).xyz, avg);","float hx = dot(texture2D(bumpTexture, st + vec2(offset.x, 0.0)).xyz, avg);","float hy = dot(texture2D(bumpTexture, st + vec2(0.0, offset.y)).xyz, avg);","vec2 diff = vec2(h0 - hx, h0 - hy) / offset;","return normalize(N + (diff.x * T * bumpScale.x + diff.y * B * bumpScale.y));","}","vec3 normalMapTransform(sampler2D bumpTexture, vec2 uv, mat3 transform, vec2 bumpScale, vec3 T, vec3 B, vec3 N) {","vec2 st = (transform * vec3(uv, 1.0)).xy;","vec3 NMap =  2.0 * texture2D( bumpTexture, st ).xyz - 1.0; ","return normalize(bumpScale.x * (NMap.x * T + NMap.y * B) + NMap.z * N);","}","#endif","#if !defined(USE_MAP)&& (MAX_DIR_LIGHTS > 0 || MAX_POINT_LIGHTS > 0 || MAX_SPOT_LIGHTS > 0)","varying vec3 vTangent;","varying vec3 vBitangent;","#endif","#if defined( USE_ENVMAP )","vec3 sampleReflection(vec3 N, vec3 V, float mipIndex) {","vec3 dir = (2.0 * dot(V, N)) * N - V;","dir = adjustLookupVector(mat3(viewMatrixInverse) * dir);","#ifdef ENV_GAMMA","#ifdef HAVE_TEXTURE_LOD","vec4 envTexColor = textureCubeLodEXT( envMap, dir, mipIndex );","#else","vec4 envTexColor = textureCube( envMap, dir, mipIndex );","#endif","return GammaDecode(envTexColor, envMapExposure);","#elif defined(ENV_RGBM)","#ifdef HAVE_TEXTURE_LOD","vec4 envTexColor = textureCubeLodEXT( envMap, dir, mipIndex );","#else","vec4 envTexColor = textureCube( envMap, dir, mipIndex );","#endif","return RGBMDecode(envTexColor, envMapExposure);","#else","vec4 envTexColor = textureCube( envMap, dir );","vec3 cubeColor = envTexColor.xyz;","#ifdef GAMMA_INPUT","cubeColor *= cubeColor;","#endif","return cubeColor;","#endif","}","#endif",j.HatchPatternShaderChunk,"#if defined( USE_ENVMAP ) && defined( USE_IRRADIANCEMAP )","uniform samplerCube irradianceMap;","vec3 sampleNormal(vec3 normal) {","vec3 worldNormal = mat3(viewMatrixInverse) * normal;","vec3 irradiance = sampleIrradianceMap(worldNormal, irradianceMap, envMapExposure);","irradiance = applyEnvShadow(irradiance, worldNormal);","return irradiance;","}","#endif","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","float sqr(float x) {return x*x;}","float aSqrd(float maxAlphaSqr, float cosTheta)","{","   float tan2 = 1.0/sqr(cosTheta) - 1.0;","   return maxAlphaSqr * tan2;","}","vec3 Fresnel_Schlick(vec3 f0, float cosAngle)","{","    float x = 1.0 - cosAngle;","    float x2 = x * x;","    float x5 = x * x2 * x2;","    return f0 + (1.0 - f0) * x5;","}","vec3 Fresnel_Rough(vec3 f0, float cosAngle, float alpha)","{","    float x = 1.0 - cosAngle;","    float x2 = x * x;","    float x5 = x * x2 * x2;","    vec3 maxReflectance = mix(vec3(1.0), f0, vec3(min(0.7, alpha)) / 0.7);","    return f0 + (maxReflectance - f0) * x5;","}","float IORToReflectance(float ior)","{","    return sqr((1.0 - ior)/(1.0 + ior));","}","vec2 RoughnessToAlpha(float roughness, float anisotropy)","{","    vec2 alpha = roughness * vec2(1.0, 1.0 - anisotropy);","    alpha = alpha * alpha;","    alpha = clamp(alpha, 0.001, 1.0);","    return alpha;","}","float AlphaToPhong(float alpha)","{","    return max(0.0, 2.56/alpha - 7.0);","}","float ExponentToReflMipIndex(float exponent)","{","    float targetLog = log2(exponent);","    float minLog = log2(envExponentMin); ","    float maxLog = log2(envExponentMax); ","    float deltaLog = clamp(targetLog - minLog, 0.0, maxLog - minLog);  ","    float level = clamp((1.0-(deltaLog + 0.5) / envExponentCount), 0.0, 1.0) * 6.0; ","    return level; ","}","#if defined( PRISMWOOD )","#if defined( USE_WOOD_CURLY_DISTORTION_MAP )","float SampleCurlyPattern(vec2 uv)","{","    vec2 uv_wood_curly_distortion_map = (wood_curly_distortion_map_texMatrix * vec3(uv, 1.0)).xy;","    WOOD_CURLY_DISTORTION_CLAMP_TEST;","    vec3 curlyDistortion = texture2D(wood_curly_distortion_map, uv_wood_curly_distortion_map).xyz;","    if(wood_curly_distortion_map_invert) curlyDistortion = vec3(1.0) - curlyDistortion;","    return curlyDistortion.r;","}","float GetIndexedValue(vec4 array, int index)","{","    if (index == 0)","    \treturn array[0];","    else if (index == 1)","    \treturn array[1];","    else if (index == 2)","    \treturn array[2];","    else if (index == 3)","    \treturn array[3];","    else","    \treturn 0.0;","}","vec3 DistortCurly(vec3 p)","{","    if (!wood_curly_distortion_enable) return p;","    float r = length(p.xy);","    if (r < 0.00001) return p;","    const float INV_ANGLE_INTERVAL = 1.27323954;","    const float NUM_INTERVAL = 8.0;","    const float PI2 = 6.283185308;","    float theta = atan(p.y, p.x);","    if (theta < 0.0)","        theta += PI2;","    float intIdx = theta * INV_ANGLE_INTERVAL;","    int idx0 = int(mod(floor(intIdx), NUM_INTERVAL));","    int idx1 = int(mod(ceil(intIdx), NUM_INTERVAL));","    const vec4 HASH_TABLE1 = vec4(0.450572,0.114598, 0.886043, 0.315119);","    const vec4 HASH_TABLE2 = vec4(0.216133,0.306264, 0.685616, 0.317907);","    float offset0 = idx0 < 4 ? GetIndexedValue(HASH_TABLE1, idx0) : GetIndexedValue(HASH_TABLE2, idx0-4);","    float offset1 = idx1 < 4 ? GetIndexedValue(HASH_TABLE1, idx1) : GetIndexedValue(HASH_TABLE2, idx1-4);","    const float maxOffset = 100.0;","    offset0 = (offset0 - 0.5) * maxOffset;","    offset1 = (offset1 - 0.5) * maxOffset;","    vec2 uv0 = vec2(p.z + offset0, r);","    float shiftWeight0 =  SampleCurlyPattern(uv0);","    vec2 uv1 = vec2(p.z + offset1, r);","    float shiftWeight1 =  SampleCurlyPattern(uv1);","    float interpWeight = fract(intIdx);","    float shiftWeight = mix(shiftWeight0, shiftWeight1, interpWeight);","    const float INV_MIN_RADIUS = 2.0;","    float shiftWeightAdjust = smoothstep(0.0, 1.0, r * INV_MIN_RADIUS);","    r -= wood_curly_distortion_scale * (shiftWeight * shiftWeightAdjust);","    float thetaNew = atan(p.y, p.x);","    vec3 pNew = p;","    pNew.x = r * cos(thetaNew);","    pNew.y = r * sin(thetaNew);","    return pNew;","}","#endif","vec3 NoiseWood(inout float roughness_inout)","{","#ifdef NO_UVW","   vec3 vUvw_uniform = vec3(0.0);","#elif defined( USE_WOOD_CURLY_DISTORTION_MAP )","   vec3 vUvw_uniform = DistortCurly(vUvw);","#else","   vec3 vUvw_uniform = vUvw;","#endif","  lowp float surfaceRoughness_1;","  surfaceRoughness_1 = surface_roughness;","  lowp float roughness_2;","  roughness_2 = surfaceRoughness_1;","  lowp vec3 diffAlbedo_3;","  lowp vec3 lateColor_4;","  lowp vec3 earlyColor_5;","  lowp float radiusLength_6;","  lowp vec3 p_7;","  p_7 = vUvw_uniform;","  if (wood_fiber_cosine_enable) {","    lowp vec3 p_8;","    p_8 = p_7;","    lowp vec3 tmpvar_9;","    lowp float weight_10;","    lowp float radiusShift_11;","    lowp float tmpvar_12;","    tmpvar_12 = sqrt(dot (vUvw_uniform.xy, vUvw_uniform.xy));","    if ((tmpvar_12 < 1e-05)) {","      tmpvar_9 = p_7;","    } else {","      lowp vec2 tmpvar_13;","      tmpvar_13 = (vUvw_uniform.xy / tmpvar_12);","      radiusShift_11 = 0.0;","      if ((0 < wood_fiber_cosine_bands)) {","        radiusShift_11 = (wood_fiber_cosine_weights.x * cos((","          (vUvw_uniform.z * 0.1591549)","         * wood_fiber_cosine_frequencies.x)));","        if ((1 < wood_fiber_cosine_bands)) {","          radiusShift_11 = (radiusShift_11 + (wood_fiber_cosine_weights.y * cos(","            ((vUvw_uniform.z * 0.1591549) * wood_fiber_cosine_frequencies.y)","          )));","          if ((2 < wood_fiber_cosine_bands)) {","            radiusShift_11 = (radiusShift_11 + (wood_fiber_cosine_weights.z * cos(","              ((vUvw_uniform.z * 0.1591549) * wood_fiber_cosine_frequencies.z)","            )));","            if ((3 < wood_fiber_cosine_bands)) {","              radiusShift_11 = (radiusShift_11 + (wood_fiber_cosine_weights.w * cos(","                ((vUvw_uniform.z * 0.1591549) * wood_fiber_cosine_frequencies.w)","              )));","            };","          };","        };","      };","      lowp float tmpvar_14;","      tmpvar_14 = clamp ((tmpvar_12 / 1.5), 0.0, 1.0);","      weight_10 = tmpvar_14;","      if ((tmpvar_14 >= 0.5)) {","        weight_10 = ((tmpvar_14 * tmpvar_14) * (3.0 - (tmpvar_14 + tmpvar_14)));","      };","      p_8.xy = (vUvw_uniform.xy + ((tmpvar_13 * radiusShift_11) * weight_10));","      tmpvar_9 = p_8;","    };","    p_7 = tmpvar_9;","  };","  if (wood_fiber_perlin_enable) {","    lowp vec3 p_15;","    p_15 = p_7;","    lowp vec3 tmpvar_16;","    tmpvar_16.xy = p_7.xy;","    tmpvar_16.z = (p_7.z * wood_fiber_perlin_scale_z);","    lowp vec3 p_17;","    p_17 = tmpvar_16;","    highp int bands_18;","    bands_18 = wood_fiber_perlin_bands;","    highp vec4 w_19;","    w_19 = wood_fiber_perlin_weights;","    highp vec4 f_20;","    f_20 = wood_fiber_perlin_frequencies;","    lowp float noise_22;","    noise_22 = 0.0;","    for (int i_21 = 0; i_21 < 4; ++i_21) {","      if ((i_21 >= bands_18)) {","        break;","      };","      lowp vec3 p_23;","      highp float f_20_value = i_21 == 0 ? f_20[0] : i_21 == 1 ? f_20[1] : i_21 == 2 ? f_20[2] : f_20[3];","      p_23 = (p_17 * f_20_value);","      lowp vec4 AA_24;","      lowp vec3 modp_25;","      lowp vec3 tmpvar_26;","      tmpvar_26 = (vec3(mod (floor(p_23), 256.0)));","      modp_25.z = tmpvar_26.z;","      modp_25.xy = (tmpvar_26.xy * 0.00390625);","      AA_24 = ((texture2D (perm2DMap, modp_25.xy, 0.0) * 255.0) + tmpvar_26.z);","      AA_24 = ((vec4(mod (floor(AA_24), 256.0))) * 0.00390625);","      lowp vec2 tmpvar_27;","      tmpvar_27.y = 0.0;","      tmpvar_27.x = AA_24.x;","      lowp vec2 tmpvar_28;","      tmpvar_28.y = 0.0;","      tmpvar_28.x = AA_24.y;","      lowp vec2 tmpvar_29;","      tmpvar_29.y = 0.0;","      tmpvar_29.x = AA_24.z;","      lowp vec2 tmpvar_30;","      tmpvar_30.y = 0.0;","      tmpvar_30.x = AA_24.w;","      lowp vec2 tmpvar_31;","      tmpvar_31.y = 0.0;","      tmpvar_31.x = (AA_24.x + 0.00390625);","      lowp vec2 tmpvar_32;","      tmpvar_32.y = 0.0;","      tmpvar_32.x = (AA_24.y + 0.00390625);","      lowp vec2 tmpvar_33;","      tmpvar_33.y = 0.0;","      tmpvar_33.x = (AA_24.z + 0.00390625);","      lowp vec2 tmpvar_34;","      tmpvar_34.y = 0.0;","      tmpvar_34.x = (AA_24.w + 0.00390625);","      p_23 = (p_23 - floor(p_23));","      lowp vec3 tmpvar_35;","      tmpvar_35 = (((p_23 * p_23) * p_23) * ((p_23 *","        ((p_23 * 6.0) - 15.0)","      ) + 10.0));","      highp float w_19_value = i_21 == 0 ? w_19[0] : i_21 == 1 ? w_19[1] : i_21 == 2 ? w_19[2] : w_19[3];","      noise_22 = (noise_22 + (w_19_value * mix (","        mix (mix (dot ((","          (texture2D (permGradMap, tmpvar_27, 0.0).xyz * 2.0)","         - 1.0), p_23), dot ((","          (texture2D (permGradMap, tmpvar_29, 0.0).xyz * 2.0)","         - 1.0), (p_23 + vec3(-1.0, 0.0, 0.0))), tmpvar_35.x), mix (dot ((","          (texture2D (permGradMap, tmpvar_28, 0.0).xyz * 2.0)","         - 1.0), (p_23 + vec3(0.0, -1.0, 0.0))), dot ((","          (texture2D (permGradMap, tmpvar_30, 0.0).xyz * 2.0)","         - 1.0), (p_23 + vec3(-1.0, -1.0, 0.0))), tmpvar_35.x), tmpvar_35.y)","      ,","        mix (mix (dot ((","          (texture2D (permGradMap, tmpvar_31, 0.0).xyz * 2.0)","         - 1.0), (p_23 + vec3(0.0, 0.0, -1.0))), dot ((","          (texture2D (permGradMap, tmpvar_33, 0.0).xyz * 2.0)","         - 1.0), (p_23 + vec3(-1.0, 0.0, -1.0))), tmpvar_35.x), mix (dot ((","          (texture2D (permGradMap, tmpvar_32, 0.0).xyz * 2.0)","         - 1.0), (p_23 + vec3(0.0, -1.0, -1.0))), dot ((","          (texture2D (permGradMap, tmpvar_34, 0.0).xyz * 2.0)","         - 1.0), (p_23 + vec3(-1.0, -1.0, -1.0))), tmpvar_35.x), tmpvar_35.y)","      , tmpvar_35.z)));","    };","    p_15.xy = (p_7.xy + noise_22);","    p_7 = p_15;","  };","  lowp float tmpvar_36;","  tmpvar_36 = sqrt(dot (p_7.xy, p_7.xy));","  radiusLength_6 = tmpvar_36;","  if (wood_growth_perlin_enable) {","    lowp float radiusLength_37;","    radiusLength_37 = tmpvar_36;","    lowp float noise_38;","    noise_38 = 0.0;","    if ((0 < wood_growth_perlin_bands)) {","      lowp float p_39;","      p_39 = (tmpvar_36 * wood_growth_perlin_frequencies.x);","      lowp float modp_40;","      modp_40 = (((float(mod (","        floor(p_39)","      , 256.0))) + 256.0) * 0.00390625);","      lowp vec2 tmpvar_41;","      tmpvar_41.y = 0.0;","      tmpvar_41.x = modp_40;","      lowp vec2 tmpvar_42;","      tmpvar_42.y = 0.0;","      tmpvar_42.x = texture2D (permutationMap, tmpvar_41, 0.0).x;","      lowp vec2 tmpvar_43;","      tmpvar_43.y = 0.0;","      tmpvar_43.x = (modp_40 + 0.00390625);","      lowp vec2 tmpvar_44;","      tmpvar_44.y = 0.0;","      tmpvar_44.x = texture2D (permutationMap, tmpvar_43, 0.0).x;","      p_39 = (p_39 - floor(p_39));","      noise_38 = (wood_growth_perlin_weights.x * mix ((","        ((texture2D (gradientMap, tmpvar_42, 0.0).x * 2.0) - 1.0)","       * p_39), (","        ((texture2D (gradientMap, tmpvar_44, 0.0).x * 2.0) - 1.0)","       *","        (p_39 - 1.0)","      ), (","        ((p_39 * p_39) * p_39)","       *","        ((p_39 * ((p_39 * 6.0) - 15.0)) + 10.0)","      )));","      if ((1 < wood_growth_perlin_bands)) {","        lowp float p_45;","        p_45 = (tmpvar_36 * wood_growth_perlin_frequencies.y);","        lowp float modp_46;","        modp_46 = (((float(mod (","          floor(p_45)","        , 256.0))) + 256.0) * 0.00390625);","        lowp vec2 tmpvar_47;","        tmpvar_47.y = 0.0;","        tmpvar_47.x = modp_46;","        lowp vec2 tmpvar_48;","        tmpvar_48.y = 0.0;","        tmpvar_48.x = texture2D (permutationMap, tmpvar_47, 0.0).x;","        lowp vec2 tmpvar_49;","        tmpvar_49.y = 0.0;","        tmpvar_49.x = (modp_46 + 0.00390625);","        lowp vec2 tmpvar_50;","        tmpvar_50.y = 0.0;","        tmpvar_50.x = texture2D (permutationMap, tmpvar_49, 0.0).x;","        p_45 = (p_45 - floor(p_45));","        noise_38 = (noise_38 + (wood_growth_perlin_weights.y * mix (","          (((texture2D (gradientMap, tmpvar_48, 0.0).x * 2.0) - 1.0) * p_45)","        ,","          (((texture2D (gradientMap, tmpvar_50, 0.0).x * 2.0) - 1.0) * (p_45 - 1.0))","        ,","          (((p_45 * p_45) * p_45) * ((p_45 * (","            (p_45 * 6.0)","           - 15.0)) + 10.0))","        )));","        if ((2 < wood_growth_perlin_bands)) {","          lowp float p_51;","          p_51 = (tmpvar_36 * wood_growth_perlin_frequencies.z);","          lowp float modp_52;","          modp_52 = (((float(mod (","            floor(p_51)","          , 256.0))) + 256.0) * 0.00390625);","          lowp vec2 tmpvar_53;","          tmpvar_53.y = 0.0;","          tmpvar_53.x = modp_52;","          lowp vec2 tmpvar_54;","          tmpvar_54.y = 0.0;","          tmpvar_54.x = texture2D (permutationMap, tmpvar_53, 0.0).x;","          lowp vec2 tmpvar_55;","          tmpvar_55.y = 0.0;","          tmpvar_55.x = (modp_52 + 0.00390625);","          lowp vec2 tmpvar_56;","          tmpvar_56.y = 0.0;","          tmpvar_56.x = texture2D (permutationMap, tmpvar_55, 0.0).x;","          p_51 = (p_51 - floor(p_51));","          noise_38 = (noise_38 + (wood_growth_perlin_weights.z * mix (","            (((texture2D (gradientMap, tmpvar_54, 0.0).x * 2.0) - 1.0) * p_51)","          ,","            (((texture2D (gradientMap, tmpvar_56, 0.0).x * 2.0) - 1.0) * (p_51 - 1.0))","          ,","            (((p_51 * p_51) * p_51) * ((p_51 * (","              (p_51 * 6.0)","             - 15.0)) + 10.0))","          )));","          if ((3 < wood_growth_perlin_bands)) {","            lowp float p_57;","            p_57 = (tmpvar_36 * wood_growth_perlin_frequencies.w);","            lowp float modp_58;","            modp_58 = (((float(mod (","              floor(p_57)","            , 256.0))) + 256.0) * 0.00390625);","            lowp vec2 tmpvar_59;","            tmpvar_59.y = 0.0;","            tmpvar_59.x = modp_58;","            lowp vec2 tmpvar_60;","            tmpvar_60.y = 0.0;","            tmpvar_60.x = texture2D (permutationMap, tmpvar_59, 0.0).x;","            lowp vec2 tmpvar_61;","            tmpvar_61.y = 0.0;","            tmpvar_61.x = (modp_58 + 0.00390625);","            lowp vec2 tmpvar_62;","            tmpvar_62.y = 0.0;","            tmpvar_62.x = texture2D (permutationMap, tmpvar_61, 0.0).x;","            p_57 = (p_57 - floor(p_57));","            noise_38 = (noise_38 + (wood_growth_perlin_weights.w * mix (","              (((texture2D (gradientMap, tmpvar_60, 0.0).x * 2.0) - 1.0) * p_57)","            ,","              (((texture2D (gradientMap, tmpvar_62, 0.0).x * 2.0) - 1.0) * (p_57 - 1.0))","            ,","              (((p_57 * p_57) * p_57) * ((p_57 * (","                (p_57 * 6.0)","               - 15.0)) + 10.0))","            )));","          };","        };","      };","    };","    radiusLength_37 = (tmpvar_36 + noise_38);","    if ((radiusLength_37 < 0.0)) {","      radiusLength_37 = 0.0;","    };","    radiusLength_6 = radiusLength_37;","  };","  lowp float earlyWoodRatio_63;","  highp float tmpvar_64;","  tmpvar_64 = (1.0 - wood_latewood_ratio);","  highp float tmpvar_65;","  tmpvar_65 = (wood_earlywood_sharpness * tmpvar_64);","  highp float tmpvar_66;","  tmpvar_66 = (wood_latewood_sharpness * wood_latewood_ratio);","  highp float tmpvar_67;","  tmpvar_67 = (tmpvar_64 - tmpvar_65);","  highp float tmpvar_68;","  tmpvar_68 = (tmpvar_64 + tmpvar_66);","  highp float tmpvar_69;","  tmpvar_69 = (wood_latewood_ratio - tmpvar_66);","  lowp float tmpvar_70;","  tmpvar_70 = ((float(mod (radiusLength_6, wood_ring_thickness))) / wood_ring_thickness);","  earlyWoodRatio_63 = 0.0;","  if ((tmpvar_70 <= tmpvar_65)) {","    earlyWoodRatio_63 = 1.0;","  } else {","    if ((tmpvar_70 <= tmpvar_64)) {","      earlyWoodRatio_63 = (1.0 - ((tmpvar_70 - tmpvar_65) / tmpvar_67));","    } else {","      if ((tmpvar_70 <= tmpvar_68)) {","        earlyWoodRatio_63 = 0.0;","      } else {","        earlyWoodRatio_63 = ((tmpvar_70 - tmpvar_68) / tmpvar_69);","      };","    };","  };","  earlyColor_5 = wood_early_color;","  if (wood_earlycolor_perlin_enable) {","    lowp float noise_71;","    noise_71 = 0.0;","    if ((0 < wood_earlycolor_perlin_bands)) {","      lowp float p_72;","      p_72 = (radiusLength_6 * wood_earlycolor_perlin_frequencies.x);","      lowp float modp_73;","      modp_73 = (((float(mod (","        floor(p_72)","      , 256.0))) + 256.0) * 0.00390625);","      lowp vec2 tmpvar_74;","      tmpvar_74.y = 0.0;","      tmpvar_74.x = modp_73;","      lowp vec2 tmpvar_75;","      tmpvar_75.y = 0.0;","      tmpvar_75.x = texture2D (permutationMap, tmpvar_74, 0.0).x;","      lowp vec2 tmpvar_76;","      tmpvar_76.y = 0.0;","      tmpvar_76.x = (modp_73 + 0.00390625);","      lowp vec2 tmpvar_77;","      tmpvar_77.y = 0.0;","      tmpvar_77.x = texture2D (permutationMap, tmpvar_76, 0.0).x;","      p_72 = (p_72 - floor(p_72));","      noise_71 = (wood_earlycolor_perlin_weights.x * mix ((","        ((texture2D (gradientMap, tmpvar_75, 0.0).x * 2.0) - 1.0)","       * p_72), (","        ((texture2D (gradientMap, tmpvar_77, 0.0).x * 2.0) - 1.0)","       *","        (p_72 - 1.0)","      ), (","        ((p_72 * p_72) * p_72)","       *","        ((p_72 * ((p_72 * 6.0) - 15.0)) + 10.0)","      )));","      if ((1 < wood_earlycolor_perlin_bands)) {","        lowp float p_78;","        p_78 = (radiusLength_6 * wood_earlycolor_perlin_frequencies.y);","        lowp float modp_79;","        modp_79 = (((float(mod (","          floor(p_78)","        , 256.0))) + 256.0) * 0.00390625);","        lowp vec2 tmpvar_80;","        tmpvar_80.y = 0.0;","        tmpvar_80.x = modp_79;","        lowp vec2 tmpvar_81;","        tmpvar_81.y = 0.0;","        tmpvar_81.x = texture2D (permutationMap, tmpvar_80, 0.0).x;","        lowp vec2 tmpvar_82;","        tmpvar_82.y = 0.0;","        tmpvar_82.x = (modp_79 + 0.00390625);","        lowp vec2 tmpvar_83;","        tmpvar_83.y = 0.0;","        tmpvar_83.x = texture2D (permutationMap, tmpvar_82, 0.0).x;","        p_78 = (p_78 - floor(p_78));","        noise_71 = (noise_71 + (wood_earlycolor_perlin_weights.y * mix (","          (((texture2D (gradientMap, tmpvar_81, 0.0).x * 2.0) - 1.0) * p_78)","        ,","          (((texture2D (gradientMap, tmpvar_83, 0.0).x * 2.0) - 1.0) * (p_78 - 1.0))","        ,","          (((p_78 * p_78) * p_78) * ((p_78 * (","            (p_78 * 6.0)","           - 15.0)) + 10.0))","        )));","        if ((2 < wood_earlycolor_perlin_bands)) {","          lowp float p_84;","          p_84 = (radiusLength_6 * wood_earlycolor_perlin_frequencies.z);","          lowp float modp_85;","          modp_85 = (((float(mod (","            floor(p_84)","          , 256.0))) + 256.0) * 0.00390625);","          lowp vec2 tmpvar_86;","          tmpvar_86.y = 0.0;","          tmpvar_86.x = modp_85;","          lowp vec2 tmpvar_87;","          tmpvar_87.y = 0.0;","          tmpvar_87.x = texture2D (permutationMap, tmpvar_86, 0.0).x;","          lowp vec2 tmpvar_88;","          tmpvar_88.y = 0.0;","          tmpvar_88.x = (modp_85 + 0.00390625);","          lowp vec2 tmpvar_89;","          tmpvar_89.y = 0.0;","          tmpvar_89.x = texture2D (permutationMap, tmpvar_88, 0.0).x;","          p_84 = (p_84 - floor(p_84));","          noise_71 = (noise_71 + (wood_earlycolor_perlin_weights.z * mix (","            (((texture2D (gradientMap, tmpvar_87, 0.0).x * 2.0) - 1.0) * p_84)","          ,","            (((texture2D (gradientMap, tmpvar_89, 0.0).x * 2.0) - 1.0) * (p_84 - 1.0))","          ,","            (((p_84 * p_84) * p_84) * ((p_84 * (","              (p_84 * 6.0)","             - 15.0)) + 10.0))","          )));","          if ((3 < wood_earlycolor_perlin_bands)) {","            lowp float p_90;","            p_90 = (radiusLength_6 * wood_earlycolor_perlin_frequencies.w);","            lowp float modp_91;","            modp_91 = (((float(mod (","              floor(p_90)","            , 256.0))) + 256.0) * 0.00390625);","            lowp vec2 tmpvar_92;","            tmpvar_92.y = 0.0;","            tmpvar_92.x = modp_91;","            lowp vec2 tmpvar_93;","            tmpvar_93.y = 0.0;","            tmpvar_93.x = texture2D (permutationMap, tmpvar_92, 0.0).x;","            lowp vec2 tmpvar_94;","            tmpvar_94.y = 0.0;","            tmpvar_94.x = (modp_91 + 0.00390625);","            lowp vec2 tmpvar_95;","            tmpvar_95.y = 0.0;","            tmpvar_95.x = texture2D (permutationMap, tmpvar_94, 0.0).x;","            p_90 = (p_90 - floor(p_90));","            noise_71 = (noise_71 + (wood_earlycolor_perlin_weights.w * mix (","              (((texture2D (gradientMap, tmpvar_93, 0.0).x * 2.0) - 1.0) * p_90)","            ,","              (((texture2D (gradientMap, tmpvar_95, 0.0).x * 2.0) - 1.0) * (p_90 - 1.0))","            ,","              (((p_90 * p_90) * p_90) * ((p_90 * (","                (p_90 * 6.0)","               - 15.0)) + 10.0))","            )));","          };","        };","      };","    };","    earlyColor_5 = pow (abs(wood_early_color), vec3((1.0 + noise_71)));","  };","  if (wood_use_manual_late_color) {","    lateColor_4 = wood_manual_late_color;","  } else {","    lateColor_4 = pow (abs(earlyColor_5), vec3(wood_late_color_power));","  };","  if (wood_latecolor_perlin_enable) {","    lowp float noise_96;","    noise_96 = 0.0;","    if ((0 < wood_latecolor_perlin_bands)) {","      lowp float p_97;","      p_97 = (radiusLength_6 * wood_latecolor_perlin_frequencies.x);","      lowp float modp_98;","      modp_98 = (((float(mod (","        floor(p_97)","      , 256.0))) + 256.0) * 0.00390625);","      lowp vec2 tmpvar_99;","      tmpvar_99.y = 0.0;","      tmpvar_99.x = modp_98;","      lowp vec2 tmpvar_100;","      tmpvar_100.y = 0.0;","      tmpvar_100.x = texture2D (permutationMap, tmpvar_99, 0.0).x;","      lowp vec2 tmpvar_101;","      tmpvar_101.y = 0.0;","      tmpvar_101.x = (modp_98 + 0.00390625);","      lowp vec2 tmpvar_102;","      tmpvar_102.y = 0.0;","      tmpvar_102.x = texture2D (permutationMap, tmpvar_101, 0.0).x;","      p_97 = (p_97 - floor(p_97));","      noise_96 = (wood_latecolor_perlin_weights.x * mix ((","        ((texture2D (gradientMap, tmpvar_100, 0.0).x * 2.0) - 1.0)","       * p_97), (","        ((texture2D (gradientMap, tmpvar_102, 0.0).x * 2.0) - 1.0)","       *","        (p_97 - 1.0)","      ), (","        ((p_97 * p_97) * p_97)","       *","        ((p_97 * ((p_97 * 6.0) - 15.0)) + 10.0)","      )));","      if ((1 < wood_latecolor_perlin_bands)) {","        lowp float p_103;","        p_103 = (radiusLength_6 * wood_latecolor_perlin_frequencies.y);","        lowp float modp_104;","        modp_104 = (((float(mod (","          floor(p_103)","        , 256.0))) + 256.0) * 0.00390625);","        lowp vec2 tmpvar_105;","        tmpvar_105.y = 0.0;","        tmpvar_105.x = modp_104;","        lowp vec2 tmpvar_106;","        tmpvar_106.y = 0.0;","        tmpvar_106.x = texture2D (permutationMap, tmpvar_105, 0.0).x;","        lowp vec2 tmpvar_107;","        tmpvar_107.y = 0.0;","        tmpvar_107.x = (modp_104 + 0.00390625);","        lowp vec2 tmpvar_108;","        tmpvar_108.y = 0.0;","        tmpvar_108.x = texture2D (permutationMap, tmpvar_107, 0.0).x;","        p_103 = (p_103 - floor(p_103));","        noise_96 = (noise_96 + (wood_latecolor_perlin_weights.y * mix (","          (((texture2D (gradientMap, tmpvar_106, 0.0).x * 2.0) - 1.0) * p_103)","        ,","          (((texture2D (gradientMap, tmpvar_108, 0.0).x * 2.0) - 1.0) * (p_103 - 1.0))","        ,","          (((p_103 * p_103) * p_103) * ((p_103 * (","            (p_103 * 6.0)","           - 15.0)) + 10.0))","        )));","        if ((2 < wood_latecolor_perlin_bands)) {","          lowp float p_109;","          p_109 = (radiusLength_6 * wood_latecolor_perlin_frequencies.z);","          lowp float modp_110;","          modp_110 = (((float(mod (","            floor(p_109)","          , 256.0))) + 256.0) * 0.00390625);","          lowp vec2 tmpvar_111;","          tmpvar_111.y = 0.0;","          tmpvar_111.x = modp_110;","          lowp vec2 tmpvar_112;","          tmpvar_112.y = 0.0;","          tmpvar_112.x = texture2D (permutationMap, tmpvar_111, 0.0).x;","          lowp vec2 tmpvar_113;","          tmpvar_113.y = 0.0;","          tmpvar_113.x = (modp_110 + 0.00390625);","          lowp vec2 tmpvar_114;","          tmpvar_114.y = 0.0;","          tmpvar_114.x = texture2D (permutationMap, tmpvar_113, 0.0).x;","          p_109 = (p_109 - floor(p_109));","          noise_96 = (noise_96 + (wood_latecolor_perlin_weights.z * mix (","            (((texture2D (gradientMap, tmpvar_112, 0.0).x * 2.0) - 1.0) * p_109)","          ,","            (((texture2D (gradientMap, tmpvar_114, 0.0).x * 2.0) - 1.0) * (p_109 - 1.0))","          ,","            (((p_109 * p_109) * p_109) * ((p_109 * (","              (p_109 * 6.0)","             - 15.0)) + 10.0))","          )));","          if ((3 < wood_latecolor_perlin_bands)) {","            lowp float p_115;","            p_115 = (radiusLength_6 * wood_latecolor_perlin_frequencies.w);","            lowp float modp_116;","            modp_116 = (((float(mod (","              floor(p_115)","            , 256.0))) + 256.0) * 0.00390625);","            lowp vec2 tmpvar_117;","            tmpvar_117.y = 0.0;","            tmpvar_117.x = modp_116;","            lowp vec2 tmpvar_118;","            tmpvar_118.y = 0.0;","            tmpvar_118.x = texture2D (permutationMap, tmpvar_117, 0.0).x;","            lowp vec2 tmpvar_119;","            tmpvar_119.y = 0.0;","            tmpvar_119.x = (modp_116 + 0.00390625);","            lowp vec2 tmpvar_120;","            tmpvar_120.y = 0.0;","            tmpvar_120.x = texture2D (permutationMap, tmpvar_119, 0.0).x;","            p_115 = (p_115 - floor(p_115));","            noise_96 = (noise_96 + (wood_latecolor_perlin_weights.w * mix (","              (((texture2D (gradientMap, tmpvar_118, 0.0).x * 2.0) - 1.0) * p_115)","            ,","              (((texture2D (gradientMap, tmpvar_120, 0.0).x * 2.0) - 1.0) * (p_115 - 1.0))","            ,","              (((p_115 * p_115) * p_115) * ((p_115 * (","                (p_115 * 6.0)","               - 15.0)) + 10.0))","            )));","          };","        };","      };","    };","    lateColor_4 = pow (abs(lateColor_4), vec3((1.0 + noise_96)));","  };","  lowp vec3 tmpvar_121;","  tmpvar_121 = ((earlyWoodRatio_63 * earlyColor_5) + ((1.0 - earlyWoodRatio_63) * lateColor_4));","  diffAlbedo_3 = tmpvar_121;","  if (wood_diffuse_perlin_enable) {","    lowp vec3 p_122;","    p_122.xy = p_7.xy;","    p_122.z = (p_7.z * wood_diffuse_perlin_scale_z);","    lowp vec3 p_123;","    p_123 = p_122;","    highp int bands_124;","    bands_124 = wood_diffuse_perlin_bands;","    highp vec4 w_125;","    w_125 = wood_diffuse_perlin_weights;","    highp vec4 f_126;","    f_126 = wood_diffuse_perlin_frequencies;","    lowp float noise_128;","    noise_128 = 0.0;","    for (int i_127 = 0; i_127 < 4; ++i_127) {","      if ((i_127 >= bands_124)) {","        break;","      };","      lowp vec3 p_129;","      highp float f_126_value = i_127 == 0 ? f_126[0] : i_127 == 1 ? f_126[1] : i_127 == 2 ? f_126[2] : f_126[3];","      p_129 = (p_123 * f_126_value);","      lowp vec4 AA_130;","      lowp vec3 modp_131;","      lowp vec3 tmpvar_132;","      tmpvar_132 = (vec3(mod (floor(p_129), 256.0)));","      modp_131.z = tmpvar_132.z;","      modp_131.xy = (tmpvar_132.xy * 0.00390625);","      AA_130 = ((texture2D (perm2DMap, modp_131.xy, 0.0) * 255.0) + tmpvar_132.z);","      AA_130 = ((vec4(mod (floor(AA_130), 256.0))) * 0.00390625);","      lowp vec2 tmpvar_133;","      tmpvar_133.y = 0.0;","      tmpvar_133.x = AA_130.x;","      lowp vec2 tmpvar_134;","      tmpvar_134.y = 0.0;","      tmpvar_134.x = AA_130.y;","      lowp vec2 tmpvar_135;","      tmpvar_135.y = 0.0;","      tmpvar_135.x = AA_130.z;","      lowp vec2 tmpvar_136;","      tmpvar_136.y = 0.0;","      tmpvar_136.x = AA_130.w;","      lowp vec2 tmpvar_137;","      tmpvar_137.y = 0.0;","      tmpvar_137.x = (AA_130.x + 0.00390625);","      lowp vec2 tmpvar_138;","      tmpvar_138.y = 0.0;","      tmpvar_138.x = (AA_130.y + 0.00390625);","      lowp vec2 tmpvar_139;","      tmpvar_139.y = 0.0;","      tmpvar_139.x = (AA_130.z + 0.00390625);","      lowp vec2 tmpvar_140;","      tmpvar_140.y = 0.0;","      tmpvar_140.x = (AA_130.w + 0.00390625);","      p_129 = (p_129 - floor(p_129));","      lowp vec3 tmpvar_141;","      tmpvar_141 = (((p_129 * p_129) * p_129) * ((p_129 *","        ((p_129 * 6.0) - 15.0)","      ) + 10.0));","      highp float w_125_value = i_127 == 0 ? w_125[0] : i_127 == 1 ? w_125[1] : i_127 == 2 ? w_125[2] : w_125[3];","      noise_128 = (noise_128 + (w_125_value * mix (","        mix (mix (dot ((","          (texture2D (permGradMap, tmpvar_133, 0.0).xyz * 2.0)","         - 1.0), p_129), dot ((","          (texture2D (permGradMap, tmpvar_135, 0.0).xyz * 2.0)","         - 1.0), (p_129 + vec3(-1.0, 0.0, 0.0))), tmpvar_141.x), mix (dot ((","          (texture2D (permGradMap, tmpvar_134, 0.0).xyz * 2.0)","         - 1.0), (p_129 + vec3(0.0, -1.0, 0.0))), dot ((","          (texture2D (permGradMap, tmpvar_136, 0.0).xyz * 2.0)","         - 1.0), (p_129 + vec3(-1.0, -1.0, 0.0))), tmpvar_141.x), tmpvar_141.y)","      ,","        mix (mix (dot ((","          (texture2D (permGradMap, tmpvar_137, 0.0).xyz * 2.0)","         - 1.0), (p_129 + vec3(0.0, 0.0, -1.0))), dot ((","          (texture2D (permGradMap, tmpvar_139, 0.0).xyz * 2.0)","         - 1.0), (p_129 + vec3(-1.0, 0.0, -1.0))), tmpvar_141.x), mix (dot ((","          (texture2D (permGradMap, tmpvar_138, 0.0).xyz * 2.0)","         - 1.0), (p_129 + vec3(0.0, -1.0, -1.0))), dot ((","          (texture2D (permGradMap, tmpvar_140, 0.0).xyz * 2.0)","         - 1.0), (p_129 + vec3(-1.0, -1.0, -1.0))), tmpvar_141.x), tmpvar_141.y)","      , tmpvar_141.z)));","    };","    diffAlbedo_3 = pow (abs(tmpvar_121), vec3((1.0 + noise_128)));","  };","  if (wood_use_pores) {","    lowp float woodWeight_142;","    woodWeight_142 = 0.0;","    if ((wood_pore_type == 0)) {","      woodWeight_142 = 1.0;","    } else {","      if ((wood_pore_type == 1)) {","        woodWeight_142 = earlyWoodRatio_63;","      } else {","        if ((wood_pore_type == 2)) {","          woodWeight_142 = (1.0 - earlyWoodRatio_63);","        } else {","          woodWeight_142 = -1.0;","        };","      };","    };","    lowp vec3 p_143;","    p_143 = p_7;","    lowp float tmpvar_144;","    lowp float invRsq_146;","    lowp float weight_147;","    lowp vec2 right_148;","    lowp vec2 left_149;","    if ((woodWeight_142 < 0.0)) {","      tmpvar_144 = 0.0;","    } else {","      lowp float tmpvar_150;","      tmpvar_150 = (wood_pore_radius * woodWeight_142);","      left_149 = floor(((p_7.xy - tmpvar_150) / wood_pore_cell_dim));","      right_148 = floor(((p_7.xy + tmpvar_150) / wood_pore_cell_dim));","      weight_147 = 0.0;","      invRsq_146 = (1.0/((tmpvar_150 * tmpvar_150)));","      for (int j_145 = 0; j_145 <= 4; ++j_145) {","        if ((j_145 > int((right_148.y - left_149.y)))) {","          continue;","        };","        for (int i_151 = 0; i_151 <= 4; ++i_151) {","          lowp float impPosY_152;","          lowp float impPosX_153;","          if ((i_151 > int((right_148.x - left_149.x)))) {","            continue;","          };","          lowp vec2 tmpvar_154;","          tmpvar_154.x = (float(i_151) + left_149.x);","          tmpvar_154.y = (float(j_145) + left_149.y);","          lowp float tmpvar_155;","          lowp vec2 k_156;","          k_156 = ((vec2(mod (tmpvar_154, vec2(256.0, 256.0)))) * 0.00390625);","          lowp vec2 tmpvar_157;","          tmpvar_157.y = 0.0;","          tmpvar_157.x = k_156.x;","          lowp vec2 tmpvar_158;","          tmpvar_158.y = 0.0;","          tmpvar_158.x = (texture2D (permutationMap, tmpvar_157).x + k_156.y);","          tmpvar_155 = (texture2D (permutationMap, tmpvar_158).x * 255.0);","          impPosX_153 = ((tmpvar_154.x + (","            (float(mod (tmpvar_155, 16.0)))","           * 0.06666667)) * wood_pore_cell_dim);","          impPosY_152 = ((tmpvar_154.y + (","            floor((tmpvar_155 / 16.0))","           * 0.06666667)) * wood_pore_cell_dim);","          lowp float rsq_159;","          rsq_159 = (((","            (p_143.x - impPosX_153)","           *","            (p_143.x - impPosX_153)","          ) + (","            (p_143.y - impPosY_152)","           *","            (p_143.y - impPosY_152)","          )) * invRsq_146);","          lowp float tmpvar_160;","          if ((rsq_159 >= 1.0)) {","            tmpvar_160 = 0.0;","          } else {","            lowp float tmpvar_161;","            tmpvar_161 = (1.0 - rsq_159);","            tmpvar_160 = ((tmpvar_161 * tmpvar_161) * tmpvar_161);","          };","          weight_147 = (weight_147 + tmpvar_160);","        };","      };","      tmpvar_144 = weight_147;","    };","    diffAlbedo_3 = pow (abs(diffAlbedo_3), vec3(((","      (wood_pore_color_power - 1.0)","     * tmpvar_144) + 1.0)));","  };","  if (wood_use_rays) {","    lowp vec3 p_162;","    p_162 = p_7;","    lowp float radialLength_164;","    lowp float weight_165;","    lowp ivec2 arrSegs_166;","    lowp float sliceIdx_167;","    lowp int segIdx1_168;","    lowp int tmpvar_169;","    tmpvar_169 = int(floor((p_7.z / wood_ray_seg_length_z)));","    lowp float tmpvar_170;","    tmpvar_170 = ((p_7.z / wood_ray_seg_length_z) - float(tmpvar_169));","    segIdx1_168 = (tmpvar_169 - 1);","    if ((tmpvar_170 > 0.5)) {","      segIdx1_168 = (tmpvar_169 + 1);","    };","    lowp float tmpvar_171;","    lowp float tmpvar_172;","    tmpvar_172 = (min (abs(","      (p_7.y / p_7.x)","    ), 1.0) / max (abs(","      (p_7.y / p_7.x)","    ), 1.0));","    lowp float tmpvar_173;","    tmpvar_173 = (tmpvar_172 * tmpvar_172);","    tmpvar_173 = (((","      ((((","        ((((-0.01213232 * tmpvar_173) + 0.05368138) * tmpvar_173) - 0.1173503)","       * tmpvar_173) + 0.1938925) * tmpvar_173) - 0.3326756)","     * tmpvar_173) + 0.9999793) * tmpvar_172);","    tmpvar_173 = (tmpvar_173 + (float(","      (abs((p_7.y / p_7.x)) > 1.0)","    ) * (","      (tmpvar_173 * -2.0)","     + 1.570796)));","    tmpvar_171 = (tmpvar_173 * sign((p_7.y / p_7.x)));","    if ((abs(p_7.x) > (1e-08 * abs(p_7.y)))) {","      if ((p_7.x < 0.0)) {","        if ((p_7.y >= 0.0)) {","          tmpvar_171 += 3.141593;","        } else {","          tmpvar_171 = (tmpvar_171 - 3.141593);","        };","      };","    } else {","      tmpvar_171 = (sign(p_7.y) * 1.570796);","    };","    lowp float tmpvar_174;","    tmpvar_174 = floor(((","      (tmpvar_171 + 3.141593)","     * 0.1591549) * wood_ray_num_slices));","    sliceIdx_167 = tmpvar_174;","    if ((tmpvar_174 == wood_ray_num_slices)) {","      sliceIdx_167 = (tmpvar_174 - 1.0);","    };","    lowp ivec2 tmpvar_175;","    tmpvar_175.x = tmpvar_169;","    tmpvar_175.y = segIdx1_168;","    arrSegs_166 = tmpvar_175;","    weight_165 = 0.0;","    radialLength_164 = sqrt(dot (p_7.xy, p_7.xy));","    for (int seg_163 = 0; seg_163 < 2; ++seg_163) {","      lowp vec3 p1_176;","      lowp float rayTheta_177;","      lowp vec2 tmpvar_178;","      tmpvar_178.x = sliceIdx_167;","      lowp int arrSegs_166_value = seg_163 == 0 ? arrSegs_166[0] : arrSegs_166[1];","      tmpvar_178.y = float(arrSegs_166_value);","      lowp float tmpvar_179;","      lowp vec2 k_180;","      k_180 = ((vec2(mod (tmpvar_178, vec2(256.0, 256.0)))) * 0.00390625);","      lowp vec2 tmpvar_181;","      tmpvar_181.y = 0.0;","      tmpvar_181.x = k_180.x;","      lowp vec2 tmpvar_182;","      tmpvar_182.y = 0.0;","      tmpvar_182.x = (texture2D (permutationMap, tmpvar_181).x + k_180.y);","      tmpvar_179 = (texture2D (permutationMap, tmpvar_182).x * 255.0);","      lowp float tmpvar_183;","      tmpvar_183 = ((float(mod (tmpvar_179, 16.0))) * 0.06666667);","      if ((radialLength_164 < (5.0 * tmpvar_183))) {","        continue;","      };","      rayTheta_177 = (((","        (sliceIdx_167 + tmpvar_183)","       / wood_ray_num_slices) * 6.283185) - 3.141593);","      lowp vec3 tmpvar_184;","      tmpvar_184.z = 0.0;","      tmpvar_184.x = cos(rayTheta_177);","      tmpvar_184.y = sin(rayTheta_177);","      p1_176.xy = p_162.xy;","      p1_176.z = (p_162.z - ((","        float(arrSegs_166_value)","       +","        ((tmpvar_179 / 16.0) * 0.06666667)","      ) * wood_ray_seg_length_z));","      p1_176.z = (p1_176.z / wood_ray_ellipse_z2x);","      lowp vec3 tmpvar_185;","      tmpvar_185 = -(p1_176);","      lowp vec3 tmpvar_186;","      tmpvar_186 = ((tmpvar_184.yzx * tmpvar_185.zxy) - (tmpvar_184.zxy * tmpvar_185.yzx));","      lowp float tmpvar_187;","      tmpvar_187 = (sqrt(dot (tmpvar_186, tmpvar_186)) / sqrt(dot (tmpvar_184, tmpvar_184)));","      lowp float rsq_188;","      rsq_188 = ((tmpvar_187 * tmpvar_187) * (1.0/((wood_ray_ellipse_radius_x * wood_ray_ellipse_radius_x))));","      lowp float tmpvar_189;","      if ((rsq_188 >= 1.0)) {","        tmpvar_189 = 0.0;","      } else {","        lowp float tmpvar_190;","        tmpvar_190 = (1.0 - rsq_188);","        tmpvar_189 = ((tmpvar_190 * tmpvar_190) * tmpvar_190);","      };","      weight_165 = (weight_165 + tmpvar_189);","    };","    diffAlbedo_3 = pow (abs(diffAlbedo_3), vec3(((","      (wood_ray_color_power - 1.0)","     * weight_165) + 1.0)));","  };","  if (wood_use_groove_roughness) {","    roughness_2 = ((earlyWoodRatio_63 * wood_groove_roughness) + ((1.0 - earlyWoodRatio_63) * surface_roughness));","  };","  roughness_inout = roughness_2;","  return diffAlbedo_3;","}","#endif","#if MAX_DIR_LIGHTS > 0 || MAX_POINT_LIGHTS > 0 || MAX_SPOT_LIGHTS > 0","vec3 DiffuseLobe(vec3 diffuseColor)","{","return diffuseColor * RECIPROCAL_PI;","}","vec3 Rotate(vec3 vec, float angle)","{","float s = sin(angle);","float c = cos(angle);","return vec3(vec.x * c - vec.y * s, vec.x * s + vec.y * c, vec.z);","}","float NDF_GGX(float alphaU, float alphaV, vec3 normal)","{","float nx2 = sqr(normal.x);","float ny2 = sqr(normal.y);","float nz2 = sqr(normal.z);","float scale = 1.0/(alphaU * alphaV * PI);","return scale/sqr(nx2/sqr(alphaU) + ny2/sqr(alphaV) + nz2);","}","float G1_GGX(float aSqrd)","{","    return 2.0 / (1.0 + sqrt(1.0 + aSqrd));","}","vec3 MicrofacetLobe(","vec3 Hlocal, float NdotL, float NdotH, float NdotV, float VdotH,","float roughness, float anisotropy, float rotation, vec3 reflectance)","{","vec2 alpha = RoughnessToAlpha(roughness, anisotropy);","Hlocal = Rotate(Hlocal, rotation);","vec3 F = Fresnel_Schlick(reflectance, VdotH);","float D = NDF_GGX(alpha.x, alpha.y, Hlocal);","float alpha2 = max(sqr(alpha.x), sqr(alpha.y));","float alpha2NL = aSqrd(alpha2, NdotL);","float alpha2NV = aSqrd(alpha2, NdotV);","float G = G1_GGX(alpha2NL) * G1_GGX(alpha2NV);","return max(F * D * G / (4.0 * NdotL * NdotV), vec3(0.0));","}","#if defined( PRISMOPAQUE )","vec3 BRDF_Opaque(vec3 Hlocal, float NdotL, float NdotH, float NdotV, float VdotH, ","                 vec3 surfaceAlbedo, float surfaceRoughness, float surfaceAnisotropy, float surfaceRotation, ","                 float opaqueF0, vec3 opaqueAlbedo)","{","    vec3 diffuse = DiffuseLobe(opaqueAlbedo);","    vec3 specular = surfaceAlbedo * MicrofacetLobe(","        Hlocal, NdotL, NdotH, NdotV, VdotH,","        surfaceRoughness, surfaceAnisotropy, surfaceRotation, vec3(opaqueF0));","    return (specular+diffuse)*NdotL;","}","#elif defined( PRISMMETAL )","vec3 BRDF_Metal(vec3 Hlocal, float NdotL, float NdotH, float NdotV, float VdotH, ","                vec3 surfaceAlbedo, float surfaceRoughness, float surfaceAnisotropy, float surfaceRotation, ","                vec3 metalF0)","{","    vec3 specular = surfaceAlbedo * MicrofacetLobe(","        Hlocal, NdotL, NdotH, NdotV, VdotH,","        surfaceRoughness, surfaceAnisotropy, surfaceRotation, metalF0);","    return specular*NdotL;","}","#elif defined( PRISMLAYERED )","vec3 BRDF_Layered(vec3 Hlocal, float NdotL, float NdotH, float NdotV, float VdotH, ","                  vec3 Hlocal2, float N2dotL, float N2dotH, float N2dotV, ","                  vec3 surfaceAlbedo, float surfaceRoughness, float surfaceAnisotropy, float surfaceRotation,","                  float layeredF0, vec3 layeredDiffuse, float layeredRoughness, float layeredAnisotropy,","                  float layeredRotation, vec3 bottom_f0, float layeredFraction)","{","    vec3 Fl = Fresnel_Schlick(vec3(layeredF0), NdotL);","    vec3 Fv = Fresnel_Schlick(vec3(layeredF0), NdotV);","    vec3 amount = (1.0 - Fl) * (1.0 - Fv);","    vec3 topSpecular = surfaceAlbedo * MicrofacetLobe(","        Hlocal, NdotL, NdotH, NdotV, VdotH,","        surfaceRoughness, surfaceAnisotropy, surfaceRotation,","        vec3(layeredF0));","    vec3 topDiffuse = DiffuseLobe(layeredDiffuse);","    vec3 botSpecular = MicrofacetLobe(","        Hlocal2, N2dotL, N2dotH, N2dotV, VdotH,","        layeredRoughness, layeredAnisotropy, layeredRotation,","        bottom_f0);","    return topSpecular*NdotL + amount * mix(topDiffuse*NdotL, botSpecular*N2dotL, layeredFraction);","}","#elif defined( PRISMTRANSPARENT )","vec3 BRDF_Transparent(vec3 Hlocal, float NdotL, float NdotH, float NdotV, float VdotH, ","                vec3 surfaceAlbedo, float surfaceRoughness, float surfaceAnisotropy, float surfaceRotation)","{","    vec3 reflectance = vec3(IORToReflectance(transparent_ior));","    vec3 specular = surfaceAlbedo * MicrofacetLobe(","        Hlocal, NdotL, NdotH, NdotV, VdotH,","        surfaceRoughness, surfaceAnisotropy, surfaceRotation, reflectance);","    return specular*NdotL;","}","#elif defined( PRISMWOOD )","vec3 BRDF_Wood(vec3 Hlocal, float NdotL, float NdotH, float NdotV, float VdotH, ","                 vec3 surfaceAlbedo, float surfaceRoughness, vec3 woodDiffuse)","{","    vec3 diffuse = DiffuseLobe(woodDiffuse);","    vec3 specular = surfaceAlbedo * MicrofacetLobe(","        Hlocal, NdotL, NdotH, NdotV, VdotH,","        surfaceRoughness, 0.0, 0.0, vec3(0.04));","    return (specular+diffuse)*NdotL;","}","#endif","#endif","#if defined( USE_ENVMAP )","#if defined( PRISMOPAQUE )","vec3 Environment_Opaque(vec3 N, vec3 V, float NdotV, vec3 surfaceAlbedo, float surfaceRoughness,","                        float opaqueF0, vec3 opaqueAlbedo)","{","    float alpha = RoughnessToAlpha(surfaceRoughness, 0.0).x;","    float exponent = AlphaToPhong(alpha);","    float reflMipIndex = ExponentToReflMipIndex(exponent);","    vec3 F = Fresnel_Rough(vec3(opaqueF0), NdotV, alpha);","#if defined( USE_IRRADIANCEMAP )","    vec3 envIrradiance = sampleNormal(N);","#else","    vec3 envIrradiance = vec3(1.0);","#endif","    vec3 diffuse = (1.0 - F) * opaqueAlbedo * envIrradiance;","     vec3 luminanceModifier;",g("opaque_luminance_modifier","luminanceModifier",!1,!0),"    vec3 emission = luminanceModifier * opaque_luminance;","    vec3 envSpecular = sampleReflection(N, V, reflMipIndex);","    vec3 specular = F* surfaceAlbedo * envSpecular;","    return diffuse + specular + emission;","}","#elif defined( PRISMMETAL )","vec3 Environment_Metal(vec3 N, vec3 V, float NdotV, vec3 surfaceAlbedo, float surfaceRoughness, vec3 metalF0)","{","    float alpha = RoughnessToAlpha(surfaceRoughness, 0.0).x;","    float exponent = AlphaToPhong(alpha);","    float reflMipIndex = ExponentToReflMipIndex(exponent);","    vec3 F = Fresnel_Rough(metalF0, NdotV, alpha);","    vec3 envSpecular = sampleReflection(N, V, reflMipIndex);","    vec3 specular = F * surfaceAlbedo * envSpecular;","    return specular;","}","#elif defined( PRISMLAYERED )","vec3 Environment_Layered(vec3 N, vec3 V, float NdotV, vec3 N2, float N2dotV, vec3 surfaceAlbedo, float surfaceRoughness,","                         float layeredF0, vec3 layeredDiffuse, float layeredRoughness, float layeredAnisotropy,","                         float layeredRotation, vec3 bottom_f0, float layeredFraction)","{","    float alpha = RoughnessToAlpha(surfaceRoughness, 0.0).x;","    float exponent = AlphaToPhong(alpha);","    float reflMipIndex = ExponentToReflMipIndex(exponent);","    vec3 envSpecular = sampleReflection(N, V, reflMipIndex);","    vec3 F = Fresnel_Schlick(vec3(layeredF0), NdotV);","    vec3 topSpecular = F * surfaceAlbedo * envSpecular;","    vec3 amount = (1.0 - F);","#if defined( USE_IRRADIANCEMAP )","    vec3 envIrradiance = sampleNormal(N);","#else","    vec3 envIrradiance = vec3(1.0);","#endif","    vec3 topDiffuse = layeredDiffuse * envIrradiance;","    alpha = RoughnessToAlpha(layeredRoughness, 0.0).x;","    exponent = AlphaToPhong(alpha);","    reflMipIndex = ExponentToReflMipIndex(exponent);","    envSpecular = sampleReflection(N2, V, reflMipIndex);","    F = Fresnel_Rough(bottom_f0, N2dotV, alpha);","    vec3 botSpecular = F * envSpecular;","    return topSpecular + amount * mix(topDiffuse, botSpecular, layeredFraction);","}","#elif defined( PRISMTRANSPARENT )","vec3 Environment_Transparent(vec3 N, vec3 V, float NdotV, vec3 surfaceAlbedo, float surfaceRoughness)","{","    float alpha = RoughnessToAlpha(surfaceRoughness, 0.0).x;","    float exponent = AlphaToPhong(alpha);","    float reflMipIndex = ExponentToReflMipIndex(exponent);","    vec3 reflectance = vec3(IORToReflectance(transparent_ior));","    vec3 F = Fresnel_Rough(reflectance, NdotV, alpha);","    vec3 envSpecular = sampleReflection(N, V, reflMipIndex);","    vec3 specular = F * surfaceAlbedo * envSpecular;","#if defined( USE_IRRADIANCEMAP )","    vec3 envIrradiance = sampleNormal(N);","#else","    vec3 envIrradiance = vec3(1.0);","#endif","    vec3 color = 0.5 * (1.0 - F) * transparent_color * envIrradiance;","    return specular + color;","}","#elif defined( PRISMWOOD )","vec3 Environment_Wood(vec3 N, vec3 V, float NdotV, vec3 surfaceAlbedo, float surfaceRoughness, vec3 woodDiffuse)","{","    float alpha = RoughnessToAlpha(surfaceRoughness, 0.0).x;","    float exponent = AlphaToPhong(alpha);","    float reflMipIndex = ExponentToReflMipIndex(exponent);","    vec3 F = Fresnel_Rough(vec3(0.04), NdotV, alpha);","#if defined( USE_IRRADIANCEMAP )","    vec3 envIrradiance = sampleNormal(N);","#else","    vec3 envIrradiance = vec3(1.0);","#endif","    vec3 diffuse = (1.0 - F) * woodDiffuse * envIrradiance;","    vec3 envSpecular = sampleReflection(N, V, reflMipIndex);","    vec3 specular = F * surfaceAlbedo * envSpecular;","    return diffuse + specular;","}","#endif","#endif","varying vec3 vNormal;","varying vec3 vViewPosition;",j.CutPlanesShaderChunk,"void main() {","#if NUM_CUTPLANES > 0","checkCutPlanes(vWorldPosition);","#endif","vec3 N = normalize(vNormal);","#if defined( USE_SURFACE_NORMAL_MAP ) || defined( USE_LAYERED_NORMAL_MAP ) || MAX_DIR_LIGHTS > 0 || MAX_POINT_LIGHTS > 0 || MAX_SPOT_LIGHTS > 0","#ifndef USE_MAP","vec3 Tu = normalize(vTangent);","vec3 Tv = normalize(vBitangent);","#else","vec3 q0 = dFdx( -vViewPosition );","vec3 q1 = dFdy( -vViewPosition );","vec2 st0 = dFdx( vUv );","vec2 st1 = dFdy( vUv );","vec3 Tu = normalize(  q0 * st1.t - q1 * st0.t );","vec3 Tv = normalize( -q0 * st1.s + q1 * st0.s );","#endif","#endif","vec3 V;","if (projectionMatrix[3][3] == 0.0) {","V = normalize( vViewPosition );","} else {","V = vec3(0.0, 0.0, 1.0);","}","N = faceforward(N, -V, N);","#if defined(PRISMLAYERED)","vec3 N2 = N;","#endif","#ifndef FLAT_SHADED","vec3 normal = normalize( vNormal );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#else","vec3 fdx = dFdx( vViewPosition );","vec3 fdy = dFdy( vViewPosition );","vec3 normal = normalize( cross( fdx, fdy ) );","#endif","vec3 geomNormal = normal;","#if defined( USE_SURFACE_NORMAL_MAP )","if (surface_normal_map_bumpmapType == 0)","     N = heightMapTransform(surface_normal_map, vUv, surface_normal_map_texMatrix, surface_normal_map_bumpScale, Tu, Tv, N);","else","     N = normalMapTransform(surface_normal_map, vUv, surface_normal_map_texMatrix, surface_normal_map_bumpScale, Tu, Tv, N);","#endif","#if defined( USE_LAYERED_NORMAL_MAP )","if (layered_normal_map_bumpmapType == 0)","     N2 = heightMapTransform(layered_normal_map, vUv, layered_normal_map_texMatrix, layered_normal_map_bumpScale, Tu, Tv, N2);","else","     N2 = normalMapTransform(layered_normal_map, vUv, layered_normal_map_texMatrix, layered_normal_map_bumpScale, Tu, Tv, N2);","#endif","float NdotV = dot(N, V);","#if defined(PRISMLAYERED)","float N2dotV = dot(N2, V);","#endif","vec3 surfaceAlbedo;",g("surface_albedo","surfaceAlbedo",!1,!0),"float surfaceRoughness;",g("surface_roughness","surfaceRoughness",!0,!1),"float surfaceAnisotropy;",g("surface_anisotropy","surfaceAnisotropy",!0,!1),"float surfaceRotation;",g("surface_rotation","surfaceRotation",!0,!1),"#if defined(PRISMOPAQUE)","float opaqueF0;",g("opaque_f0","opaqueF0",!0,!1),"vec3 opaqueAlbedo;",g("opaque_albedo","opaqueAlbedo",!1,!0),"#elif defined(PRISMMETAL)","vec3 metalF0;",g("metal_f0","metalF0",!1,!0),"#elif defined(PRISMLAYERED)","float layeredF0;",g("layered_f0","layeredF0",!0,!1),"vec3 layeredDiffuse;",g("layered_diffuse","layeredDiffuse",!1,!0),"float layeredRoughness;",g("layered_roughness","layeredRoughness",!0,!1),"float layeredAnisotropy;",g("layered_anisotropy","layeredAnisotropy",!0,!1),"float layeredRotation;",g("layered_rotation","layeredRotation",!0,!1),"vec3 bottom_f0;",g("layered_bottom_f0","bottom_f0",!1,!0),"float layeredFraction;",g("layered_fraction","layeredFraction",!0,!1),"#elif defined(PRISMWOOD)","vec3 woodDiffuse = NoiseWood(surfaceRoughness);","#endif","vec3 outRadianceLight = vec3(0.0);","#if MAX_DIR_LIGHTS > 0 || MAX_POINT_LIGHTS > 0 || MAX_SPOT_LIGHTS > 0","vec3 lightDirection[ MAX_DIR_LIGHTS + MAX_POINT_LIGHTS + MAX_SPOT_LIGHTS ];","vec3 lightColor[ MAX_DIR_LIGHTS + MAX_POINT_LIGHTS + MAX_SPOT_LIGHTS ];","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","lightDirection[i] = normalize( lDirection.xyz );","lightColor[i] = SRGBToLinear(directionalLightColor[ i ]);","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","lightDirection[MAX_DIR_LIGHTS + i] = normalize( lVector );","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lightColor[MAX_DIR_LIGHTS + i] = SRGBToLinear(pointLightColor[ i ]) * lDistance;","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","lightDirection[MAX_DIR_LIGHTS + MAX_POINT_LIGHTS + i] = normalize( lVector );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] )","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","lightColor[MAX_DIR_LIGHTS + MAX_POINT_LIGHTS + i] = SRGBToLinear(spotLightColor[ i ]) * lDistance * spotEffect;","}","#endif","for( int i = 0; i < MAX_DIR_LIGHTS + MAX_POINT_LIGHTS + MAX_SPOT_LIGHTS; i ++ ) {","vec3 L = lightDirection[i];","float NdotL = max(0.0, dot(N, L));","vec3 H = normalize(L + V);","float NdotH = dot(N, H);","float VdotH = dot(V, H);","float Hu = dot(H, Tu);","float Hv = dot(H, Tv);","vec3 Hlocal = vec3(Hu, Hv, NdotH);","#if defined(PRISMLAYERED)","float N2dotL = dot(N2, L);","float N2dotH = dot(N2, H);","vec3 Hlocal2 = vec3(Hu, Hv, N2dotH);","#endif","vec3 brdf = lightColor[i] * ","#if defined(PRISMOPAQUE)","    BRDF_Opaque(Hlocal, NdotL, NdotH, NdotV, VdotH,","                surfaceAlbedo, surfaceRoughness, surfaceAnisotropy, surfaceRotation,","                opaqueF0, opaqueAlbedo);","#elif defined(PRISMMETAL)","    BRDF_Metal(Hlocal, NdotL, NdotH, NdotV, VdotH, ","               surfaceAlbedo, surfaceRoughness, surfaceAnisotropy, surfaceRotation, ","               metalF0);","#elif defined(PRISMLAYERED)","    BRDF_Layered(Hlocal, NdotL, NdotH, NdotV, VdotH, Hlocal2, N2dotL, N2dotH, N2dotV,","                 surfaceAlbedo, surfaceRoughness, surfaceAnisotropy, surfaceRotation,","                 layeredF0, layeredDiffuse, layeredRoughness, layeredAnisotropy,","                 layeredRotation, bottom_f0, layeredFraction);","#elif defined(PRISMTRANSPARENT)","    BRDF_Transparent(Hlocal, NdotL, NdotH, NdotV, VdotH, surfaceAlbedo, surfaceRoughness, surfaceAnisotropy, surfaceRotation);","#elif defined(PRISMWOOD)","    BRDF_Wood(Hlocal, NdotL, NdotH, NdotV, VdotH, surfaceAlbedo, surfaceRoughness, woodDiffuse);","#endif","outRadianceLight += max(vec3(0.0), brdf);","}","#endif","vec3 outRadianceEnv = vec3(0.0);","#if defined( USE_ENVMAP )","outRadianceEnv =","#if defined(PRISMOPAQUE)","    Environment_Opaque(N, V, clamp(NdotV, 0.0, 1.0), surfaceAlbedo, surfaceRoughness,","                        opaqueF0, opaqueAlbedo);","#elif defined(PRISMMETAL)","    Environment_Metal(N, V, clamp(NdotV, 0.0, 1.0), surfaceAlbedo, surfaceRoughness, metalF0);","#elif defined(PRISMLAYERED)","    Environment_Layered(N, V, clamp(NdotV, 0.0, 1.0), N2, clamp(N2dotV, 0.0, 1.0), surfaceAlbedo, surfaceRoughness,","                layeredF0, layeredDiffuse, layeredRoughness, layeredAnisotropy,","                layeredRotation, bottom_f0, layeredFraction);","#elif defined(PRISMTRANSPARENT)","    Environment_Transparent(N, V, clamp(NdotV, 0.0, 1.0), surfaceAlbedo, surfaceRoughness);","#elif defined(PRISMWOOD)","    Environment_Wood(N, V, clamp(NdotV, 0.0, 1.0), surfaceAlbedo, surfaceRoughness, woodDiffuse);","#endif","#endif","float opacity = 1.0;","float surface_cutout = 1.0;",g("surface_cutout","surface_cutout",!0,!1),"#if defined( USE_SURFACE_CUTOUT_MAP )","if(surface_cutout < 0.01) discard;","#endif","#if defined(PRISMTRANSPARENT)","if (transparent_ior == 1.0 && transparent_color == vec3(1.0,1.0,1.0))","opacity = 0.0;","else","opacity = max(0.5, mix(1.0, surfaceRoughness, NdotV));","#endif","gl_FragColor = vec4( outRadianceLight + outRadianceEnv, opacity*surface_cutout );","#if TONEMAP_OUTPUT == 1","gl_FragColor.xyz = toneMapCanonOGS_WithGamma_WithColorPerserving(exposureBias * gl_FragColor.xyz);","#elif TONEMAP_OUTPUT == 2","gl_FragColor.xyz = toneMapCanonFilmic_WithGamma(exposureBias * gl_FragColor.xyz);","#endif","#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = smoothstep( fogNear, fogFar, depth );","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif",j.ThemingFragmentShaderChunk,j.FinalOutputShaderChunk,"}"].join("\n")
};THREE.ShaderLib.prism=n;var o=function(){var a=l.createShaderMaterial(n);return a.defaultAttributeValues.uvw=[0,0,0],a.mapList={},a.isPrismMaterial=!0,a},p=function(a){var b=o();switch(b.name=a.name,b.side=a.side,b.opacity=a.opacity,b.transparent=a.transparent,b.blending=a.blending,b.blendSrc=a.blendSrc,b.blendDst=a.blendDst,b.blendEquation=a.blendEquation,b.blendSrcAlpha=a.blendSrcAlpha,b.blendDstAlpha=a.blendDstAlpha,b.blendEquationAlpha=a.blendEquationAlpha,b.depthTest=a.depthTest,b.depthWrite=a.depthWrite,b.polygonOffset=a.polygonOffset,b.polygonOffsetFactor=a.polygonOffsetFactor,b.polygonOffsetUnits=a.polygonOffsetUnits,b.alphaTest=a.alphaTest,b.overdraw=a.overdraw,b.visible=a.visible,b.mapList=a.mapList,b.prismType=a.prismType,b.surface_albedo=a.surface_albedo,void 0!==a.surface_albedo_map&&(b.surface_albedo_map=a.surface_albedo_map),b.surface_roughness=a.surface_roughness,void 0!==a.surface_roughness_map&&(b.surface_roughness_map=a.surface_roughness_map),b.surface_anisotropy=a.surface_anisotropy,void 0!==a.surface_anisotropy_map&&(b.surface_anisotropy_map=a.surface_anisotropy_map),b.surface_rotation=a.surface_rotation,void 0!==a.surface_rotation_map&&(b.surface_rotation_map=a.surface_rotation_map),void 0!==a.surface_cutout_map&&(b.surface_cutout_map=a.surface_cutout_map),void 0!==a.surface_normal_map&&(b.surface_normal_map=a.surface_normal_map),b.prismType){case"PrismOpaque":b.opaque_albedo=(new THREE.Color).copy(a.opaque_albedo),b.opaque_luminance_modifier=(new THREE.Color).copy(a.opaque_luminance_modifier),b.opaque_f0=a.opaque_f0,b.opaque_luminance=a.opaque_luminance,void 0!==a.opaque_albedo_map&&(b.opaque_albedo_map=a.opaque_albedo_map),void 0!==a.opaque_luminance_modifier_map&&(b.opaque_luminance_modifier_map=a.opaque_luminance_modifier_map),void 0!==a.opaque_f0_map&&(b.opaque_f0_map=a.opaque_f0_map);break;case"PrismMetal":b.metal_f0=(new THREE.Color).copy(a.metal_f0),void 0!==a.metal_f0_map&&(b.metal_f0_map=a.metal_f0_map);break;case"PrismLayered":b.layered_f0=a.layered_f0,b.layered_diffuse=(new THREE.Color).copy(a.layered_diffuse),b.layered_fraction=a.layered_fraction,b.layered_bottom_f0=(new THREE.Color).copy(a.layered_bottom_f0),b.layered_roughness=a.layered_roughness,b.layered_anisotropy=a.layered_anisotropy,b.layered_rotation=a.layered_rotation,void 0!==a.layered_bottom_f0_map&&(b.layered_bottom_f0_map=a.layered_bottom_f0_map),void 0!==a.layered_f0_map&&(b.layered_f0_map=a.layered_f0_map),void 0!==a.layered_diffuse_map&&(b.layered_diffuse_map=a.layered_diffuse_map),void 0!==a.layered_fraction_map&&(b.layered_fraction_map=a.layered_fraction_map),void 0!==a.layered_rotationlayered_roughness_map&&(b.layered_rotationlayered_roughness_map=a.layered_rotationlayered_roughness_map),void 0!==a.layered_anisotropy_map&&(b.layered_anisotropy_map=a.layered_anisotropy_map),void 0!==a.layered_rotation_map&&(b.layered_rotation_map=a.layered_rotation_map),void 0!==a.layered_normal_map&&(b.layered_normal_map=a.layered_normal_map);break;case"PrismTransparent":b.transparent_color=(new THREE.Color).copy(a.transparent_color),b.transparent_distance=a.transparent_distance,b.transparent_ior=a.transparent_ior;break;case"PrismWood":b.wood_fiber_cosine_enable=a.wood_fiber_cosine_enable,b.wood_fiber_cosine_bands=a.wood_fiber_cosine_bands,b.wood_fiber_cosine_weights=(new THREE.Vector4).copy(a.wood_fiber_cosine_weights),b.wood_fiber_cosine_frequencies=(new THREE.Vector4).copy(a.wood_fiber_cosine_frequencies),b.wood_fiber_perlin_enable=a.wood_fiber_perlin_enable,b.wood_fiber_perlin_bands=a.wood_fiber_perlin_bands,b.wood_fiber_perlin_weights=(new THREE.Vector4).copy(a.wood_fiber_perlin_weights),b.wood_fiber_perlin_frequencies=(new THREE.Vector4).copy(a.wood_fiber_perlin_frequencies),b.wood_fiber_perlin_scale_z=a.wood_fiber_perlin_scale_z,b.wood_growth_perlin_enable=a.wood_growth_perlin_enable,b.wood_growth_perlin_bands=a.wood_growth_perlin_bands,b.wood_growth_perlin_weights=(new THREE.Vector4).copy(a.wood_growth_perlin_weights),b.wood_growth_perlin_frequencies=(new THREE.Vector4).copy(a.wood_growth_perlin_frequencies),b.wood_latewood_ratio=a.wood_latewood_ratio,b.wood_earlywood_sharpness=a.wood_earlywood_sharpness,b.wood_latewood_sharpness=a.wood_latewood_sharpness,b.wood_ring_thickness=a.wood_ring_thickness,b.wood_earlycolor_perlin_enable=a.wood_earlycolor_perlin_enable,b.wood_earlycolor_perlin_bands=a.wood_earlycolor_perlin_bands,b.wood_earlycolor_perlin_weights=(new THREE.Vector4).copy(a.wood_earlycolor_perlin_weights),b.wood_earlycolor_perlin_frequencies=(new THREE.Vector4).copy(a.wood_earlycolor_perlin_frequencies),b.wood_early_color=(new THREE.Color).copy(a.wood_early_color),b.wood_use_manual_late_color=a.wood_use_manual_late_color,b.wood_manual_late_color=(new THREE.Color).copy(a.wood_manual_late_color),b.wood_latecolor_perlin_enable=a.wood_latecolor_perlin_enable,b.wood_latecolor_perlin_bands=a.wood_latecolor_perlin_bands,b.wood_latecolor_perlin_weights=(new THREE.Vector4).copy(a.wood_latecolor_perlin_weights),b.wood_latecolor_perlin_frequencies=(new THREE.Vector4).copy(a.wood_latecolor_perlin_frequencies),b.wood_late_color_power=a.wood_late_color_power,b.wood_diffuse_perlin_enable=a.wood_diffuse_perlin_enable,b.wood_diffuse_perlin_bands=a.wood_diffuse_perlin_bands,b.wood_diffuse_perlin_weights=(new THREE.Vector4).copy(a.wood_diffuse_perlin_weights),b.wood_diffuse_perlin_frequencies=(new THREE.Vector4).copy(a.wood_diffuse_perlin_frequencies),b.wood_diffuse_perlin_scale_z=a.wood_diffuse_perlin_scale_z,b.wood_use_pores=a.wood_use_pores,b.wood_pore_type=a.wood_pore_type,b.wood_pore_radius=a.wood_pore_radius,b.wood_pore_cell_dim=a.wood_pore_cell_dim,b.wood_pore_color_power=a.wood_pore_color_power,b.wood_pore_depth=a.wood_pore_depth,b.wood_use_rays=a.wood_use_rays,b.wood_ray_color_power=a.wood_ray_color_power,b.wood_ray_seg_length_z=a.wood_ray_seg_length_z,b.wood_ray_num_slices=a.wood_ray_num_slices,b.wood_ray_ellipse_z2x=a.wood_ray_ellipse_z2x,b.wood_ray_ellipse_radius_x=a.wood_ray_ellipse_radius_x,b.wood_use_latewood_bump=a.wood_use_latewood_bump,b.wood_latewood_bump_depth=a.wood_latewood_bump_depth,b.wood_use_groove_roughness=a.wood_use_groove_roughness,b.wood_groove_roughness=a.wood_groove_roughness,b.wood_diffuse_lobe_weight=a.wood_diffuse_lobe_weight,void 0!==a.permutationMap&&(b.permutationMap=a.permutationMap),void 0!==a.gradientMap&&(b.gradientMap=a.gradientMap),void 0!==a.perm2DMap&&(b.perm2DMap=a.perm2DMap),void 0!==a.permGradMap&&(b.permGradMap=a.permGradMap),void 0!==a.wood_curly_distortion_map&&(b.wood_curly_distortion_map=a.wood_curly_distortion_map,b.wood_curly_distortion_enable=a.wood_curly_distortion_enable,b.wood_curly_distortion_scale=a.wood_curly_distortion_scale);break;default:THREE.warn("Unknown prism type: "+a.prismType)}return b.envExponentMin=a.envExponentMin,b.envExponentMax=a.envExponentMax,b.envExponentCount=a.envExponentCount,b.envMap=a.envMap,b.defines=a.defines,b};a.exports={PrismShader:n,GetPrismMapUniforms:d,GetPrismMapSampleChunk:g,GetPrismMapUniformChunk:h,AverageOfFloat3:m,createPrismMaterial:o,clonePrismMaterial:p}},function(a,b,c){function d(a){var b=new THREE.PlaneBufferGeometry(1,1);if(b.attributes.index.array.reverse)b.attributes.index.array.reverse();else for(var c,d=b.attributes.index.array,e=Math.floor(d.length/2),f=0,g=d.length;f<e;++f)c=d[f],d[f]=d[g-1-f],d[g-1-f]=c;var h=new THREE.Mesh(b,a);return h}var e=c(2),f=c(13),g=c(12),h={uniforms:{cutplanes:{type:"v4v",value:[]}},vertexShader:["#ifdef USE_LOGDEPTHBUF","#ifdef USE_LOGDEPTHBUF_EXT","varying float vFragDepth;","#endif","uniform float logDepthBufFC;","#endif","#if NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );;","#if NUM_CUTPLANES > 0","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","#endif","#ifdef USE_LOGDEPTHBUF","gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;","#ifdef USE_LOGDEPTHBUF_EXT","vFragDepth = 1.0 + gl_Position.w;","#else","gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;","#endif","#endif","}"].join("\n"),fragmentShader:["#ifdef USE_LOGDEPTHBUF","uniform float logDepthBufFC;","#ifdef USE_LOGDEPTHBUF_EXT","#extension GL_EXT_frag_depth : enable","varying float vFragDepth;","#endif","#endif",e.PackDepthShaderChunk,"#if NUM_CUTPLANES > 0","varying vec3 vWorldPosition;","#endif",e.CutPlanesShaderChunk,"void main() {","#if NUM_CUTPLANES > 0","checkCutPlanes(vWorldPosition);","#endif","#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)","gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;","#endif","#ifdef USE_LOGDEPTHBUF_EXT","float depth = gl_FragDepthEXT / gl_FragCoord.w;","#else","float depth = gl_FragCoord.z / gl_FragCoord.w;","#endif","depth = 1.0 - depth;","gl_FragColor = packDepth(depth);","}"].join("\n")},i={uniforms:{tDepth:{type:"t",value:null},worldSize:{type:"v3",value:new THREE.Vector3(1,1,1)}},defines:{},vertexShader:["varying vec2 vUv;","void main() {","vUv = vec2(uv.x, uv.y);","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["#define NUM_SAMPLES 29.0","#define NUM_SPIRAL_TURNS 7.0","uniform sampler2D tDepth;","uniform vec3 worldSize;","varying vec2 vUv;","#ifdef PRESET_2","#define SAMPLE_RADIUS 0.3","#define AO_GAMMA 1.0","#define AO_INTENSITY 1.0","#else","#define SAMPLE_RADIUS 0.2","#define AO_GAMMA 3.0","#define AO_INTENSITY 0.8","#endif",e.PackDepthShaderChunk,"#define PI 3.14159265358979","float rand(vec2 co) {","return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);","}","float getRandomAngle(vec2 pos) {","return rand(pos) * (2.0 * PI);","}","vec2 tapLocation(float sampleNumber, float spinAngle, out float ssR){","float alpha = float(sampleNumber + 0.5) * (1.0 / NUM_SAMPLES);","float angle = alpha * (NUM_SPIRAL_TURNS * PI * 2.0) + spinAngle;","ssR = alpha;","return vec2(cos(angle), sin(angle));","}","vec2 sampleAO(vec2 unitDirection, float radius) {","vec2 sampleOffset = unitDirection * radius;","float idepth = unpackDepth(texture2D(tDepth, vUv + sampleOffset));","float depth = 1.0 - idepth;","if (depth < 1e-6) {","if (radius == 0.0)","return vec2(1.0, 1.0);","else","return vec2(0.0, 1.0);","}","vec3 dir = vec3(sampleOffset.x, depth, sampleOffset.y) * worldSize;","float distance2 = dot(dir,dir);","float idistance = 1.0 / sqrt(distance2);","vec3 ndir = dir * idistance;","#ifdef PRESET_2","float importance = ndir.y * idistance;","#else","float importance = ndir.y / distance2;","#endif","vec2 ret;","ret.x = (idepth == 0.0) ? 0.0 : importance;","ret.y = importance;","return ret;","}","void main() {","vec2 sum = vec2(0.0);","float angle = getRandomAngle(vUv);","for (float i = 0.0; i<NUM_SAMPLES; i+= 1.0) {","float ssR;","vec2 uv = tapLocation(i, angle, ssR);","sum += sampleAO(uv, ssR * SAMPLE_RADIUS);","}","float ao = sum.x / sum.y;","gl_FragColor = packDepth(AO_INTENSITY * clamp(pow(ao, AO_GAMMA), 0.0, 0.9999));","}"].join("\n")},j={uniforms:{tDepth:{type:"t",value:null}},defines:{},vertexShader:["varying vec2 vUv;","void main() {","vUv = vec2(uv.x, uv.y);","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform sampler2D tDepth;","varying vec2 vUv;","#ifdef HORIZONTAL","#define GET_UV(X) vec2(vUv.x + KERNEL_SCALE*(X), vUv.y)","#else","#define GET_UV(Y) vec2(vUv.x, vUv.y + KERNEL_SCALE*(Y))","#endif",e.PackDepthShaderChunk,"#define PI 3.14159265358979","#define SIGMA ((2.0 * KERNEL_RADIUS+1.0) / 6.0)","#define SIGMASQ2 (2.0 * SIGMA * SIGMA)","#ifdef BOX","#define KERNEL_VAL(X) 1.0","#else","#define KERNEL_VAL(X) ( (1.0 / sqrt(PI * SIGMASQ2)) * exp(-(X)*(X)/SIGMASQ2) )","#endif","void main() {","float depthVal = 0.0;","float sum = 0.0;","for (float x=-KERNEL_RADIUS; x<=KERNEL_RADIUS; x+=1.0) {","depthVal += unpackDepth(texture2D(tDepth, GET_UV(x))) * KERNEL_VAL(x);","sum += KERNEL_VAL(x);","}","gl_FragColor = packDepth(depthVal/sum);","}"].join("\n")},k={uniforms:{tDepth:{type:"t",value:null},uShadowColor:{type:"v4",value:new THREE.Vector4(0,0,0,1)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = vec2(uv.x, uv.y);","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["uniform sampler2D tDepth;","uniform vec4 uShadowColor;","varying vec2 vUv;",e.PackDepthShaderChunk,"void main() {","float depthVal = unpackDepth(texture2D(tDepth, vUv));","gl_FragColor = vec4(uShadowColor.rgb, uShadowColor.a * depthVal);","}"].join("\n")},l=function(){var a,b,c;return function(d,e,f,g,h){a||(a=new THREE.Matrix4),b||(b=new THREE.Vector3),c||(c=new THREE.Vector3),b.subVectors(e,g),a.lookAt(b,e,h),c.copy(g).multiplyScalar(-.5*f.y).add(e),d.position.copy(c),d.rotation.setFromRotationMatrix(a),d.scale.set(f.z,f.x,f.y)}}(),m=function(a,b){var c,e,m,n,o,p,q,r,s,t,u,v=a,w=!1,x=!1,y={texSize:x?128:64,pixScale:1,blurRadius:x?5:7,debug:!1};if(this.setTransform=function(a,b,d,e){c.left=-b.z/2,c.right=b.z/2,c.top=b.x/2,c.bottom=-b.x/2,c.near=1,c.far=b.y+c.near,c.updateProjectionMatrix(),l(m,a,b,d,e),c.position.addVectors(a,d.clone().multiplyScalar(-b.y/2-c.near)),e&&c.up.set(e.x,e.y,e.z),c.lookAt(a),y.debug&&(u.position.set(a.x,a.y,a.z),u.rotation.set(c.rotation.x,c.rotation.y,c.rotation.z),u.scale.set(b.z,b.x,b.y)),t.uniforms.worldSize.value.copy(b)},this.renderIntoShadow=function(a){if(!a.overrideMaterial||!a.overrideMaterial.transparent){var b=a.overrideMaterial;a.overrideMaterial=p,v.render(a,c,n,!1),a.overrideMaterial=b}},this.prepareGroundShadow=function(){var a,b=100,c=10,d=0,e=0,f=0;return function(g){var h=g.modelQueue();if(!this.enabled||h.isEmpty())return!1;if(a!=h.getGeomScenes()&&(this.needClear=!0),this.needClear&&(this.clear(),this.needClear=!1,a=h.getGeomScenes(),d=a.length,e=0,f=Math.max(Math.ceil(d/b),c)),this.isValid())return!0;for(var i=0;e<d&&(!g.progressiveRender||i<f);){var j=a[e];j&&(j.forceVisible=!0,this.renderIntoShadow(j),j.forceVisible=!1,i++),e++}return e>=d&&(this.postprocess(),g.invalidate(!0,!1,!0),!0)}}(),this.renderShadow=function(a,b){w&&(b?v.render(e,a,b,!1):v.render(e,a))},this.postprocess=function(){x?(t.render(v,o,n),s.render(v,n,o),r.render(v,o,n)):(s.render(v,o,n),r.render(v,n,o)),w=!0},this.clear=function(){var a=v.getClearColor().getHex(),b=v.getClearAlpha();v.setClearColor(0,0),v.clearTarget(n,!0,!0,!1),v.setClearColor(a,b),w=!1},this.setColor=function(a){q.uniforms.uShadowColor.value.x=a.r,q.uniforms.uShadowColor.value.y=a.g,q.uniforms.uShadowColor.value.z=a.b},this.getColor=function(){return new THREE.Color(q.uniforms.uShadowColor.value.x,q.uniforms.uShadowColor.value.y,q.uniforms.uShadowColor.value.z)},this.setAlpha=function(a){q.uniforms.uShadowColor.value.w=a},this.getAlpha=function(){return q.uniforms.uShadowColor.value.w},this.isValid=function(){return w},this.getDepthMaterial=function(){return p},b)for(var z in y)y[z]=b[z]||y[z];e=new THREE.Scene,c=new THREE.OrthographicCamera,n=new THREE.WebGLRenderTarget(y.texSize,y.texSize,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1}),n.generateMipmaps=!1,o=new THREE.WebGLRenderTarget(y.texSize,y.texSize,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1}),o.generateMipmaps=!1,p=f.createShaderMaterial(h),p.side=THREE.DoubleSide,p.blending=THREE.NoBlending,r=new g(j,"tDepth"),s=new g(j,"tDepth"),t=new g(i,"tDepth"),r.material.defines.KERNEL_SCALE=s.material.defines.KERNEL_SCALE=(y.pixScale/y.texSize).toFixed(4),r.material.defines.KERNEL_RADIUS=s.material.defines.KERNEL_RADIUS=y.blurRadius.toFixed(2),t.material.blending=r.material.blending=s.material.blending=THREE.NoBlending,t.material.depthWrite=r.material.depthWrite=s.material.depthWrite=!1,t.material.depthTest=r.material.depthTest=s.material.depthTest=!1,r.material.defines.HORIZONTAL=1,q=f.createShaderMaterial(k),q.uniforms.tDepth.value=x?o:n,q.depthWrite=!1,q.transparent=!0,m=d(q),e.add(m),y.debug&&(u=new THREE.Mesh(new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:65280,wireframe:!0})),e.add(u)),this.setTransform(new THREE.Vector3(0,0,0),new THREE.Vector3(1,1,1),new THREE.Vector3(0,1,0),THREE.Object3D.DefaultUp)};m.prototype.constructor=m,a.exports={GroundShadow:m,createGroundShape:d,setGroundShapeTransform:l}},function(a,b,c){function d(a){var b,c=a.getFragmentList(),d=a,i=c.getCount(),j=0,k=[new Int32Array(i)];for(b=0;b<i;b++)k[0][b]=b;var l=h;a.is2d()&&(l/=6),e.isMobileDevice()&&(l/=3,a.is2d()&&(l/=2)),l|=0;var m=l>0?l:h,n=0|(i+m-1)/m,o=c.onDemandLoadingEnabled(),p=o?g:f,q=new Array(n);for(b=0;b<n;b++){var r=b*m,s=q[b]=new p(c,k,r,m),t=r+m;t>i&&(t=i),s.lastItem=t,o&&s.calculateBounds()}this.addFragment=function(a){if(k[0].length<=a){var b=2*k[0].length;b<=a&&(b=a+1);var d=new Int32Array(b);d.set(k[0]),k[0]=d,this.visibleBoundsDirty=!0}k[0][a]=a;var e=0|a/m;if(q){var g=q[e];g||(q[e]=g=new f(c,k,e*m,m)),g&&g.onFragmentAdded(a)}},this.reset=function(){j=0},this.getSceneCount=function(){if(q.length<=0)return 0;var a=q[q.length-1];return q.length-(d.is2d()&&!d.isLoadDone()&&a&&a.numAdded<a.count)},this.getGeomScenes=function(){return q},this.done=function(){return j===q.length&&!(d.is2d()&&!d.isLoadDone())},this.nextBatch=function(){if(j>=this.getSceneCount())return null;var a=q[j++];return a.renderImportance=0,a},this.getVisibleBounds=function(a,b){for(var c=this.getSceneCount(),d=0;d<c;d++)q[d].calculateBounds(),a.union(q[d].boundingBox),b.union(q[d].boundingBox),b.union(q[d].boundingBoxHidden)},this.rayCast=function(a,b,c){for(var d=this.getSceneCount(),e=0;e<d;e++)q[e].raycast(a,b,c)}}var e=c(21),f=c(22),g=c(32),h=333;a.exports=d},function(a,b,c){function d(a,b,c,d){f.call(this,a,b,c,d),this.visibleStats=-1}var e=c(21),f=c(22);d.prototype=Object.create(f.prototype),d.prototype.constructor=d,d.prototype.resetVisStatus=function(){this.visibleStats=-1},d.prototype.forEach=function(a,b,c){for(var d=this.getIndices(),f=this.frags,g=!this.sortByShaderDone,h=f.pageOutGeometryEnabled(),i=f.onDemandLoadingEnabled(),j=this.start,k=this.lastItem;j<k;j++){var l,m=d?d[j]:j;if(i){if(f.isFlagSet(m,e.MESH_TRAVERSED)&&b==e.MESH_RENDERFLAG){l=f.getVizmesh(m),!g||l&&l.material&&l.material.program||(g=!1);continue}if(l=f.getVizmesh(m),!c&&b&&f.isFlagSet(m,b))if(l.geometry){if(b==e.MESH_RENDERFLAG&&f.setFlagFragment(m,e.MESH_TRAVERSED,!0),h&&m>f.options.fragsPersistentCont){var n=f.geomids[m],o=!0,p=f.geomidsmap[n];null!=p&&(p.t++,o=p.n==p.t),o&&f.traversedGeom.push(n)}}else l.geometry=f.requireGeometry(m)}else l=f.getVizmesh(m);!g||l&&l.material&&l.material.program||(g=!1),!(c||l&&l.geometry)||b&&!f.isFlagSet(m,b)||a(l,m)}g&&this.sortByShader()},d.prototype.applyVisibility=function(){function a(a,b,c,d){var e=!1;if(k||(k=new THREE.Box3),c.getWorldBounds(d,k),a&&!b.intersectsBox(k))e=!0;else if(c.options.pixelCullingEnable){var f=b.projectedArea(k);f*=b.areaConv,f<c.options.pixelCullingThreshold&&(e=!0)}return e}function b(b,k){if(!b&&c.useThreeMesh)return void(h&&h(k));var l=a(i,f,c,k);if(l){if(b?b.visible=!1:THREE.warn("Unexpected null mesh"),d[k]=d[k]&~e.MESH_RENDERFLAG,k>e.FRAGS_PERSISTENT_COUNT){var m=c.geomids[k];if(c.geoms.getGeometry(m)){var n=c.geomidsmap[m];n||c.culledGeom.push(m)}}}else{var o=this.evalVisbility(g,d,k);b&&(b.visible=!!o),j=j&&!o}}var c,d,f,g,h,i,j,k;return function(a,k,l){j=!0,f=k,g=a,h=l,c=this.frags;var m=g===e.RENDER_HIDDEN?this.boundingBoxHidden:this.boundingBox,n=f.intersectsBox(m);if(n===e.OUTSIDE)return j;if(c.options.pixelCullingEnable){var o=this.renderImportance;if(0==o&&(o=f.projectedArea(m)),o*=f.areaConv,o<c.options.pixelCullingThreshold)return j}return d=this.frags.vizflags,i=n!==e.CONTAINS,this.forEach(b.bind(this),null,h),j}}(),a.exports=d},function(a,b,c){function d(a,b,c){for(var d=0,e=0;e<b.length;e++){var f=b[e],g=a.getGeometry(f);if(void 0!==g.byteSize){if(d+=g.byteSize,d>c)return e}else THREE.warn("Error in consolidation: Geometry must contain byteSize.")}return b.length}function e(a,b,c,d){for(var e=new THREE.Box3,f=new l,g=0;g<d;g++){var h=c[g];a.getWorldBounds(h,e);var i=a.getVizmesh(h);f.addGeom(i.geometry,i.material,i.matrixWorld,e,i.fragId,i.dbId)}var j=a.model.getData().basePath;return f.finish(b,j)}function f(a,b,c){var d=a.getVizmesh(b);c.addSingleMesh(d.geometry,d.material,b,d.matrixWorld,d.dbId)}function g(a,b,c,d,e){if(!(d>=c.length)){for(var f=d,g=-1,h=-1,i=d;i<c.length;i++){var j=c[i],k=a.getGeometryId(j),l=a.getMaterialId(j);k==g&&l==h||(i!=d&&o(a,b,c,f,i,e),f=i,g=k,h=l)}o(a,b,c,f,c.length,e)}}function h(a){for(var b=a.getCount(),c=[],d=0;d<b;d++){var e=a.getGeometryId(d),f=0|c[e];c[e]=f+1}return c}function i(a,b){function c(c,d){var e=a.getGeometry(c),f=a.getGeometry(d),g=b[e.id],h=b[f.id],i=g*e.byteSize,j=h*f.byteSize;if(i!=j)return i-j;if(e.id!=f.id)return e.id-f.id;var k=a.getMaterialId(c),l=a.getMaterialId(d);return k-l}for(var d=a.getCount(),e=new Int32Array(d),f=0;f<d;f++)e[f]=f;return e.sort(c),e}function j(a,b,c,d){for(var e=a.geoms,f=[],g=0,h=0,i=0;i<b.meshes.length;i++){var j=b.meshes[i],k=j.geometry;k.byteSize||(k.byteSize=(k.vb.byteLength||0)+(k.ib.byteLength||0));var l=!!j.fragId;e.chooseMemoryType(k,k.numInstances,g,h),k.streamingDraw||(h+=k.byteSize,g+=1,l||(k.discardAfterUpload=!0)),l&&(f[k.id]=!0)}for(var i=1;i<e.geoms.length;i++){var k=e.geoms[i];if(k&&!f[i]){var m=c[i];e.chooseMemoryType(k,m,g,h),k.streamingDraw&&d.deallocateGeometry(k),k.streamingDraw||(h+=k.byteSize,g+=1)}}}function k(a,b,c,k){var l=k.supportsInstancedArrays(),c=c||100<<20,m=h(a),n=i(a,m),o=d(a,n,c),p=e(a,b,n,o);if(l)g(a,b,n,o,p);else for(var q=o;q<n.length;q++){var r=n[q];f(a,r,p)}return j(a,p,m,k),p}var l=(c(34).FragmentList,c(24).ConsolidationBuilder),m=(c(24).Consolidation,c(23)),n={INSTANCED:0,VERTEX_IDS:1},o=function(){var a=null,b=[];return function(c,d,e,g,h,i){a||(a=new THREE.Matrix4);var j=e[g],k=c.getGeometry(j),l=c.getMaterial(j),o=h-g;if(1==o)return void f(c,j,i);b.length=0;for(var p=new m(k,o),q=g;q<h;q++){var r=e[q];c.getOriginalWorldMatrix(r,a);var s=c.fragments.fragId2dbId[r],t=p.addInstance(a,s);t||b.push(r)}var u=p.finish();if(u){var v=c.model.getData().basePath,w=d.getMaterialVariant(l,n.INSTANCED,v);i.addContainerMesh(u,w,e,g,o)}for(var q=0;q<b.length;q++){var r=b[q];f(c,r,i)}}}();a.exports=k},function(a,b,c){function d(a,b){this.model=a,this.fragments=a.getData().fragments,this.geoms=a.getGeometryList(),this.requestGeometryCallback=b?b.requestGeometryCallback:null,this.options=b||{},this.isFixedSize=this.fragments.length>0,this.isFixedSize?(this.boxes=this.fragments.boxes,this.transforms=this.fragments.transforms,this.useThreeMesh=!i.memoryOptimizedLoading):(this.boxes=null,this.transforms=null,this.useThreeMesh=!0);var c=this.fragments.length;c<=0&&(c=1),this.vizflags=new Uint8Array(c),this.useThreeMesh&&(this.vizmeshes=new Array(c)),this.geomids=new Int32Array(c),this.materialids=new Int32Array(c),this.materialmap={},this.db2ThemingColor=[],this.originalColors=[],this.themingOrGhostingNeedsUpdate=[],this.dbIdIsHidden=[],this.dbIdIsGhosted=[],this.originalLayerVp=[],this.reachLimit=!1,this.traversedGeom=[],this.culledGeom=[],this.geomidsmap={},this.animxforms=null;for(var d=0;d<c;d++)this.vizflags[d]=1,this.geomids[d]=-1;this.allVisible=!0,this.allVisibleDirty=!1,this.nextAvailableFragID=c}function e(a){var b=a.r;return a.r=a.b,a.b=b,a}function f(a,b){var c=a.originalColors[b],d=a.originalLayerVp[b];if(a.themingOrGhostingNeedsUpdate[b]){var e=a.vizmeshes[b],f=e?e.geometry:null,g=f?f.attributes:null,h=g?g.color4b:null,i=g?g.dbId4b:null,k=g?g.layerVp4b:null;if(h&&i&&f.vb&&k){for(var l=new Uint32Array(f.vb.buffer),m=f.vbstride,n=l.length/f.vbstride,o=!1,p=!1,q=0,r=h.itemOffset,s=i.itemOffset,t=k.itemOffset,u=0;u<n;u++){var v=l[u*m+s],w=c?c[u]:l[u*m+r],x=d?d[u]:l[u*m+t];v=v<<8>>8;var y=v==-1&&(x&parseInt("FFFF",16))==q,z=a.db2ThemingColor[v],A=a.dbIdIsHidden[v];if(z||A){if(!c){c=new Uint32Array(n);for(var B=0;B<n;B++)c[B]=l[B*m+r];a.originalColors[b]=c}w=A?0:j(w,z),o=!0}else c&&(w=c[u]);l[u*m+r]=w;var C=a.dbIdIsGhosted[v]&&!y;if(C){if(!d){d=new Uint32Array(n);for(var B=0;B<n;B++)d[B]=l[B*m+t];a.originalLayerVp[b]=d}var D=parseInt("0xFFFF",16);x|=D,p=!0}else d&&(x=d[u]);l[u*m+t]=x}o||(a.originalColors[b]=null),p||(a.originalLayerVp[b]=null),f.vbNeedsUpdate=!0,a.themingOrGhostingNeedsUpdate[b]=!1}}}function g(a,b){if(a.useThreeMesh){var c=a.fragments.dbId2fragId[b];if(Array.isArray(c))for(var d=0;d<c.length;d++)a.themingOrGhostingNeedsUpdate[c[d]]=!0;else"number"==typeof c&&(a.themingOrGhostingNeedsUpdate[c]=!0)}}function h(a,b){this.frags=a,this.fragId=b,this.scale=null,this.quaternion=null,this.position=null}var i=c(21);d.prototype.getNextAvailableFragmentId=function(){return this.nextAvailableFragID++},d.prototype.fragmentsHaveBeenAdded=function(){return this.vizflags.length>this.fragments.length},d.prototype.getSvfMaterialId=function(a){var b=this.getMaterial(a);return b?b.svfMatId:void 0},d.prototype.onDemandLoadingEnabled=function(){return!(!this.options.onDemandLoading||!this.requestGeometryCallback)&&(!!this.options.forceOnDemandLoading||this.getCount()>this.options.fragsPersistentMaxCount)},d.prototype.pageOutGeometryEnabled=function(){return this.options.pageOutGeometryEnabled&&this.onDemandLoadingEnabled()},d.prototype.requireGeometry=function(a){var b=null,c=this.geomids[a];if(c>=0&&(b=this.geoms.getGeometry(c)),null==b&&this.onDemandLoadingEnabled()&&!this.reachLimit){var d=this.fragments.packIds[a];this.requestGeometryCallback(d)}return b},d.prototype.setMesh=function(a,b,c){if(this.vizmeshes){var d=this.vizmeshes[a];d&&d.parent&&d.parent.remove(d)}if(this.vizflags.length<=a){this.isFixedSize&&(THREE.warn("Attempting to resize a fragments list that was initialized with fixed data. This will have a performance impact."),this.isFixedSize=!1);var e=Math.ceil(1.5*this.vizflags.length);this.useThreeMesh&&e<this.vizmeshes.length&&(e=this.vizmeshes.length);var f=new Uint8Array(e);if(f.set(this.vizflags),this.vizflags=f,this.transforms){var g=new Float32Array(12*e);g.set(this.transforms),this.transforms=g}if(this.boxes){var h=new Float32Array(6*e);h.set(this.boxes),this.boxes=h}if(this.geomids){var j=new Int32Array(e);j.set(this.geomids),this.geomids=j}if(this.materialids){var k=new Int32Array(e);k.set(this.materialids),this.materialids=k}}if(this.useThreeMesh){var l=new THREE.Mesh(b.geometry,b.material);b.matrix&&(l.matrix&&l.matrix.copy(b.matrix),l.matrixWorld.copy(b.matrix)),l.is2d=b.is2d,l.isLine=b.isLine,l.matrixAutoUpdate=!1,l.frustumCulled=!1,l.fragId=a,l.dbId=0|this.fragments.fragId2dbId[a],l.modelId=this.model.getModelId(),this.vizmeshes[a]=l}else this.geomids[a]=b.geometry.svfid,this.materialids[a]=b.material.id,this.materialmap[b.material.id]||(this.materialmap[b.material.id]=b.material);if(this.isFixedSize?this.vizflags[a]|=b.isLine?i.MESH_ISLINE:0:this.vizflags[a]=1|(b.isLine?i.MESH_ISLINE:0),c){var m=b.matrix,n=12*a,o=m.elements,p=this.transforms;p[n]=o[0],p[n+1]=o[1],p[n+2]=o[2],p[n+3]=o[4],p[n+4]=o[5],p[n+5]=o[6],p[n+6]=o[8],p[n+7]=o[9],p[n+8]=o[10],p[n+9]=o[12],p[n+10]=o[13],p[n+11]=o[14];var q=new THREE.Box3;b.geometry&&b.geometry.boundingBox?q.copy(b.geometry.boundingBox):this.geoms.getModelBox(this.geomids[a],q),q.applyMatrix4(m);var r=6*a,s=this.boxes;s[r]=q.min.x,s[r+1]=q.min.y,s[r+2]=q.min.z,s[r+3]=q.max.x,s[r+4]=q.max.y,s[r+5]=q.max.z}},d.prototype.isFlagSet=function(a,b){return!!(this.vizflags[a]&b)},d.prototype.setFlagFragment=function(a,b,c){var d=this.vizflags[a];return!!(d&b)!=c&&(c?this.vizflags[a]=d|b:this.vizflags[a]=d&~b,!0)},d.prototype.setFlagGlobal=function(a,b){var c=this.vizflags,d=0,e=c.length;if(b)for(;d<e;d++)c[d]=c[d]|a;else for(var f=~a;d<e;d++)c[d]=c[d]&f},d.prototype.hideLines=function(a){var b=i.MESH_HIDE,c=this.vizflags,d=0,e=c.length;if(a)for(;d<e;d++)c[d]&i.MESH_ISLINE&&(c[d]=c[d]|b);else for(var f=~b;d<e;d++)c[d]&i.MESH_ISLINE&&(c[d]=c[d]&f);this.allVisibleDirty=!0},d.prototype.isFragVisible=function(a){return 1==(7&this.vizflags[a])},d.prototype.isFragOff=function(a){return!!(this.vizflags[a]&i.MESH_HIDE)},d.prototype.isLine=function(a){return!!(this.vizflags[a]&i.MESH_ISLINE)},d.prototype.areAllVisible=function(){if(this.allVisibleDirty){for(var a=this.vizflags,b=!0,c=0,d=a.length;c<d;c++)if(0===(1&a[c])){b=!1;break}this.allVisible=b,this.allVisibleDirty=!1}return this.allVisible};var j=function(){var a=null,b=null,c=parseInt("00FFFFFF",16),d=parseInt("FF000000",16);return function(f,g){return a||(a=new THREE.Color,b=new THREE.Color),a.set(f&c),e(a),g&&(b.setRGB(g.x,g.y,g.z),a.lerp(b,g.w)),e(a).getHex()|f&d}}();d.prototype.getVizmesh=function(){function a(){b||(b=new THREE.Mesh(void 0,void 0,!0),b.isTemp=!0,b.dbId=0,b.modelId=0,b.fragId=-1,b.hide=!1,b.isLine=!1)}var b;return function(c){return this.useThreeMesh?(f(this,c),this.vizmeshes[c]):(a(),b.geometry=this.getGeometry(c),b.material=this.getMaterial(c),b.dbId=this.getDbIds(c),b.modelId=this.model.getModelId(),b.fragId=c,b.visible=!0,b.isLine=this.isLine(c),b.hide=this.isFragOff(c),b.themingColor=this.db2ThemingColor[b.dbId],this.getWorldMatrix(c,b.matrixWorld),b)}}(),d.prototype.getMaterialId=function(a){return this.useThreeMesh?this.vizmeshes[a].material.id:this.materialids[a]},d.prototype.getMaterial=function(a){return this.useThreeMesh?this.vizmeshes[a].material:this.materialmap[this.materialids[a]]},d.prototype.getGeometry=function(a){return this.useThreeMesh?this.vizmeshes[a].geometry:this.geoms.getGeometry(this.geomids[a])},d.prototype.getGeometryId=function(a){return this.useThreeMesh?a:this.geomids[a]},d.prototype.setMaterial=function(a,b){this.useThreeMesh?this.vizmeshes[a].material=b:(this.materialids[a]=b.id,this.materialmap[b.id]=b)},d.prototype.getCount=function(){return this.vizflags.length},d.prototype.getDbIds=function(a){return this.fragments.fragId2dbId[a]},d.prototype.dispose=function(a){if(this.useThreeMesh)for(var b={type:"dispose"},c={type:"removed"},d=0;d<this.vizmeshes.length;d++){var e=this.vizmeshes[d];e&&(e.dispatchEvent(c),e.geometry.dispatchEvent(b))}else this.geoms.dispose(a)},d.prototype.setVisibility=function(a,b){this.setFlagFragment(a,i.MESH_VISIBLE,b),this.allVisibleDirty=!0},d.prototype.setFragOff=function(a,b){this.setFlagFragment(a,i.MESH_HIDE,b),this.allVisibleDirty=!0},d.prototype.setAllVisibility=function(a){if(this.useThreeMesh){var b=this.fragments;if(b&&b.dbId2fragId)for(var c in b.dbId2fragId)this.setObject2DGhosted(c,!a)}else this.setFlagGlobal(i.MESH_VISIBLE,a),this.allVisible=a,this.allVisibleDirty=!1},d.prototype.updateAnimTransform=function(a,b,c,d){var e,f=this.animxforms;if(!f){var g=this.getCount();f=this.animxforms=new Float32Array(10*g);for(var h=0;h<g;h++)e=10*h,f[e]=1,f[e+1]=1,f[e+2]=1,f[e+3]=0,f[e+4]=0,f[e+5]=0,f[e+6]=1,f[e+7]=0,f[e+8]=0,f[e+9]=0}e=10*a;var j=!1;b&&(f[e]=b.x,f[e+1]=b.y,f[e+2]=b.z,j=!0),c&&(f[e+3]=c.x,f[e+4]=c.y,f[e+5]=c.z,f[e+6]=c.w,j=!0),d&&(f[e+7]=d.x,f[e+8]=d.y,f[e+9]=d.z,j=!0),this.setFlagFragment(a,i.MESH_MOVED,j),j||(f[e]=1,f[e+1]=1,f[e+2]=1,f[e+3]=0,f[e+4]=0,f[e+5]=0,f[e+6]=1,f[e+7]=0,f[e+8]=0,f[e+9]=0)},d.prototype.getAnimTransform=function(a,b,c,d){if(!this.animxforms)return!1;if(!this.isFlagSet(a,i.MESH_MOVED))return!1;var e=10*a,f=this.animxforms;return b&&(b.x=f[e],b.y=f[e+1],b.z=f[e+2]),c&&(c.x=f[e+3],c.y=f[e+4],c.z=f[e+5],c.w=f[e+6]),d&&(d.x=f[e+7],d.y=f[e+8],d.z=f[e+9]),!0},d.prototype.getOriginalWorldMatrix=function(a,b){var c=12*a,d=b.elements,e=this.transforms;if(e)d[0]=e[c],d[1]=e[c+1],d[2]=e[c+2],d[3]=0,d[4]=e[c+3],d[5]=e[c+4],d[6]=e[c+5],d[7]=0,d[8]=e[c+6],d[9]=e[c+7],d[10]=e[c+8],d[11]=0,d[12]=e[c+9],d[13]=e[c+10],d[14]=e[c+11],d[15]=1;else if(this.useThreeMesh){var f=this.getVizmesh(a);f?b.copy(f.matrixWorld):b.identity()}else b.identity()},d.prototype.getWorldMatrix=function(){function a(){b=new THREE.Matrix4,c=new THREE.Vector3,d=new THREE.Quaternion,e=new THREE.Vector3}var b,c,d,e;return function(f,g){b||a(),this.getOriginalWorldMatrix(f,g),this.isFlagSet(f,i.MESH_MOVED)&&(this.getAnimTransform(f,e,d,c),
b.compose(c,d,e),g.multiplyMatrices(b,g))}}(),d.prototype.getWorldBounds=function(){function a(){b=new THREE.Matrix4}var b;return function(c,d){if(b||a(),this.boxes&&!this.isFlagSet(c,i.MESH_MOVED)){var e=this.boxes,f=6*c;return d.min.x=e[f],d.min.y=e[f+1],d.min.z=e[f+2],d.max.x=e[f+3],d.max.y=e[f+4],void(d.max.z=e[f+5])}if(this.useThreeMesh){var g=this.getVizmesh(c);g&&g.geometry&&d.copy(g.geometry.boundingBox)}else this.geoms.getModelBox(this.geomids[c],d);d.empty()||(this.getWorldMatrix(c,b),d.applyMatrix4(b))}}(),d.prototype.setThemingColor=function(a,b){this.db2ThemingColor[a]=b,g(this,a)},d.prototype.clearThemingColors=function(){if(this.useThreeMesh)for(var a=1,b=this.fragments.dbId2fragId.length;a<b;a++)g(this,a);this.db2ThemingColor.length=0},d.prototype.setObject2DGhosted=function(a,b){this.dbIdIsGhosted[a]=b,g(this,a)},d.prototype.setObject2DVisible=function(a,b){this.dbIdIsHidden[a]=!b,g(this,a)},h.prototype.getWorldMatrix=function(a){this.frags.getWorldMatrix(this.fragId,a)},h.prototype.getOriginalWorldMatrix=function(a){this.frags.getOriginalWorldMatrix(this.fragId,a)},h.prototype.getWorldBounds=function(a){return this.frags.getWorldBounds(this.fragId,a)},h.prototype.getAnimTransform=function(){return this.scale||(this.scale=new THREE.Vector3(1,1,1),this.quaternion=new THREE.Quaternion(0,0,0,1),this.position=new THREE.Vector3(0,0,0)),this.frags.getAnimTransform(this.fragId,this.scale,this.quaternion,this.position)},h.prototype.updateAnimTransform=function(){this.scale||(this.scale=new THREE.Vector3(1,1,1),this.quaternion=new THREE.Quaternion(0,0,0,1),this.position=new THREE.Vector3(0,0,0)),this.frags.updateAnimTransform(this.fragId,this.scale,this.quaternion,this.position)},h.prototype.getMaterial=function(){return this.frags.getMaterial(this.fragId)},h.prototype.setMaterial=function(a){return this.frags.setMaterial(this.fragId,a)},a.exports={FragmentPointer:h,FragmentList:d}},function(a,b,c){function d(a,b){function c(){m.length<=n&&(m[n]=new THREE.Scene);var a=m[n++];return a.children.length=0,a}function d(a){return a.numInstances?q.Instanced:a.attributes.id?q.Merged:q.Original}function h(a){if(l)return q.Original;var b=j.fragId2MeshIndex[a],c=j.meshes[b],e=c.geometry;return d(e)}var i=a,j=b,k=[],l=!1,m=[],n=0,o=new THREE.Matrix4,p=new THREE.Box3;this.reset=function(){k.length=null,n=0;var a=i.getCount();l=!1;for(var b=i.db2ThemingColor.length>0,c=0;c<a;c++){var d=i.vizflags[c],f=0==(d&e.MESH_VISIBLE),g=0!=(d&e.MESH_HIDE),h=!1;if(b){var j=i.fragments.fragId2dbId[c];h=!!i.db2ThemingColor[j]}if(f||g||h){l=!0;break}}},this.consolidateNextBatch=function(a,b){if(l)return a;for(var d=c(),e=a.start;e<a.lastItem;e++){var f=a.indices?a.indices[e]:e,g=j.fragId2MeshIndex[f],h=null;if(void 0===g)return THREE.warn("Warning: Missing fragment in consolidation. Consolidation disabled."),a;k[g]||(i.getWorldBounds(f,p),b.intersectsBox(p)&&(h=j.meshes[g],k[g]=!0,d.children.push(h)))}return d.renderImportance=a.renderImportance,d};var q={Merged:1,Instanced:2,Original:3};this.updateRenderProxy=function(a,b){var c=h(b),e=d(a.geometry);if(e!=c){var k=i.getGeometry(b),l=j.fragId2MeshIndex[b],m=j.meshes[l];if(c===q.Original)a.geometry=k,a.material=i.getMaterial(b),i.getWorldMatrix(b,a.matrixWorld);else if(c===q.Instanced){i.getWorldMatrix(b,o);var n=i.fragments.fragId2dbId[b],r=new g(k,1);r.addInstance(o,n),a.geometry=r.finish(),a.material=m.material,a.matrix.identity()}else{i.getWorldMatrix(b,o),i.getWorldBounds(b,p);var n=i.fragments.fragId2dbId[b];a.geometry=f([k],[o],[n],p),a.material=m.material,a.matrix.identity()}}}}var e=c(21),f=c(24).mergeGeometries,g=c(23);a.exports=d},function(a,b,c){function d(){function a(a){var b=n[a],c=h;if(o)for(;c>d&&n[m[c-1]]>b;)m[c]=m[c-1],c--;else for(;c>d&&n[m[c-1]]<b;)m[c]=m[c-1],c--;m[c]=a,h++}function b(a){var c=j.getLeftChild(a);c!==-1&&(b(c),b(c+1)),r.makeEmpty(),c!==-1&&(j.getBoxThree(c,s),r.union(s),j.getBoxThree(c+1,s),r.union(s));var d=j.getPrimCount(a);d&&(r.union(l[a].boundingBox),r.union(l[a].boundingBoxHidden)),j.setBoxThree(a,r)}var c,d,h,i,j=null,k=null,l=null,m=null,n=null,o=1,p=!0,q=!1,r=new THREE.Box3,s=new THREE.Box3,t=!1;this.initialize=function(a,b,d,e){c=a.getFragmentList(),e&&e.hasOwnProperty("prioritize_screen_size")&&(p=e.prioritize_screen_size),k=d,l=new Array(b.nodeCount),j=b,m=new Int32Array(b.nodeCount+1),n=new Float32Array(b.nodeCount);for(var h=c.onDemandLoadingEnabled()?g:f,i=0;i<b.nodeCount;i++){var o=b.getPrimCount(i);o&&(l[i]=new h(c,k,b.getPrimStart(i),o),l[i].lastItem=l[i].start+o,l[i].numAdded=o,8&b.getFlags(i)&&(l[i].sortObjects=!0),b.getBoxThree(i,l[i].boundingBox))}},this.addFragment=function(a,b){},this.reset=function(a){i=a,d=0,h=0,m[h++]=0,q=!1,t=!1},this.nextBatch=function(){for(q||d!==h||(m[h++]=1,q=!0);d!==h;){var b=o||q?m[--h]:m[d++];j.getBoxThree(b,r);var c=i.intersectsBox(r);if(c!==e.OUTSIDE){var f,g,k=j.getLeftChild(b),s=k!==-1;if(s){var u=j.getFlags(b),v=i.viewDir[3&u]<0?1:0,w=u>>2&1,x=u>>3&1,y=o||q?1:0,z=0,A=0;p&&!q?(f=k+w,g=k+1-w,j.getBoxThree(f,r),n[f]=z=i.projectedArea(r),j.getBoxThree(g,r),n[g]=A=i.projectedArea(r),z>0&&a(f),A>0&&a(g)):(v^y^x&&(w=1-w),f=k+w,g=k+1-w,m[h++]=f,n[f]=-1,m[h++]=g,n[g]=-1)}var B=j.getPrimCount(b);if(0!==B){var C=l[b];return C.renderImportance=i.projectedArea(C.boundingBox),C}}q||d!==h||(m[h++]=1,q=!0)}return t=!0,null},this.getVisibleBounds=function(a,c){for(var d=0;d<l.length;d++){var e=l[d];e&&(e.calculateBounds(),a.union(e.boundingBox),c.union(e.boundingBox),c.union(e.boundingBoxHidden))}b(0),b(1)},this.rayCast=function(a,b,c){for(var d=[1,0],e=new THREE.Vector3;d.length;){var f=d.pop();j.getBoxThree(f,r);var g=a.ray.intersectBox(r,e);if(null!==g){var h=j.getLeftChild(f);h!==-1&&(d.push(h),d.push(h+1));var i=j.getPrimCount(f);if(0!==i){var k=l[f];k.raycast(a,b,c)}}}},this.getSceneCount=function(){return l.length},this.getGeomScenes=function(){return l},this.done=function(){return t}}var e=c(21),f=c(22),g=c(32);a.exports=d},function(a,b,c){function d(){var a=!1,b=!1,c=0,d=[],g=[],h=new THREE.Box3,i=new f,j=new THREE.Raycaster,k=0,l=performance,m=e.PAGEOUT_NONE;this.frustum=function(){return i},this.addModel=function(a){d.push(a),g.length=d.length},this.removeModel=function(a){var b=d.indexOf(a);return b>=0&&d.splice(b,1),g.length=d.length,b>=0},this.isEmpty=function(){return 0===d.length},this.needsRender=function(){return a},this.resetNeedsRender=function(){a=!1},this.renderSome=function(e,f){for(var h,i=l.now(),j=0===c;;){var k=0,n=g[0];n||(g[0]=n=d[0].nextBatch());for(var o=1;o<g.length;o++){var p=g[o];p||(g[o]=p=d[o].nextBatch()),null!==p&&(n||(k=o,n=p),p.renderImportance>n.renderImportance&&(k=o,n=p))}if(!n){b=!0;for(var q=0;q<d.length;++q){var r=d[q];if(r&&r.is2d()&&!r.isLoadDone()){b=!1;break}}break}g[k]=d[k].nextBatch(),e(n),c++,h=l.now();var s=h-i;if(i=h,void 0===n.avgFrameTime?n.avgFrameTime=s:n.avgFrameTime=.8*n.avgFrameTime+.2*s,f-=n.avgFrameTime,f<=0)break}var t=d[0].frameUpdatePaging(j);return m!=t&&(a=!0,m=t),f},this.reset=function(a,f,h){if(k++,b=!1,c=0,this.resetNeedsRender(),i.reset(a),i.areaCullThreshold=e.PIXEL_CULLING_THRESHOLD,d.length)for(var j=0;j<d.length;j++)d[j].resetIterator(a,i,f,h),g[j]=d[j].nextBatch()},this.isDone=function(){return b||this.isEmpty()},this.setAllVisibility=function(a){for(var b=0;b<d.length;b++)d[b].setAllVisibility(a)},this.hideLines=function(a){for(var b=0;b<d.length;b++)d[b].hideLines(a)},this.hasHighlighted=function(){for(var a=0;a<d.length;a++)if(d[a].hasHighlighted())return!0;return!1},this.areAllVisible=function(){for(var a=0;a<d.length;a++)if(!d[a].areAllVisible())return!1;return!0},this.invalidateVisibleBounds=function(){for(var a=0;a<d.length;a++)d[a].visibleBoundsDirty=!0},this.getVisibleBounds=function(a){if(1===d.length)return d[0].getVisibleBounds(a);h.makeEmpty();for(var b=0;b<d.length;b++)h.union(d[b].getVisibleBounds(a));return h},this.findModel=function(a){for(var b=0;b<d.length;b++)if(d[b].getModelId()===a)return d[b];return null},this.rayIntersect=function(a,b,c,e,f){if(j.set(a,b),d.length>1){var g=[];if(f)for(var h=0;h<f.length;h++){var i=this.findModel(f[h]);i&&i.rayIntersect(j,c,[e[h]])}else for(var h=0;h<d.length;h++)if(!d[h].is2d()){var k=d[h].rayIntersect(j,c,e);k&&g.push(k)}return g.length?(g.sort(function(a,b){return a.distance-b.distance}),g[0]):null}return!d.length||d[0].is2d()?null:d[0].rayIntersect(j,c,e)},this.getRenderProgress=function(){return d[0].getRenderProgress()},this.getModels=function(){return d},this.getFragmentList=function(){return d[0].getFragmentList()},this.getGeometryList=function(){return d[0].getGeometryList()},this.getSceneCount=function(){return d[0].getSceneCount()},this.getGeomScenes=function(){return d[0].getGeomScenes()},this.geomPacksMissingLastFrame=function(){return d[0].geomPacksMissingLastFrame()},this.explode=function(a){if(d.length){for(var b=new THREE.Vector3,c=0;c<d.length;c++){var e=d[c],f=e.getData().instanceTree,g=e.getFragmentList(),h=e.getVisibleBounds(!0).center();if(a*=2,f&&f.nodeAccess.nodeBoxes&&0!==a){var i=a*(f.maxDepth-1)+1,j=0|i,k=i-j,l=new Float32Array(6);!function c(d,e,h,i,m,n,o,p){var q=2*a;e==j&&(q*=k),f.getNodeBox(d,l);var r=.5*(l[0]+l[3]),s=.5*(l[1]+l[4]),t=.5*(l[2]+l[5]);if(e>0&&e<=j){var u=(r-h)*q,v=(s-i)*q,w=(t-m)*q;n+=u,o+=v,p+=w}f.enumNodeChildren(d,function(a){c(a,e+1,r,s,t,n,o,p)},!1),b.x=n,b.y=o,b.z=p,f.enumNodeFragments(d,function(a){g.updateAnimTransform(a,null,null,b)},!1)}(f.getRootId(),0,h.x,h.y,h.x,0,0,0)}else for(var m=g.fragments.boxes,n=0,o=g.getCount();n<o;n++)if(0==a)g.updateAnimTransform(n);else{var p=6*n,q=.5*(m[p]+m[p+3]),r=.5*(m[p+1]+m[p+4]),s=.5*(m[p+2]+m[p+5]);b.x=a*(q-h.x),b.y=a*(r-h.y),b.z=a*(s-h.z),g.updateAnimTransform(n,null,null,b)}}this.invalidateVisibleBounds()}},this.update=function(a){for(var b=!1,c=0;c<d.length;c++){var e=d[c];b=b||e.update(a)}return b}}var e=c(21),f=c(38).FrustumIntersector;a.exports=d},function(a,b,c){function d(){this.frustum=new THREE.Frustum,this.viewProj=new THREE.Matrix4,this.viewDir=[0,0,1],this.ar=1,this.viewport=new THREE.Vector3(1,1,1),this.areaConv=1,this.areaCullThreshold=1}var e=c(21);d.prototype.reset=function(a){this.viewProj.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),this.frustum.setFromMatrix(this.viewProj);var b=a.matrixWorldInverse.elements;this.ar=a.aspect,this.viewDir[0]=-b[2],this.viewDir[1]=-b[6],this.viewDir[2]=-b[10],this.areaConv=a.clientWidth*a.clientHeight/4},d.prototype.projectedArea=function(){function a(){c||(c=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],d=new THREE.Box2)}function b(a,b){var c=a.x,d=a.y,e=a.z,f=b.elements,g=f[3]*c+f[7]*d+f[11]*e+f[15];g<0&&(g=-g);var h=1/g;a.x=(f[0]*c+f[4]*d+f[8]*e+f[12])*h,a.y=(f[1]*c+f[5]*d+f[9]*e+f[13])*h}var c,d;return function(e){if(a(),e.empty())return 0;var f=this.viewProj;c[0].set(e.min.x,e.min.y,e.min.z),c[1].set(e.min.x,e.min.y,e.max.z),c[2].set(e.min.x,e.max.y,e.min.z),c[3].set(e.min.x,e.max.y,e.max.z),c[4].set(e.max.x,e.min.y,e.min.z),c[5].set(e.max.x,e.min.y,e.max.z),c[6].set(e.max.x,e.max.y,e.min.z),c[7].set(e.max.x,e.max.y,e.max.z);for(var g=0;g<8;g++)b(c[g],f);return d.makeEmpty(),d.setFromPoints(c),d.min.x<-1&&(d.min.x=-1),d.min.x>1&&(d.min.x=1),d.min.y<-1&&(d.min.y=-1),d.min.y>1&&(d.min.y=1),d.max.x>1&&(d.max.x=1),d.max.x<-1&&(d.max.x=-1),d.max.y>1&&(d.max.y=1),d.max.y<-1&&(d.max.y=-1),(d.max.x-d.min.x)*(d.max.y-d.min.y)}}(),d.prototype.estimateDepth=function(a){var b=this.viewProj.elements,c=(a.min.x+a.max.x)/2,d=(a.min.y+a.max.y)/2,e=(a.min.z+a.max.z)/2,f=(b[3]*c+b[7]*d+b[11]*e+b[15],1/(b[3]*c+b[7]*d+b[11]*e+b[15]));return(b[2]*c+b[6]*d+b[10]*e+b[14])*f},d.prototype.intersectsBox=function(){function a(){b||(b=new THREE.Vector3,c=new THREE.Vector3)}var b,c;return function(d){a();for(var f=this.frustum.planes,g=0,h=0;h<6;h++){var i=f[h];b.x=i.normal.x>0?d.min.x:d.max.x,c.x=i.normal.x>0?d.max.x:d.min.x,b.y=i.normal.y>0?d.min.y:d.max.y,c.y=i.normal.y>0?d.max.y:d.min.y,b.z=i.normal.z>0?d.min.z:d.max.z,c.z=i.normal.z>0?d.max.z:d.min.z;var j=i.distanceToPoint(b),k=i.distanceToPoint(c);if(j<0&&k<0)return e.OUTSIDE;j>0&&k>0&&g++}return 6==g?e.CONTAINS:e.INTERSECTS}}(),a.exports={FrustumIntersector:d}},function(a,b){var c=function(a){function b(a,f,g){if(f||(f=0),g||(g=e.length),f>=g)return g;if(g===f+1){var h=d[e[f]];return c(h,a)?g:f}var i=parseInt(f+(g-f)/2),j=d[e[i-1]];return c(a,j)?b(a,f,i):c(j,a)?b(a,i,g):i-1}var c=a?a:function(a,b){return a<b},d=[],e=[];this.add=function(a){var c=b(a);return c==e.length?(d.push(a),void e.push(d.length-1)):(d.push(a),void e.splice(c,0,d.length-1))},this.size=function(){return e.length},this.get=function(a){return d[e[a]]},this.removeAt=function(a){var b=e[a];d[b]=void 0,e.splice(a,1)},this.toString=function(){for(var a="",b=0,c=this.size();b<c;++b)a+=this.get(b),b<c-1&&(a+=", ");return a}};a.exports=c},function(a,b,c){function d(){function a(a){var c=b.getFragmentList().fragments.packIds[a];C.indexOf(c)==-1&&C.push(c)}var b=this,c=new THREE.Box3,d=new THREE.Box3,o=new THREE.Box3;this.visibleBoundsDirty=!1,this.enforceBvh=!1;var p=0;this.id=n++;var q=null,r=null,s=null,t=null,u=null,v=null,w=0,x=null,y=e.RENDER_NORMAL,z=!1,A=0,B=e.PAGEOUT_NONE,C=[];this.getGeometryList=function(){return q},this.getFragmentList=function(){return r},this.getModelId=function(){return this.id},this.initialize=function(a){q=new f(this),r=new g(this,a);var b=this.getBoundingBox();b&&(c.copy(b),d.copy(b)),u=s=new j(this)},this.initFromCustomIterator=function(a){u=a,this.visibleBoundsDirty=!0},this.dtor=function(a){r&&r.dispose(a),u&&u.dtor&&u.dtor()},this.activateFragment=function(a,b,e){r&&(r.setMesh(a,b,e),u.addFragment(a),r.getWorldBounds(a,o),c.union(o),d.union(o))},this.setFragment=function(a,b){return void 0===a&&(a=this.getFragmentList().getNextAvailableFragmentId()),r.setMesh(a,b,!0),s&&s.addFragment(a),t&&!r.fragmentsHaveBeenAdded()&&t.addFragment(a),r.getWorldBounds(a,o),c.union(o),d.union(o),a},this.setBVH=function(a,b,c){u=t=new k,u.initialize(this,a,b,c)},this.resetIterator=function(a,b,c,d){if(A=0,d&&r){C=[],B=e.PAGEOUT_NONE,r.traversedGeom=[],r.culledGeom=[];for(var f=r.vizflags.length,g=0;g<f;++g)r.setFlagFragment(g,e.MESH_TRAVERSED,!1);for(var h in r.geomidsmap)r.geomidsmap.hasOwnProperty(h)&&(r.geomidsmap[h].t=0);u.getGeomScenes().every(function(a){return!!a.resetVisStatus&&(a.resetVisStatus(),!0)})}return z=!1,t&&!r.fragmentsHaveBeenAdded()&&(z=!0),z?u=t:s&&(u=s),w=0,y=c,x=b,u.reset(b,a),v&&v.reset(),u},this.nextBatch=function(){for(;;){var b=u.nextBatch();if(w++,!b)return null;if(v&&b instanceof avp.RenderBatch&&(b=v.consolidateNextBatch(b,x)),b instanceof THREE.Scene)return b;if(void 0===b.visibleStats||b.visibleStats==-1){var c=b.applyVisibility(y,x,this.getFragmentList().fragments.packIds?a:null);void 0!==b.visibleStats&&(b.visibleStats=c?0:1),c||this.is2d()||(b.sortObjects&&!this.getFragmentList().useThreeMesh?b.sortByDepth(x):b.sortDone||b.sortByMaterial())}else c=0==b.visibleStats;if(!c)return b}},this.getVisibleBounds=function(a){return this.visibleBoundsDirty&&(c.makeEmpty(),d.makeEmpty(),u.getVisibleBounds(c,d,a),this.visibleBoundsDirty=!1),a?d:c},this.rayIntersect=function(a,b,c){this.visibleBoundsDirty&&this.getVisibleBounds();var d,e=[];if(c&&c.length>0){var f=this.getInstanceTree(),g=[];if(f)for(d=0;d<c.length;d++)f.enumNodeFragments(c[d],function(a){g.push(a)},!0);else g=c;if(g.length>2)u.rayCast(a,e,c);else for(d=0;d<g.length;d++){var h=r.getVizmesh(g[d]);if(h){var i=m.rayCast(h,a,e);i&&e.push(i)}}}else u.rayCast(a,e);if(!e.length)return null;e.sort(function(a,b){return a.distance-b.distance});var j;for(d=0;d<e.length;d++){var k=e[d].fragId;if(!this.is2d()){var l=this.isFragVisible(k);if(l){var n=r.getMaterial(k);if(b&&n.transparent)continue;j=e[d];var o=!1,p=e[d].point;if(n.cutplanes)for(var q=0;q<n.cutplanes.length;q++)o=o||n.cutplanes[q].dot(new THREE.Vector4(p.x,p.y,p.z,1))>1e-6;if(!o)break;j=null}}}return j&&(j.model=this),j},this.setHighlighted=function(a,b){if(!r)return!1;var c=r.setFlagFragment(a,e.MESH_HIGHLIGHTED,b);return c&&(b?p++:p--),c},this.setVisibility=function(a,b){r&&(r.setVisibility(a,b),this.visibleBoundsDirty=!0)},this.setAllVisibility=function(a){r&&(r.setAllVisibility(a),this.visibleBoundsDirty=!0)},this.hideLines=function(a){r&&r.hideLines(a)},this.hasHighlighted=function(){return!!p},this.isFragVisible=function(a){return r.isFragVisible(a)},this.areAllVisible=function(){return!r||r.areAllVisible()},this.getGeomScenes=function(){return u.getGeomScenes()},this.getRenderProgress=function(){return w/u.getSceneCount()},this.pageOutStatus=function(){return B},this.pageOutIfNeeded=function(a){var b=e.PAGEOUT_SUCCESS,c=q.numGeomsInMemory;if(r&&c>r.options.geomCountLimit){var d,f,g,h=0,i=0,j=0,k=r.options.geomCountLimit*r.options.pageOutPercentage;for(d=r.culledGeom.length,d=d>k?k:d,j=0;j<d;j++)f=r.culledGeom[j],g=q.removeGeometry(f),g>0&&(h+=g,i++);if(r.culledGeom.splice(0,d),k-=d,k>0){for(d=r.traversedGeom.length,j=d>k?d-k:0;j<d;++j)f=r.traversedGeom[j],g=q.removeGeometry(f),g>0&&(h+=g,i++);d=d>k?k:d,r.traversedGeom.splice(-d,d)}if(c=q.numGeomsInMemory,a&&c>r.options.geomCountLimit){for(d=q.geoms.length,j=d-1;j>=0&&(g=q.removeGeometry(j),g>0&&(h+=g,i++),!(q.numGeomsInMemory<r.options.geomCountLimit));--j);THREE.log("[On Demand Loading] A force page out occur. ")}A+=i,THREE.log("[On Demand Loading] Unload: "+i+" , Size: "+h/1048576+"MB. Remaining: "+q.numGeomsInMemory),q.numGeomsInMemory>r.options.geomCountLimit?(r.reachLimit=!0,C=[],b=e.PAGEOUT_FAIL):r.reachLimit=!1,window&&window.gc&&window.gc()}return b},this.frameUpdatePaging=function(a){var b=r&&r.pageOutGeometryEnabled();if(!b)return B;if(!a)if(B==e.PAGEOUT_FAIL){var c=r.options.geomCountLimit*r.options.pageOutPercentage;r.reachLimit&&r.traversedGeom.length>.05*c?B=this.pageOutIfNeeded():r.traversedGeom.length>.2*c&&(B=this.pageOutIfNeeded())}else B=this.pageOutIfNeeded();return u.done()&&(B=this.pageOutIfNeeded(),B==e.PAGEOUT_FAIL&&(B=this.pageOutIfNeeded(!0))),B},this.geomPacksMissingLastFrame=function(){return C},this.addGeomPackMissingLastFrame=function(a){return!(C.length>r.options.maxQueuedGeomPFForLoading)&&(C.indexOf(a)==-1&&C.push(a),!0)},this.update=function(a){return!(!u||!u.update)&&u.update(a)},this.setThemingColor=function(a,b){r?r.setThemingColor(a,b):THREE.warn("Theming colors are not supported by this model type.")},this.clearThemingColors=function(){r&&r.clearThemingColors()},this.getLeaflet=function(){return u instanceof l?u:null},this.consolidate=function(a,b,c){var d=h(r,a,b,c);v=new i(r,d)},this.isConsolidated=function(){return!!v},this.getInstanceTree=function(){throw"Method has not been implemented"},this.getBoundingBox=function(){throw"Method has not been implemented"},this.is2d=function(){throw"Method has not been implemented"},this.updateRenderProxy=function(a,b){v&&v.updateRenderProxy(a,b)}}var e=c(21),f=c(20),g=c(34).FragmentList,h=c(33),i=c(35),j=c(31),k=c(36),l=c(41),m=c(19),n=1;a.exports=d},function(a,b,c){function d(a,b,c){var d=a.clone();return d.max(b),d.min(c),d.distanceToSquared(a)}function e(a,b,c,d){var e=a.clone();return e.max(c),e.min(d),e.sub(a).dot(b)}function f(){function a(a,b,c){var d=Math.ceil(Math.log2(a)),e=Math.ceil(Math.log2(b)),f=Math.max(d,e);return f-Math.log2(c)}function b(a,b,c){var d=b-c;d>0&&(a.texWidth>>=d,a.texHeight>>=d,a.maxLevel=c)}this.urlPattern=null,this.tileSize=null,this.maxLevel=null,this.textureLoader=null,this.texWidth=0,this.texHeight=0,this.maxActiveTiles=400,this.onRootLoaded=null,this.levelOffset=0,this.getRootTileSize=function(){return 1*(this.tileSize<<this.maxLevel)},this.getQuadWidth=function(){return 1*this.texWidth/this.getRootTileSize()},this.getQuadHeight=function(){return 1*this.texHeight/this.getRootTileSize()},this.getPageToModelTransform=function(a,b){var c=a/this.getQuadWidth(),d=b/this.getQuadHeight();return new LmvMatrix4(!0).set(c,0,0,0,0,d,0,0,0,0,1,0,0,0,0,1)},this.getBBox=function(){var a=this.getQuadWidth(),b=this.getQuadHeight(),c=1-b;return new THREE.Box3(new THREE.Vector3(0,c,0),new THREE.Vector3(a,1,0))},this.valid=function(){return"string"==typeof this.urlPattern&&this.urlPattern.length>0&&"number"==typeof this.tileSize&&this.tileSize>0&&"number"==typeof this.maxLevel&&this.maxLevel>0&&"number"==typeof this.texWidth&&this.texWidth>0&&"number"==typeof this.texHeight&&this.texHeight>0},this.initForSimpleImage=function(a,b){this.urlPattern=decodeURIComponent(a),this.maxLevel=0,this.levelOffset=0,this.tileSize=-1,this.texWidth=-1,this.texHeight=-1,this.onRootLoaded=b},this.initFromLoadOptions=function(c,d,e){this.urlPattern=decodeURIComponent(c),this.textureLoader=e,d&&(this.tileSize=d.tileSize,this.maxLevel=a(d.texWidth,d.texHeight,d.tileSize),this.texWidth=d.texWidth,this.texHeight=d.texHeight,this.levelOffset=d.levelOffset,"number"==typeof d.maxLevel&&b(this,this.maxLevel,d.maxLevel))}}function g(a,b){function c(a){var b=L.maxLevel-a;return L.texWidth>>b}function f(a){var b=L.maxLevel-a;return L.texHeight>>b}function g(a){var b=c(a.level),d=f(a.level),e=a.x*L.tileSize,g=a.y*L.tileSize;return e>=b||g>=d}function n(a){var b=c(a.level),d=f(a.level),e=a.x*L.tileSize,g=a.y*L.tileSize,h=1*Math.max(0,Math.min(L.tileSize,b-e)),i=1*Math.max(0,Math.min(L.tileSize,d-g)),j=1*L.tileSize;return new THREE.Vector2(1*h/j,i/j)}function o(a){return 1/(1<<a)}function p(){this.offsetX=0,this.offsetY=0,this.scaleX=1,this.scaleY=1}function q(a,b){var c=a.level-b.level,d=1<<c,e=1/d,f=e,g=n(b);e/=g.x,f/=g.y;var h=b.x*d,i=b.y*d,j=a.x-h,k=a.y-i,l=n(a);j*=e,k*=f,k=1-k-f*l.y;var m=new p;return m.offsetX=j,m.offsetY=k,m.scaleX=e*l.x,m.scaleY=f*l.y,m}function r(a){var b=o(a.level);return b*a.x}function s(a){var b=o(a.level),c=(1<<a.level)-1,d=c-a.y;return b*d}function t(a){return Q[h.tile2Index(a)]}function u(a){var b=t(a);return b instanceof m&&b.state==l}function v(a,b){for(var c=a.getParent();c;){var d=t(c),e=d&&d.state==l;if(e&&b&&d.mesh.material.map.needsUpdate&&c.level>0&&(e=!1),e)break;c=c.getParent()}return c}function w(a,b){var c=b?b:aa,d=[];d.push(new THREE.Vector2(c.offsetX,c.offsetY)),d.push(new THREE.Vector2(c.offsetX+c.scaleX,c.offsetY)),d.push(new THREE.Vector2(c.offsetX+c.scaleX,c.offsetY+c.scaleY)),d.push(new THREE.Vector2(c.offsetX,c.offsetY+c.scaleY)),a.faceVertexUvs[0].length=0,a.faceVertexUvs[0].push([d[0],d[1],d[2]]),a.faceVertexUvs[0].push([d[0],d[2],d[3]]),a.uvsNeedUpdate=!0}function x(a){var b=new THREE.Geometry;return b.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(1,0,0),new THREE.Vector3(1,1,0),new THREE.Vector3(0,1,0)),b.faces.push(new THREE.Face3(0,1,2)),b.faces.push(new THREE.Face3(0,2,3)),w(b,a),b.computeFaceNormals(),b}function y(a){var b=$[_];return b?w(b,a):(b=x(a),$[_]=b),_++,b}function z(a,b,c){var d;if(b)Z||(Z=x()),d=Z;else{var e=v(a),f=C(e);b=f.material;var g=q(a,e,c);d=y(g)}var h=new THREE.Mesh(d,b),i=o(a.level),j=n(a),k=(1-j.y)*i,l=r(a),m=s(a);return h.position.set(l,m+k,0),h.scale.set(i*j.x,i*j.y,1),h}function A(a){var b=L.levelOffset?L.levelOffset:0,c=L.urlPattern.replace("{x}",a.x).replace("{y}",a.y).replace("{z}",a.level+b);return c}function B(b){var c=h.tile2Index(b),d=Q[c];if(!d||d.state==j){d||(d=new m(R),Q[c]=d),d.state=k;var e=A(b),f=function(c){if(ba){0==L.maxLevel&&(L.texWidth==-1&&(L.texWidth=c.image.width),L.texHeight==-1&&(L.texHeight=c.image.height),L.tileSize==-1&&(L.tileSize=Math.max(c.image.width,c.image.height)),M=a.getBBox()),c.minFilter=THREE.LinearFilter,c.magFilter=THREE.LinearFilter;var f=new THREE.MeshBasicMaterial({color:4294967295});f.map=c,f.name=e,f.disableEnvMap=!0,O.addMaterial(f.name,f,!0);var g=z(b,f);d.mesh=g,d.state=l,V--,X=!0;var h=c&&c.image?c.image.src:null;h&&THREE.Cache&&THREE.Cache.get(h)&&THREE.Cache.remove(h),0==b.level&&L.onRootLoaded&&L.onRootLoaded()}};V++,L.textureLoader(e,function(a){f(a)},function(a){console.error(a)})}}function C(a){var b=h.tile2Index(a),c=Q[b];return c&&c.state==l?c.mesh:null}function D(a,b){var c=r(a),d=s(a);b.set(c,d,0)}function E(a,b){var c=o(a.level),d=r(a)+c,e=s(a)+c;b.set(d,e,0)}function F(a,b){this.tile=a,this.prio=b}function G(a,b){return a.prio>b.prio}function H(a){var b=Q[h.tile2Index(a)];b&&b.timeStamp!=R&&(b.timeStamp=R,S++)}function I(a,b,c){a.sort(function(a,d){var e=da(a,b,c),f=da(d,b,c);return f-e});for(var d=0,e=0;e<a.length;e++){var f=t(a[e]);if(!f||f.state!=k){if(V>=U)break;B(a[e]),d++}}return d}function J(a){if(a&&a.mesh&&a.mesh.material){var b=a.mesh.material;O.removeMaterial(b.name),b.map.dispose(),b.map.needsUpdate=!0;var c={type:"dispose"};b.dispatchEvent(c),b.needsUpdate=!0}}function K(a,b,c){var d=Object.keys(Q),e=d.length,f=T-e,g=a-f;if(!(g<=0)){d.sort(function(a,d){var e=Q[a].timeStamp,f=Q[d].timeStamp;if(e!=f)return e-f;var g=h.index2Tile(a),i=h.index2Tile(d),j=da(g,b,c),k=da(i,b,c);return j-k});for(var i=Math.min(g,d.length),j=0;j<i;j++){var k=d[j];if(Q[k].state==l){if(Q[k].timeStamp==R)break;J(Q[k]),delete Q[k]}}}}var L=a,M=a.getBBox(),N=new THREE.Scene,O=b,P=!0,Q=[],R=0,S=0,T=150,U=5,V=0,W=5,X=!1,Y=[],Z=null,$=[],_=0;this.nextBatch=function(){return P?null:(P=!0,N)},this.getSceneCount=function(){return 1},this.done=function(){return P},this.rayCast=function(a,b){return null},this.getVisibleBounds=function(a,b){a&&a.copy(M),b&&b.copy(M)};var aa=new p,ba=this;B(new h.TileCoords(0,0,0));var ca=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Box3;return function(d,e){return D(d,a),E(d,b),c.set(a,b),e.intersectsBox(c)>0}}(),da=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,e,f){var g=o(c.level);D(c,a),E(c,b);var h=d(f,a,b),i=ca(c,e),j=i?100:1,k=1e-4;h=Math.max(h,k);var l=g*g,m=j*l/h;return m}}(),ea=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,f,g,h){D(c,a),E(c,b);var i=e(d,f,a,b),j=b.x-a.x,k=Math.tan(THREE.Math.degToRad(g/2)),l=j/(k*i);return.5*l*h}}();this.dispose=function(){for(var a in Q)J(Q[a]);Z&&(Z.dispose(),Z.needsUpdate=!0);for(var a=0;a<$.length;a++){var b=$[a];b&&(b.dispose(),b.needsUpdate=!0)}},this.dtor=function(){this.dispose(),ba=null,O=null},this.reset=function(a,b){for(var c=0;c<N.children.length;c++){var d=N.children[c];d.dispatchEvent({type:"removed"})}N.children.length=0,R++,S=0,_=0;var e=new h.TileCoords(0,0,0);if(!u(e))return void(P=!0);var f=new i(G),j=new h.TileCoords(0,0,0),k=da(j,a,b.position);f.add(new F(j,k));for(var l=b.getWorldDirection(),m=[],n=[],o=[];f.size()>0;){var p=f.get(0),q=p.tile;if(f.removeAt(0),!g(q)){var r=!0;q.level==L.maxLevel&&(r=!1);var s=ea(q,b.position,l,b.fov,b.clientHeight);s<L.tileSize&&(r=!1);var t=ca(q,a);if(t&&(u(q)||o.push(q),H(q)),!t&&m.length+n.length>L.maxActiveTiles&&(r=!1),r)for(var v=0;v<4;v++){var w=q.getChild(v),k=da(w,a,b.position);f.add(new F(w,k))}else t?m.push(q):n.push(q)}}var x=0;X=!1;for(var y=!0,c=0;c<m.length;++c){var q=m[c],A=C(q);A&&A.material.map.needsUpdate&&(x<W?x++:(A=z(q,null,!0),X=!0,y=!1)),A||(A=z(q,null),y=!1),N.add(A)}P=!1;var B=I(o,a,b.position);S+=V;for(var D=[],c=0;c<n.length&&!(S>=L.maxActiveTiles);c++){var q=n[c];if(u(q))for(var E=0;E<=q.level;E++){var J=q.getParentAtLevel(E);if(H(J),S>L.maxActiveTiles)break}else D.push(q),S++}if(B+=I(D,a,b.position),K(B,a,b.position),y&&Y.length>0){var M=Y.splice(0,Y.length);setTimeout(function(){for(var a=0;a<M.length;a++)M[a]()},1)}},this.callWhenRefined=function(a){Y.push(a)},this.update=function(){return X}}var h=c(42),i=c(39),j=0,k=1,l=2,m=function(a,b){this.timeStamp=a,this.mesh=b,this.state=j};a.exports={ModelIteratorTexQuad:g,TexQuadConfig:f}},function(a,b){function c(a,b,c){this.level=a,this.x=b,this.y=c}c.prototype={constructor:c,copy:function(){return new c(level,x,y)},isValid:function(){return isNumber(this.level)&&this.level>=0&&isNumber(this.x)&&isNumber(this.y)},getChild:function(a){var b=1&a?1:0,d=2&a?1:0;return new c(this.level+1,2*this.x+b,2*this.y+d)},getParent:function(){return 0==this.level?null:new c(this.level-1,Math.floor(this.x/2),Math.floor(this.y/2))},getParentAtLevel:function(a){if(a<0||a>this.level)return null;var b=this.level-a,d=Math.floor(this.x>>b),e=Math.floor(this.y>>b);return new c(a,d,e)},toString:function(){return"("+this.level+", "+this.x+", "+this.y+")"},equals:function(a,b,d){return a instanceof c?this.equals(a.level,a.x,a.y):this.level===a&&this.x===b&&this.y===d}};var d=function(a){var b=((1<<2*a.level)-1)/3,c=1<<a.level;return b+a.y*c+a.x},e=function(a){for(var b=new c(0,0,0);d(b)<=a;)b.level++;b.level--;var e=a-d(b),f=1<<b.level;return b.y=Math.floor(e/f),b.x=e%f,b};a.exports={TileCoords:c,tile2Index:d,index2Tile:e}},function(a,b,c){function d(a,b){if(!a||!a.colors)return new THREE.Color(1,0,0);var c=a.colors[b];if(!c)return new THREE.Color(0,0,0);var d=c.values;if(!d||!d.length)return new THREE.Color(1,0,0);var e=d[0];return new THREE.Color(e.r,e.g,e.b)}function e(a,b,c){if(!a||!a.scalars)return c;var d=a.scalars[b];return d?d.values[0]:c}function f(a,b,c){if(!a||!a.booleans)return c;var d=a.booleans;return d?d[b]:c}function g(a,b,c,d){if(!a||!a[b])return d;var e=a[b][c];return e?e.values[0]:d}function h(a,b,c){var d={bands:0,weights:new THREE.Vector4(1,1,1,1),frequencies:new THREE.Vector4(1,1,1,1)};if(!a||!a[b])return d;var e=a[b][c];if(!(e&&e.values&&e.values instanceof Array))return d;var f=e.values;d.bands=f.length/2;for(var g=0;g<d.bands;++g)d.frequencies.setComponent(g,1/f[2*g]),d.weights.setComponent(g,f[2*g+1]);return d}function i(a,b,c,d){if(!a||!a.scalars)return d;var e=a.scalars[b];return e?m(e.values[0],e.units,c):d}function j(a,b,c,d){if(!a||!a[b])return d;var e=a[b][c];if(!e)return d;var f=e.connections;return f?e.connections[0]:d}function k(a){var b=a;return b<=.04045?b/=12.92:b=Math.pow((b+.055)/1.055,2.4),b}function l(a){var b,c,d;return b=k(a.r),c=k(a.g),d=k(a.b),new THREE.Color(b,c,d)}function m(a,b,c){var d=z[c];d||(d=1,THREE.warn("Unsupported unit: "+c));var e=z[b];return e||(e=1,THREE.warn("Unsupported unit: "+b)),a*d/e}function n(a,b,c){if(0===b){var d=i(a,"bumpmap_Depth",c,0),e=1,f=1;return null!=g(a,"scalars","texture_RealWorldScale")?e=f=i(a,"texture_RealWorldScale",c,1):(e=i(a,"texture_RealWorldScaleX",c,1),f=i(a,"texture_RealWorldScaleY",c,1)),e=0===e?1:1/e,f=0===f?1:1/f,new THREE.Vector2(e*d,f*d)}var h=g(a,"scalars","bumpmap_NormalScale",1);return new THREE.Vector2(h,h)}function o(a,b){var c=i(a,"texture_RealWorldOffsetX",b,0),d=i(a,"texture_RealWorldOffsetY",b,0),e=g(a,"scalars","texture_UOffset",0),f=g(a,"scalars","texture_VOffset",0);c+=e,d+=f;var h=1,j=1;null!=g(a,"scalars","texture_RealWorldScale")?h=j=i(a,"texture_RealWorldScale",b,1):(h=i(a,"texture_RealWorldScaleX",b,1),j=i(a,"texture_RealWorldScaleY",b,1)),h=0===h?1:1/h,j=0===j?1:1/j;var k=g(a,"scalars","texture_UScale",1),l=g(a,"scalars","texture_VScale",1);h*=k,j*=l;var m=g(a,"scalars","texture_WAngle",1);m*=Math.PI/180;var n={elements:[Math.cos(m)*h,Math.sin(m)*j,0,-Math.sin(m)*h,Math.cos(m)*j,0,c,d,1]};return n}function p(){var a=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],b=new Uint8Array(a),c=new THREE.DataTexture(b,256,1,THREE.LuminanceFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.RepeatWrapping,THREE.RepeatWrapping,THREE.NearestFilter,THREE.NearestFilter,0);c.generateMipmaps=!1,
c.flipY=!1,c.needsUpdate=!0;var d=[225,39,122,231,29,173,15,159,75,88,233,19,179,79,72,94,54,73,151,161,171,113,221,144,127,83,168,19,88,122,62,225,109,128,246,247,172,101,61,139,211,168,64,210,224,82,87,97,119,250,201,44,242,239,154,99,126,13,44,70,246,170,100,52,135,28,187,22,207,119,199,1,235,187,55,131,190,124,222,249,236,53,225,231,71,30,173,185,153,47,79,133,225,10,140,62,17,99,100,29,137,95,142,244,76,5,83,124,38,216,253,195,44,210,148,185,188,39,78,195,132,30,60,73,92,223,133,80,230,56,118,207,79,15,251,211,111,21,79,23,240,146,150,207,3,61,103,27,148,6,31,127,235,58,173,244,116,81,34,120,192,213,188,226,97,23,16,161,106,80,242,148,35,37,91,117,51,216,97,193,126,222,39,38,133,217,215,23,237,57,205,42,222,165,126,133,33,8,227,154,27,18,56,11,192,120,80,92,236,38,210,207,128,31,135,39,123,5,49,127,107,200,34,14,153,239,134,19,248,162,58,201,159,198,243,158,72,5,138,184,222,200,34,141,233,40,195,238,191,122,171,32,66,254,229,197],e=new Uint8Array(d),f=new THREE.DataTexture(e,256,1,THREE.LuminanceFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.RepeatWrapping,THREE.RepeatWrapping,THREE.NearestFilter,THREE.NearestFilter,0);f.generateMipmaps=!1,f.flipY=!1,f.needsUpdate=!0;for(var g,h,i,j,k,l,m,n,o=function(b){return a[b%256]},p=new Array(262144),q=0;q<256;++q)for(n=0;n<256;++n)g=o(n)+q,h=o(g),i=o(g+1),j=o(n+1)+q,k=o(j),l=o(j+1),m=4*(256*q+n),p[m]=h,p[m+1]=i,p[m+2]=k,p[m+3]=l;var r=new Uint8Array(p),s=new THREE.DataTexture(r,256,256,THREE.RGBAFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.RepeatWrapping,THREE.RepeatWrapping,THREE.NearestFilter,THREE.NearestFilter,0);s.generateMipmaps=!1,s.flipY=!1,s.needsUpdate=!0;var t=[1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1,1,1,0,0,-1,1,-1,1,0,0,-1,-1],u=new Array(1024);for(n=0;n<256;++n){var v=a[n]%16;u[4*n]=127*t[3*v]+128,u[4*n+1]=127*t[3*v+1]+128,u[4*n+2]=127*t[3*v+2]+128,u[4*n+3]=0}var w=new Uint8Array(u),y=new THREE.DataTexture(w,256,1,THREE.RGBAFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.RepeatWrapping,THREE.RepeatWrapping,THREE.NearestFilter,THREE.NearestFilter,0);y.generateMipmaps=!1,y.flipY=!1,y.needsUpdate=!0,x={permutation:c,gradient:f,perm2D:s,permGrad:y}}function q(a,b,c){a[c+"_enable"]=g(b,"booleans",c+"_enable",0);var d=h(b,"scalars",c+"_prof");a[c+"_bands"]=d.bands,a[c+"_weights"]=d.weights,a[c+"_frequencies"]=d.frequencies}function r(a,b){var c,h,i=a.materials,k=i[a.userassets[0]],m=k.properties,n=b?y.createPrismMaterial():new THREE.MeshPhongMaterial;if(n.proteinMat=a,n.packedNormals=!0,k&&b){n.tag=k.tag,n.prismType=k.definition,void 0===n.prismType&&(n.prismType=""),void 0!==a.IsSingleSided&&a.IsSingleSided===!1&&(n.side=THREE.DoubleSide);var o=n.mapList;switch(n.transparent=!1,n.envExponentMin=1,n.envExponentMax=512,n.envExponentCount=10,n.surface_albedo=l(d(m,"surface_albedo",new THREE.Color(1,0,0))),o.surface_albedo_map=j(m,"colors","surface_albedo",null),n.surface_anisotropy=g(m,"scalars","surface_anisotropy",0),o.surface_anisotropy_map=j(m,"scalars","surface_anisotropy",null),n.surface_rotation=g(m,"scalars","surface_rotation",0),o.surface_rotation_map=j(m,"scalars","surface_rotation",null),n.surface_roughness=g(m,"scalars","surface_roughness",0),o.surface_roughness_map=j(m,"scalars","surface_roughness",null),o.surface_cutout_map=j(m,"textures","surface_cutout",null),o.surface_normal_map=j(m,"textures","surface_normal",null),n.prismType){case"PrismOpaque":n.opaque_albedo=l(d(m,"opaque_albedo",new THREE.Color(1,0,0))),o.opaque_albedo_map=j(m,"colors","opaque_albedo",null),n.opaque_luminance_modifier=l(d(m,"opaque_luminance_modifier",new THREE.Color(0,0,0))),o.opaque_luminance_modifier_map=j(m,"colors","opaque_luminance_modifier",null),n.opaque_f0=g(m,"scalars","opaque_f0",0),o.opaque_f0_map=j(m,"scalars","opaque_f0",null),n.opaque_luminance=g(m,"scalars","opaque_luminance",0);break;case"PrismMetal":n.metal_f0=l(d(m,"metal_f0",new THREE.Color(1,0,0))),o.metal_f0_map=j(m,"colors","metal_f0",null);break;case"PrismLayered":n.layered_bottom_f0=l(d(m,"layered_bottom_f0",new THREE.Color(1,1,1))),o.layered_bottom_f0_map=j(m,"colors","layered_bottom_f0",null),n.layered_diffuse=l(d(m,"layered_diffuse",new THREE.Color(1,0,0))),o.layered_diffuse_map=j(m,"colors","layered_diffuse",null),n.layered_anisotropy=g(m,"scalars","layered_anisotropy",0),o.layered_anisotropy_map=j(m,"scalars","layered_anisotropy",null),n.layered_f0=g(m,"scalars","layered_f0",0),o.layered_f0_map=j(m,"scalars","layered_f0",null),n.layered_fraction=g(m,"scalars","layered_fraction",0),o.layered_fraction_map=j(m,"scalars","layered_fraction",null),n.layered_rotation=g(m,"scalars","layered_rotation",0),o.layered_rotation_map=j(m,"scalars","layered_rotation",null),n.layered_roughness=g(m,"scalars","layered_roughness",0),o.layered_roughness_map=j(m,"scalars","layered_roughness",null),o.layered_normal_map=j(m,"textures","layered_normal",null);break;case"PrismTransparent":n.transparent_color=l(d(m,"transparent_color",new THREE.Color(1,0,0))),n.transparent_distance=g(m,"scalars","transparent_distance",0),n.transparent_ior=g(m,"scalars","transparent_ior",0),n.transparent=!0;break;case"PrismWood":q(n,m,"wood_fiber_cosine"),q(n,m,"wood_fiber_perlin"),n.wood_fiber_perlin_scale_z=g(m,"scalars","wood_fiber_perlin_scale_z",0),q(n,m,"wood_growth_perlin"),n.wood_latewood_ratio=g(m,"scalars","wood_latewood_ratio",0),n.wood_earlywood_sharpness=g(m,"scalars","wood_earlywood_sharpness",0),n.wood_latewood_sharpness=g(m,"scalars","wood_latewood_sharpness",0),n.wood_ring_thickness=g(m,"scalars","wood_ring_thickness",0),q(n,m,"wood_earlycolor_perlin"),n.wood_early_color=l(d(m,"wood_early_color",new THREE.Color(1,0,0))),n.wood_use_manual_late_color=g(m,"booleans","wood_use_manual_late_color",0),n.wood_manual_late_color=l(d(m,"wood_manual_late_color",new THREE.Color(1,0,0))),q(n,m,"wood_latecolor_perlin"),n.wood_late_color_power=g(m,"scalars","wood_late_color_power",0),q(n,m,"wood_diffuse_perlin"),n.wood_diffuse_perlin_scale_z=g(m,"scalars","wood_diffuse_perlin_scale_z",0),n.wood_use_pores=g(m,"booleans","wood_use_pores",0),n.wood_pore_type=g(m,"choicelists","wood_pore_type",0),n.wood_pore_radius=g(m,"scalars","wood_pore_radius",0),n.wood_pore_cell_dim=g(m,"scalars","wood_pore_cell_dim",0),n.wood_pore_color_power=g(m,"scalars","wood_pore_color_power",0),n.wood_pore_depth=g(m,"scalars","wood_pore_depth",0),n.wood_use_rays=g(m,"booleans","wood_use_rays",0),n.wood_ray_color_power=g(m,"scalars","wood_ray_color_power",0),n.wood_ray_seg_length_z=g(m,"scalars","wood_ray_seg_length_z",0),n.wood_ray_num_slices=g(m,"integers","wood_ray_num_slices",0),n.wood_ray_ellipse_z2x=g(m,"scalars","wood_ray_ellipse_z2x",0),n.wood_ray_ellipse_radius_x=g(m,"scalars","wood_ray_ellipse_radius_x",0),n.wood_use_latewood_bump=g(m,"booleans","wood_use_latewood_bump",0),n.wood_latewood_bump_depth=g(m,"scalars","wood_latewood_bump_depth",0),n.wood_use_groove_roughness=g(m,"booleans","wood_use_groove_roughness",0),n.wood_groove_roughness=g(m,"scalars","wood_groove_roughness",0),n.wood_diffuse_lobe_weight=g(m,"scalars","wood_diffuse_lobe_weight",0),n.wood_curly_distortion_enable=g(m,"booleans","wood_curly_distortion_enable",0),n.wood_curly_distortion_scale=g(m,"scalars","wood_curly_distortion_scale",0),o.wood_curly_distortion_map=j(m,"scalars","wood_curly_distortion_map",null),n.transparent=!1,x||p(),n.uniforms.permutationMap.value=x.permutation,n.uniforms.gradientMap.value=x.gradient,n.uniforms.perm2DMap.value=x.perm2D,n.uniforms.permGradMap.value=x.permGrad;break;default:THREE.warn("Unknown prism type: "+n.prismType)}n.defines={},n.textureMaps={};for(var r in o)if(o[r]){var s=i[o[r]];h=s.properties;var t="BumpMap"==s.definition?"bumpmap_Bitmap":"unifiedbitmap_Bitmap",u=h.uris[t].values[0];u&&(c={mapName:r,uri:u,textureObj:s,isPrism:!0},n.textureMaps[c.mapName]=c,n.defines["USE_"+r.toUpperCase()]="")}return n.defines[n.prismType.toUpperCase()]="",n}if(k&&!b&&"SimplePhong"==k.definition){n.tag=k.tag,n.proteinType=k.proteinType,void 0===n.proteinType&&(n.proteinType=null);var v=n.ambient=d(m,"generic_ambient"),w=n.color=d(m,"generic_diffuse"),z=n.specular=d(m,"generic_specular"),A=n.emissive=d(m,"generic_emissive");0===w.r&&0===w.g&&0===w.b&&0===z.r&&0===z.g&&0===z.b&&0===v.r&&0===v.g&&0===v.b&&0===A.r&&0===A.g&&0===A.b&&(w.r=w.g=w.b=.4),n.shininess=e(m,"generic_glossiness",30),n.opacity=1-e(m,"generic_transparency",0),n.reflectivity=e(m,"generic_reflectivity_at_0deg",0);var B=f(m,"generic_bump_is_normal"),C=e(m,"generic_bump_amount",0);null==C&&(C=1),B?(C>1&&(C=1),n.normalScale=new THREE.Vector2(C,C)):(C>=1&&(C=.03),n.bumpScale=C);var D=f(m,"generic_is_metal");void 0!==D&&(n.metal=D);var E=f(m,"generic_backface_cull");void 0===E||E||(n.side=THREE.DoubleSide),n.transparent=k.transparent,n.textureMaps={};var F=k.textures;for(var G in F)if(c={},c.textureObj=i[F[G].connections[0]],h=c.textureObj.properties,c.uri=h.uris.unifiedbitmap_Bitmap.values[0],c.uri){if("generic_diffuse"==G)c.mapName="map",(!n.color||0===n.color.r&&0===n.color.g&&0===n.color.b)&&n.color.setRGB(1,1,1);else if("generic_bump"==G)B?c.mapName="normalMap":c.mapName="bumpMap";else if("generic_specular"==G)c.mapName="specularMap";else{if("generic_alpha"!=G)continue;c.mapName="alphaMap",n.transparent=!0}n.textureMaps[c.mapName]=c}}else n.ambient=197379,n.color=7829367,n.specular=3355443,n.shininess=30,n.shading=THREE.SmoothShading;return n}function s(a,b,c){var d=a.properties;b.clampS=!g(d,"booleans","texture_URepeat",!1),b.clampT=!g(d,"booleans","texture_VRepeat",!1),b.wrapS=b.clampS?THREE.ClampToEdgeWrapping:THREE.RepeatWrapping,b.wrapT=b.clampT?THREE.ClampToEdgeWrapping:THREE.RepeatWrapping,b.matrix=o(d,c),"UnifiedBitmap"==a.definition&&(b.invert=g(d,"booleans","unifiedbitmap_Invert",!1)),"BumpMap"==a.definition&&(b.bumpmapType=g(d,"choicelists","bumpmap_Type",0),b.bumpScale=n(d,b.bumpmapType,c))}function t(a,b){if(a){var c=a.properties;b.invert=f(c,"unifiedbitmap_Invert"),b.clampS=!f(c,"texture_URepeat",!0),b.clampT=!f(c,"texture_VRepeat",!0),b.wrapS=b.clampS?THREE.ClampToEdgeWrapping:THREE.RepeatWrapping,b.wrapT=b.clampT?THREE.ClampToEdgeWrapping:THREE.RepeatWrapping;var d=e(c,"texture_UScale",1),g=e(c,"texture_VScale",1),h=e(c,"texture_UOffset",0),i=e(c,"texture_VOffset",0),j=e(c,"texture_WAngle",0);b.matrix={elements:[Math.cos(j)*d,Math.sin(j)*g,0,-Math.sin(j)*d,Math.cos(j)*g,0,h,i,1]}}}function u(a,b,c,d){d?s(a,b,c):t(a,b)}function v(a){var b=a.materials,c=b[a.userassets[0]];if(c){var d=c.definition;return"PrismLayered"==d||"PrismMetal"==d||"PrismOpaque"==d||"PrismTransparent"==d||"PrismWood"==d}return!1}function w(a,b){var c=new THREE.MeshPhongMaterial;c.packedNormals=!0,c.textureMaps={};var d=a.values,e=d.diffuse;if(e)if(Array.isArray(e))c.color=new THREE.Color(e[0],e[1],e[2]);else if("string"==typeof e){c.color=new THREE.Color(1,1,1);var f={};f.mapName="map";var g=b.gltf.textures[e];f.uri=g.source,f.flipY=!1,c.textureMaps[f.mapName]=f}var h=d.specular;return h&&(c.specular=new THREE.Color(h[0],h[1],h[2])),d.shininess&&(c.shininess=d.shininess),c.reflectivity=0,c}var x,y=c(29),z={MilliMeter:1e3,mm:1e3,8206:1e3,DeciMeter:10,dm:10,8204:10,CentiMeter:100,cm:100,8205:100,Meter:1,m:1,8193:1,KiloMeter:.001,km:.001,8201:.001,Inch:39.37008,in:39.37008,8214:39.37008,Foot:3.28084,ft:3.28084,8215:3.28084,Mile:62137e-8,mi:62137e-8,8225:62137e-8,Yard:1.09361,yard:1.09361,8221:1.09361};a.exports={convertMaterial:r,convertTexture:u,isPrismMaterial:v,convertMaterialGltf:w}},function(a,b,c){var d=c(2),e={uniforms:{tDiffuse:{type:"t",value:null},cameraNear:{type:"f",value:1},cameraInvNearFar:{type:"f",value:100},resolution:{type:"v2",value:new THREE.Vector2(1/512,1/512)}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","uniform float cameraNear;","uniform float cameraInvNearFar;",d.PackDepthShaderChunk,"void main() {","vec2 ssP = vec2(gl_FragCoord.xy);","ssP = ssP * 2.0 + mod(ssP, 2.0);","ssP = (ssP + 0.5) * resolution * 0.5;","float depth = texture2D(tDiffuse, ssP).z;","if (depth != 0.0)","depth = (depth + cameraNear) * cameraInvNearFar;","gl_FragColor = packDepth(depth);","}"].join("\n")},f={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/512,1/512)}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","void main() {","vec2 ssP = vec2(gl_FragCoord.xy);","ssP = ssP * 2.0 + mod(ssP, 2.0);","ssP = (ssP + 0.5) * resolution * 0.5;","gl_FragColor = texture2D(tDiffuse, ssP);","}"].join("\n")};a.exports={SAOMinifyFirstShader:e,SAOMinifyShader:f}},function(a,b){var c=[{id:"SOLID",name:"Solid",ascii_art:"_______________________________________",def:[1]},{id:"BORDER",name:"Border",ascii_art:"__ __ . __ __ . __ __ . __ __ . __ __ .",def:[.5,-.25,.5,-.25,0,-.25]},{id:"BORDER2",name:"Border (.5x)",ascii_art:"__ __ . __ __ . __ __ . __ __ . __ __ .",def:[.25,-.125,.25,-.125,0,-.125]},{id:"BORDERX2",name:"Border (2x)",ascii_art:"____  ____  .  ____  ____  .  ___",def:[1,-.5,1,-.5,0,-.5]},{id:"CENTER",name:"Center",ascii_art:"____ _ ____ _ ____ _ ____ _ ____ _ ____",def:[1.25,-.25,.25,-.25]},{id:"CENTER2",name:"Center (.5x)",ascii_art:"___ _ ___ _ ___ _ ___ _ ___ _ ___",def:[.75,-.125,.125,-.125]},{id:"CENTERX2",name:"Center (2x)",ascii_art:"________  __  ________  __  _____",def:[2.5,-.5,.5,-.5]},{id:"DASHDOT",name:"Dash dot",ascii_art:"__ . __ . __ . __ . __ . __ . __ . __",def:[.5,-.25,0,-.25]},{id:"DASHDOT2",name:"Dash dot (.5x)",ascii_art:"_._._._._._._._._._._._._._._.",def:[.25,-.125,0,-.125]},{id:"DASHDOTX2",name:"Dash dot (2x)",ascii_art:"____  .  ____  .  ____  .  ___",def:[1,-.5,0,-.5]},{id:"DASHED",name:"Dashed",ascii_art:"__ __ __ __ __ __ __ __ __ __ __ __ __ _",def:[.5,-.25]},{id:"DASHED2",name:"Dashed (.5x)",ascii_art:"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",def:[.25,-.125]},{id:"DASHEDX2",name:"Dashed (2x)",ascii_art:"____  ____  ____  ____  ____  ___",def:[1,-.5]},{id:"DIVIDE",name:"Divide",ascii_art:"____ . . ____ . . ____ . . ____ . . ____",def:[.5,-.25,0,-.25,0,-.25]},{id:"DIVIDE2",name:"Divide (.5x)",ascii_art:"__..__..__..__..__..__..__..__.._",def:[.25,-.125,0,-.125,0,-.125]},{id:"DIVIDEX2",name:"Divide (2x)",ascii_art:"________  .  .  ________  .  .  _",def:[1,-.5,0,-.5,0,-.5]},{id:"DOT",name:"Dot",ascii_art:". . . . . . . . . . . . . . . . . . . . . . . .",def:[0,-.25]},{id:"DOT2",name:"Dot (.5x)",ascii_art:"........................................",def:[0,-.125]},{id:"DOTX2",name:"Dot (2x)",ascii_art:".  .  .  .  .  .  .  .  .  .  .  .  .  .",def:[0,-.5]},{id:"HIDDEN",name:"Hidden",ascii_art:"__ __ __ __ __ __ __ __ __ __ __ __ __ __",def:[.25,-.125]},{id:"HIDDEN2",name:"Hidden (.5x)",ascii_art:"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",def:[.125,-.0625]},{id:"HIDDENX2",name:"Hidden (2x)",ascii_art:"____ ____ ____ ____ ____ ____ ____",def:[.5,-.25]},{id:"PHANTOM",name:"Phantom",ascii_art:"______  __  __  ______  __  __  ______",def:[1.25,-.25,.25,-.25,.25,-.25]},{id:"PHANTOM2",name:"Phantom (.5x)",ascii_art:"___ _ _ ___ _ _ ___ _ _ ___ _ _",def:[.625,-.125,.125,-.125,.125,-.125]},{id:"PHANTOMX2",name:"Phantom (2x)",ascii_art:"____________    ____    ____   _",def:[2.5,-.5,.5,-.5,.5,-.5]},{id:"ACAD_ISO02W100",name:"ISO dash",ascii_art:"__ __ __ __ __ __ __ __ __ __ __ __ __",def:[12,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO03W100",name:"ISO dash space",ascii_art:"__    __    __    __    __    __",def:[12,-18],pen_width:1,unit:"mm"},{id:"ACAD_ISO04W100",name:"ISO long-dash dot",ascii_art:"____ . ____ . ____ . ____ . _",def:[24,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO05W100",name:"ISO long-dash double-dot",ascii_art:"____ .. ____ .. ____ .",def:[24,-3,.5,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO06W100",name:"ISO long-dash triple-dot",ascii_art:"____ ... ____ ... ____",def:[24,-3,.5,-3,.5,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO07W100",name:"ISO dot",ascii_art:". . . . . . . . . . . . . . . . . . . .",def:[.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO08W100",name:"ISO long-dash short-dash",ascii_art:"____ __ ____ __ ____ _",def:[24,-3,6,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO09W100",name:"ISO long-dash double-short-dash",ascii_art:"____ __ __ ____",def:[24,-3,6,-3,6,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO10W100",name:"ISO dash dot",ascii_art:"__ . __ . __ . __ . __ . __ . __ . ",def:[12,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO11W100",name:"ISO double-dash dot",ascii_art:"__ __ . __ __ . __ __ . __ _",def:[12,-3,12,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO12W100",name:"ISO dash double-dot",ascii_art:"__ . . __ . . __ . . __ . .",def:[12,-3,.5,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO13W100",name:"ISO double-dash double-dot",ascii_art:"__ __ . . __ __ . . _",def:[12,-3,12,-3,.5,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO14W100",name:"ISO dash triple-dot",ascii_art:"__ . . . __ . . . __ . . . _",def:[12,-3,.5,-3,.5,-3,.5,-3],pen_width:1,unit:"mm"},{id:"ACAD_ISO15W100",name:"ISO double-dash triple-dot",ascii_art:"__ __ . . . __ __ . .",def:[12,-3,12,-3,.5,-3,.5,-3,.5,-3],pen_width:1,unit:"mm"},{id:"FENCELINE1",name:"Fenceline circle",ascii_art:"----0-----0----0-----0----0-----0--",def:[.25,-.1,["CIRC1","ltypeshp.shx","x=-.1","s=.1"],-.1,1]},{id:"FENCELINE2",name:"Fenceline square",ascii_art:"----[]-----[]----[]-----[]----[]---",def:[.25,-.1,["BOX","ltypeshp.shx","x=-.1","s=.1"],-.1,1]},{id:"TRACKS",name:"Tracks",ascii_art:"-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-",def:[.15,["TRACK1","ltypeshp.shx","s=.25"],.15]},{id:"BATTING",name:"Batting",ascii_art:"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS",def:[1e-4,-.1,["BAT","ltypeshp.shx","x=-.1","s=.1"],-.2,["BAT","ltypeshp.shx","r=180","x=.1","s=.1"],-.1]},{id:"HOT_WATER_SUPPLY",name:"Hot water supply",ascii_art:"---- HW ---- HW ---- HW ----",def:[.5,-.2,["HW","STANDARD","S=.1","R=0.0","X=-0.1","Y=-.05"],-.2]},{id:"GAS_LINE",name:"Gas line",ascii_art:"----GAS----GAS----GAS----GAS----GAS----GAS--",def:[.5,-.2,["GAS","STANDARD","S=.1","R=0.0","X=-0.1","Y=-.05"],-.25]},{id:"ZIGZAG",name:"Zig zag",ascii_art:"/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/",def:[1e-4,-.2,["ZIG","ltypeshp.shx","x=-.2","s=.2"],-.4,["ZIG","ltypeshp.shx","r=180","x=.2","s=.2"],-.2]}],d=function(){for(var a=c.length,b=0,d=0;d<a;d++){var e=c[d];e.def.length>b&&(b=e.def.length)}for(var f=b+3,g=a,h=1;h<f;)h*=2;for(f=h,h=1;h<g;)h*=2;g=h;for(var i=new Uint8Array(f*g),j=0;j<a;j++){for(var k=j*f,e=c[j],l=96,m=e.unit&&"mm"==e.unit?1/25.4:1,n=e.pen_width||0,o=e.def,p=0,d=0;d<o.length;d++){var q=Math.abs(o[d]),r=q<=.5*n;r&&(q=0);var s=0|q*l*m;p+=s,i[k+d+2]=s?s:1}i[k]=p%256,i[k+1]=p/256,i[k+o.length+2]=0}var t=new THREE.DataTexture(i,f,g,THREE.LuminanceFormat,THREE.UnsignedByteType,THREE.UVMapping,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.NearestFilter,THREE.NearestFilter,0);return t.generateMipmaps=!1,t.flipY=!1,t.needsUpdate=!0,t};a.exports={LineStyleDefs:c,CreateLinePatternTexture:d}},function(a,b){var c=new Float32Array(1),d=new Uint32Array(c.buffer),e=new Uint16Array(1),f=new Uint16Array(1),g=function(a){c[0]=a;var b=d[0],g=0;if(0===(2147483647&b))f[g++]=b>>16;else{var h=2147483648&b,i=2139095040&b,j=8388607&b;if(0===i)f[g++]=h>>16;else if(2139095040==i)0===j?f[g++]=h>>16|31744:f[g++]=65024;else{var k,l,m=h>>16,n=(0|i>>23)-127+15;n>=31?f[g++]=h>>16|31744:n<=0?(14-n>24?k=0:(j|=8388608,k=j>>14-n,e[0]=k,k=e[0],j>>13-n&1&&(k+=1)),f[g++]=m|k):(l=n<<10,e[0]=l,l=e[0],k=j>>13,e[0]=k,k=e[0],4096&j?f[g++]=(m|l|k)+1:f[g++]=m|l|k)}}return f[0]},h=function(a){var b,e=65535&a;if(0===(32767&e))b=e<<16;else{var f=32768&e,g=31744&e,h=1023&e;if(0===g){var i=-1;do i++,h<<=1;while(0===(1024&h));var j=f<<16,k=(g<<16>>26)-15+127-i,l=k<<23,m=(1023&h)<<13;b=j|l|m}else 31744==g?b=0===h?f<<16|2139095040:4290772992:(j=f<<16,k=(g<<16>>26)-15+127,l=k<<23,m=h<<13,b=j|l|m)}return d[0]=b,c[0]},i=59390,j=function(a){if(a>i-1||a<0)return THREE.log("out of range"),g(NaN);if(0===a)return 0;var b=!1;a>i/2-1&&(b=!0,a-=i/2-1);var c=0|Math.abs(a/1024),d=Math.pow(2,c-13),e=d+(a-1024*c)*d/1024;return b&&(e=-e),g(e)},k=function(a){if(0===a)return 0;var b=h(a),c=!1;b<0&&(c=!0,b=-b);var d=0|Math.floor(Math.log(b)/Math.log(2)),e=Math.pow(2,d),f=(b-e)/e*1024+1024*(d+13);return c&&(f+=i/2-1),f},l=function(){for(var a=[-1/255,-.17,-75,-1789,-.005],b=0;b<a.length;b++)THREE.log("input",a[b],"encoded",g(a[b]),"decoded",h(g(a[b])));for(var b=0;b<i;b++){var c=k(j(b));c!==b&&THREE.log("Roundtrip failed for",b,c)}};a.exports={FloatToHalf:g,HalfToFloat:h,IntToHalf:j,HalfToInt:k,HalfTest:l}},function(a,b){function c(a,b,c){this.nodeAccess=a,this.maxDepth=c,this.objectCount=b,this.numHidden=0,this.numOff=0}var d=2,e=3,f=4,g=5,h=7,i=536870912,j=1073741824,k=2147483648,l={LEAF_OBJECT:0,FIRST_OBJECT:1,LAST_OBJECT:2};c.prototype.setFlagNode=function(a,b,c){var d=this.nodeAccess.getNodeFlags(a);return!!(d&b)!=c&&(c?this.nodeAccess.setNodeFlags(a,d|b):this.nodeAccess.setNodeFlags(a,d&~b),!0)},c.prototype.setFlagGlobal=function(a,b){var c=this.nodeAccess,d=0,e=c.numNodes;if(b)for(;d<e;d++)c.setNodeFlags(d,c.getNodeFlags(d)|a);else for(var f=~a;d<e;d++)c.setNodeFlags(d,c.getNodeFlags(d)&f)},c.prototype.setNodeOff=function(a,b){var c=this.setFlagNode(a,j,b);return c&&(b?this.numOff++:this.numOff--),c},c.prototype.isNodeOff=function(a){return!!(this.nodeAccess.getNodeFlags(a)&j)},c.prototype.setNodeHidden=function(a,b){var c=this.setFlagNode(a,k,b);return c&&(b?this.numHidden++:this.numHidden--),c},c.prototype.isNodeHidden=function(a){return!!(this.nodeAccess.getNodeFlags(a)&k)},c.prototype.getNodeType=function(a){return this.nodeAccess.getNodeFlags(a)&h},c.prototype.isNodeSelectable=function(a){return!(this.nodeAccess.getNodeFlags(a)&i)},c.prototype.getNodeParentId=function(a){return this.nodeAccess.getParentId(a)},c.prototype.getRootId=function(){return this.nodeAccess.rootId},c.prototype.getNodeName=function(a){return this.nodeAccess.name(a)},c.prototype.getChildCount=function(a){return this.nodeAccess.getNumChildren(a)},c.prototype.getNodeBox=function(a,b){this.nodeAccess.getNodeBox(a,b)},c.prototype.enumNodeFragments=function(a,b,c){function d(a){f.nodeAccess.enumNodeFragments(a,b),c&&f.enumNodeChildren(a,function(a){d(a)})}var e;"number"==typeof a?e=a:a&&(e=a.dbId);var f=this;d(e)},c.prototype.enumNodeChildren=function(a,b,c){function d(a){f.nodeAccess.enumNodeChildren(a,function(a){b(a),c&&d(a)})}var e;"number"==typeof a?e=a:a&&(e=a.dbId);var f=this;c&&b(e),d(e)},c.prototype.findNodeForSelection=function(a,b){if(b===l.LEAF_OBJECT)return a;var c,h,i=a;if(b===l.FIRST_OBJECT){var j=[];for(c=a;c;)j.push(c),c=this.getNodeParentId(c);for(var k=j.length-1;k>=0;k--)if(h=this.getNodeType(j[k]),h!==g&&h!==d&&h!==e){i=j[k];break}}else if(b===l.LAST_OBJECT)for(c=a;c;){if(h=this.getNodeType(c),h===f){i=c;break}c=this.getNodeParentId(c)}return i},a.exports={InstanceTree:c,SelectionMode:l}},function(a,b){function c(a,b){this.nodes=[],this.nextNode=0,this.children=[],this.nextChild=0,this.dbIdToIndex={},this.names=[],this.s2i={},this.strings=[],this.nameSuffixes=[],this.getIndex(0)}function d(a){var b=new Int32Array(a.length);return b.set(a),b}function e(a,b,c){this.nodes=a.nodes,this.children=a.children,this.dbIdToIndex=a.dbIdToIndex,this.names=a.names,this.nameSuffixes=a.nameSuffixes,this.strings=a.strings,this.rootId=b,this.numNodes=this.nodes.length/f,this.visibleIds=null,this.nodeBoxes=c||new Float32Array(6*this.numNodes)}var f=5,g=1,h=2,i=3,j=4;c.prototype.getIndex=function(a){var b=this.dbIdToIndex[a];if(b)return b;b=this.nextNode++,this.nodes.push(a);for(var c=1;c<f;c++)this.nodes.push(0);return this.dbIdToIndex[a]=b,b},c.prototype.setNode=function(a,b,c,d,e,k){var l=this.getIndex(a),m=l*f;this.nodes[m+g]=b,this.nodes[m+h]=this.nextChild,this.nodes[m+i]=k?-e.length:e.length,this.nodes[m+j]=d;for(var n=0;n<e.length;n++)this.children[this.nextChild++]=k?e[n]:this.getIndex(e[n]);this.nextChild>this.children.length&&console.error("Child index out of bounds -- should not happen"),this.processName(l,c)},c.prototype.processName=function(a,b){var c,d,e=-1,f=-1;if(b&&(f=b.lastIndexOf("]"),e=b.lastIndexOf("["),e!==-1&&f!==-1||(e=b.lastIndexOf(":"),f=b.length)),e>=0&&f>e){c=b.slice(0,e+1);var g=b.slice(e+1,f);d=parseInt(g,10),d&&d+""===g||(c=b,d=0)}else c=b,d=0;var h=this.s2i[c];void 0===h&&(this.strings.push(c),h=this.strings.length-1,this.s2i[c]=h),this.names[a]=h,this.nameSuffixes[a]=d},c.prototype.flatten=function(a,b,c,e,f,g){this.nodes=d(this.nodes),this.children=d(this.children),this.names=d(this.names),this.nameSuffixes=d(this.nameSuffixes),this.s2i=null},e.prototype.getNumNodes=function(a){return this.numNodes},e.prototype.getIndex=function(a){return this.dbIdToIndex[a]},e.prototype.name=function(a){var b=this.dbIdToIndex[a],c=this.strings[this.names[b]],d=this.nameSuffixes[b];if(d){var e=c.charAt(c.length-1);return"["===e?c+d+"]":c+d}return c},e.prototype.getParentId=function(a){return this.nodes[this.dbIdToIndex[a]*f+g]},e.prototype.getNodeFlags=function(a){return this.nodes[this.dbIdToIndex[a]*f+j]},e.prototype.setNodeFlags=function(a,b){this.nodes[this.dbIdToIndex[a]*f+j]=b},e.prototype.getNumChildren=function(a){var b=this.nodes[this.dbIdToIndex[a]*f+i];return b>0?b:0},e.prototype.getNumFragments=function(a){var b=this.nodes[this.dbIdToIndex[a]*f+i];return b<0?-b:0},e.prototype.getNodeBox=function(a,b){for(var c=6*this.getIndex(a),d=0;d<6;d++)b[d]=this.nodeBoxes[c+d]},e.prototype.getVisibleIds=function(){return this.visibleIds||(this.visibleIds=Object.keys(this.dbIdToIndex).map(function(a){return parseInt(a)})),this.visibleIds},e.prototype.enumNodeChildren=function(a,b){var c=this.dbIdToIndex[a],d=this.nodes[c*f+h],e=this.nodes[c*f+i];if(e>0)for(var g=0;g<e;g++){var j=this.nodes[this.children[d+g]*f];b(j,a,c)}},e.prototype.enumNodeFragments=function(a,b){var c=this.dbIdToIndex[a],d=this.nodes[c*f+h],e=this.nodes[c*f+i];if(e<0){e=-e;for(var g=0;g<e;g++)b(this.children[d+g],a,c)}},a.exports={InstanceTreeStorage:c,InstanceTreeAccess:e}},function(a,b){function c(a,b){"use strict";b?this.bytes_per_node=32:this.bytes_per_node=36;var c,d;a instanceof ArrayBuffer?(c=a.byteLength/this.bytes_per_node,d=a,this.nodeCount=c):(c=0|a,d=new ArrayBuffer(this.bytes_per_node*c),this.nodeCount=0),this.nodeCapacity=c,this.nodesRaw=d,this.is_lean_node=b,this.node_stride=this.bytes_per_node/4,this.node_stride_short=this.bytes_per_node/2,this.nodesF=new Float32Array(this.nodesRaw),this.nodesI=new Int32Array(this.nodesRaw),this.nodesS=new Uint16Array(this.nodesRaw)}function d(a,b){this.boxes=a.boxes,this.polygonCounts=a.polygonCounts,this.materials=a.materials,this.materialDefs=b,this.prim_count=a.length,this.frags_per_leaf_node=-1,this.frags_per_inner_node=-1,this.nodes=null,this.work_buf=new ArrayBuffer(4*this.prim_count),this.sort_prims=new Int32Array(this.work_buf),this.primitives=new Int32Array(this.prim_count),this.centroids=new Float32Array(f*this.prim_count),this.boxv_o=new Float32Array(6),this.boxc_o=new Float32Array(6),this.boxv_t=new Float32Array(6),this.boxc_t=new Float32Array(6),this.recursion_stack=[]}c.prototype.setLeftChild=function(a,b){this.nodesI[a*this.node_stride+6]=b},c.prototype.getLeftChild=function(a){return this.nodesI[a*this.node_stride+6]},c.prototype.setPrimStart=function(a,b){this.is_lean_node?this.nodesI[a*this.node_stride+6]=b:this.nodesI[a*this.node_stride+8]=b},c.prototype.getPrimStart=function(a){return this.is_lean_node?this.nodesI[a*this.node_stride+6]:this.nodesI[a*this.node_stride+8]},c.prototype.setPrimCount=function(a,b){this.nodesS[a*this.node_stride_short+14]=b},c.prototype.getPrimCount=function(a){return this.nodesS[a*this.node_stride_short+14]},c.prototype.setFlags=function(a,b,c,d){this.nodesS[a*this.node_stride_short+15]=d<<3|c<<2|3&b},c.prototype.getFlags=function(a){return this.nodesS[a*this.node_stride_short+15]},c.prototype.setBox0=function(a,b){var c=a*this.node_stride,d=this.nodesF;d[c]=b[0],d[c+1]=b[1],d[c+2]=b[2],d[c+3]=b[3],d[c+4]=b[4],d[c+5]=b[5]},c.prototype.getBoxThree=function(a,b){var c=a*this.node_stride,d=this.nodesF;b.min.x=d[c],b.min.y=d[c+1],b.min.z=d[c+2],b.max.x=d[c+3],b.max.y=d[c+4],b.max.z=d[c+5]},c.prototype.setBoxThree=function(a,b){var c=a*this.node_stride,d=this.nodesF;d[c]=b.min.x,d[c+1]=b.min.y,d[c+2]=b.min.z,d[c+3]=b.max.x,d[c+4]=b.max.y,d[c+5]=b.max.z},c.prototype.makeEmpty=function(a){var b=a*this.node_stride,c=this.nodesI;c[b+6]=-1,c[b+7]=0,this.is_lean_node||(c[b+8]=-1)},c.prototype.realloc=function(a){if(this.nodeCount+a>this.nodeCapacity){var b=0|3*this.nodeCapacity/2;b<this.nodeCount+a&&(b=this.nodeCount+a);var c=new ArrayBuffer(b*this.bytes_per_node),d=new Int32Array(c);d.set(this.nodesI),this.nodeCapacity=b,this.nodesRaw=c,this.nodesF=new Float32Array(c),this.nodesI=d,this.nodesS=new Uint16Array(c)}},c.prototype.nextNodes=function(a){this.realloc(a);var b=this.nodeCount;this.nodeCount+=a;for(var c=0;c<a;c++)this.makeEmpty(b+c);return b},c.prototype.getRawData=function(){return this.nodesRaw.slice(0,this.nodeCount*this.bytes_per_node)};var e=6,f=3,g=1e-5,h=1e-5,i=15,j=16,k=function(){"use strict";function a(a,b,c,d){a[b]=.5*(c[d]+c[d+3]),a[b+1]=.5*(c[d+1]+c[d+4]),a[b+2]=.5*(c[d+2]+c[d+5])}function b(a,b,c){a[0]>b[c]&&(a[0]=b[c]),a[3]<b[c]&&(a[3]=b[c]),a[1]>b[c+1]&&(a[1]=b[c+1]),a[4]<b[c+1]&&(a[4]=b[c+1]),a[2]>b[c+2]&&(a[2]=b[c+2]),a[5]<b[c+2]&&(a[5]=b[c+2])}function c(a,b,c){a[0]>b[c]&&(a[0]=b[c]),a[1]>b[c+1]&&(a[1]=b[c+1]),a[2]>b[c+2]&&(a[2]=b[c+2]),a[3]<b[c+3]&&(a[3]=b[c+3]),a[4]<b[c+4]&&(a[4]=b[c+4]),a[5]<b[c+5]&&(a[5]=b[c+5])}function d(a,b){a[0]>b[0]&&(a[0]=b[0]),a[1]>b[1]&&(a[1]=b[1]),a[2]>b[2]&&(a[2]=b[2]),a[3]<b[3]&&(a[3]=b[3]),a[4]<b[4]&&(a[4]=b[4]),a[5]<b[5]&&(a[5]=b[5])}function e(a,b,c,d){for(var e=0;e<3;e++)a[b+e]=c[d+3+e]-c[d+e]}function f(a,b){a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5]}function k(a){a[0]=w,a[1]=w,a[2]=w,a[3]=-w,a[4]=-w,a[5]=-w}function l(a,b){var c=a[b+3]-a[b],d=a[b+4]-a[b+1],e=a[b+5]-a[b+2];return c<0||d<0||e<0?0:2*(c*d+d*e+e*c)}function m(a){var b=a[3]-a[0],c=a[4]-a[1],d=a[5]-a[2];return b<0||c<0||d<0?0:2*(b*c+c*d+d*b)}function n(){this.vb_left=new Float32Array(6),this.vb_right=new Float32Array(6),this.cb_left=new Float32Array(6),this.cb_right=new Float32Array(6),this.num_left=0,this.best_split=-1,this.best_cost=-1,this.num_bins=-1}function o(){this.box_bbox=new Float32Array(6),this.box_centroid=new Float32Array(6),this.num_prims=0}function p(){this.BL=new Float32Array(6),this.CL=new Float32Array(6),this.NL=0,this.AL=0}function q(a,d,e,f,g,i,j){for(var k=a.centroids,l=a.primitives,m=a.boxes,n=j*(1-h)/i[f],o=g[f],p=a.sort_prims,q=d;q<=e;q++){var r=0|l[q],s=n*(k[3*r+f]-o),t=0|s;t<0?t=0:t>=j&&(t=j-1),p[q]=t,y[t].num_prims++,c(y[t].box_bbox,m,6*r),b(y[t].box_centroid,k,3*r)}}function r(a,b,c,e,g,h,i){if(h[e]<a.scene_epsilon)return void(i.best_cost=1/0);var k=j;k>c-b+1&&(k=c-b+1);var l;for(l=0;l<k;l++)y[l].reset();for(l=0;l<k-1;l++)z[l].reset();i.num_bins=k,q(a,b,c,e,g,h,k),f(z[0].BL,y[0].box_bbox),f(z[0].CL,y[0].box_centroid),z[0].AL=m(z[0].BL),z[0].NL=y[0].num_prims;var n;for(l=1;l<k-1;l++){n=y[l];var o=z[l];f(o.BL,z[l-1].BL),d(o.BL,n.box_bbox),o.AL=m(o.BL),f(o.CL,z[l-1].CL),d(o.CL,n.box_centroid),o.NL=z[l-1].NL+n.num_prims}l=k-1,f(A,y[l].box_bbox),f(B,y[l].box_centroid);var p=m(A),r=y[l].num_prims,s=l,t=p*r+z[l-1].AL*z[l-1].NL;for(f(i.vb_right,A),f(i.cb_right,y[l].box_centroid),f(i.vb_left,z[l-1].BL),f(i.cb_left,z[l-1].CL),i.num_left=z[l-1].NL,l-=1;l>=1;l--){n=y[l],d(A,n.box_bbox),d(B,n.box_centroid),p=m(A),r+=n.num_prims;var u=p*r+z[l-1].AL*z[l-1].NL;u<=t&&(t=u,s=l,f(i.vb_right,A),f(i.cb_right,B),f(i.vb_left,z[l-1].BL),f(i.cb_left,z[l-1].CL),i.num_left=z[l-1].NL)}i.best_split=s,i.best_cost=t}function s(a,b,c,d,e,f,g){var h,i,j=a.primitives,k=a.sort_prims,l=0,m=0|b,n=0|g.best_split;for(h=b;h<=c;h++){var o=0|j[h],p=k[h];p<n?j[m++]=o:k[l++]=o}for(i=0;i<l;i++)j[m+i]=k[i];
}function t(a,c,d,f,g,h,i,j){var l=a.primitives,m=a.centroids,n=g-f+1;n>a.frags_per_inner_node&&(n=a.frags_per_inner_node),n>j&&(n=j),c.setPrimStart(d,f),c.setPrimCount(d,n),f+=n,k(h);for(var o=f;o<=g;o++)b(h,m,3*l[o]);e(i,0,h,0);var p=0;return i[1]>i[0]&&(p=1),i[2]>i[p]&&(p=2),p}function u(a,b,c,d,f,g,h,j){e(C,0,g,0);var k=a.nodes,l=h?a.frags_per_leaf_node_transparent:a.frags_per_leaf_node,m=h?a.frags_per_inner_node_transparent:a.frags_per_inner_node,o=a.max_polys_per_node,p=0;C[1]>C[0]&&(p=1),C[2]>C[p]&&(p=2),k.setBox0(b,f);var q=0,u=0;if(a.polygonCounts)for(var v=c;v<=d&&(q+=a.polygonCounts[a.primitives[v]],u++,!(q>o));v++);var w=d-c+1,x=w<=l&&q<o||1===w;if(x||j>i||C[p]<a.scene_epsilon)return k.setLeftChild(b,-1),k.setPrimStart(b,c),k.setPrimCount(b,d-c+1),void k.setFlags(b,0,0,h?1:0);m&&(p=t(a,k,b,c,d,g,C,u),c+=k.getPrimCount(b));var y=new n;if(r(a,c,d,p,g,C,y),y.num_bins<0)return void k.setPrimCount(b,k.getPrimCount(b)+d-c+1);s(a,c,d,p,g,C,y);var z=k.nextNodes(2),A=.5*(y.vb_left[3+p]+y.vb_left[p]),B=.5*(y.vb_right[3+p]+y.vb_right[p]);k.setFlags(b,p,A<B?0:1,h?1:0),k.setLeftChild(b,z),a.recursion_stack.push([a,z+1,c+y.num_left,d,y.vb_right,y.cb_right,h,j+1]),a.recursion_stack.push([a,z,c,c+y.num_left-1,y.vb_left,y.cb_left,h,j+1])}function v(d){var f=d.boxv_o,h=d.boxc_o,i=d.boxv_t,j=d.boxc_t;k(f),k(h),k(i),k(j);for(var l=d.centroids,m=d.boxes,n=0,o=d.prim_count;n<o;n++)a(l,3*n,m,6*n),n>=d.first_transparent?(b(j,l,3*n),c(i,m,6*n)):(b(h,l,3*n),c(f,m,6*n));e(C,0,d.boxv_o,0);var p=Math.max(C[0],C[1],C[2]);d.scene_epsilon=g*p}var w=1/0;n.prototype.reset=function(){this.num_left=0,this.best_split=-1,this.best_cost=-1,this.num_bins=-1},o.prototype.reset=function(){this.num_prims=0,k(this.box_bbox),k(this.box_centroid)},p.prototype.reset=function(){this.NL=0,this.AL=0,k(this.BL),k(this.CL)};var x,y=[];for(x=0;x<j;x++)y.push(new o);var z=[];for(x=0;x<j-1;x++)z.push(new p);var A=new Float32Array(6),B=new Float32Array(6),C=new Float32Array(3);return{bvh_subdivide:u,compute_boxes:v,box_area:l}}();d.prototype.sortPrimitives=function(){var a,b,c=new Float32Array(this.work_buf),d=this.materialDefs,f=this.materials,g=this.primitives,h=0;for(a=0,b=this.prim_count;a<b;a++){g[a]=a;var i=!(!d||!d[f[a]])&&d[f[a]].transparent;i&&h++,j?(c[a]=k.box_area(this.boxes,e*a),i&&(c[a]=-c[a])):c[a]=i?-1:1}var j=!1;if(j)Array.prototype.sort.call(this.primitives,function(a,b){return c[b]-c[a]});else if(h&&h<this.prim_count){var l=new Int32Array(h),m=0,n=0;for(a=0,b=this.prim_count;a<b;a++)c[a]>=0?g[m++]=g[a]:l[n++]=g[a];g.set(l,this.prim_count-h)}this.first_transparent=this.prim_count-h},d.prototype.build=function(a){function b(b,c){a.hasOwnProperty(b)?e[b]=a[b]:e[b]=c}var d=a&&!!a.useSlimNodes,e=this;if(d)b("frags_per_leaf_node",1),b("frags_per_inner_node",0),b("frags_per_leaf_node_transparent",1),b("frags_per_inner_node_transparent",0),b("max_polys_per_node",1/0);else{var f=a.isWeakDevice?.5:1;b("frags_per_leaf_node",0|32*f),b("frags_per_inner_node",0|this.frags_per_leaf_node),b("frags_per_leaf_node_transparent",this.frags_per_leaf_node),b("frags_per_inner_node_transparent",0),b("max_polys_per_node",0|1e4*f)}if(this.nodes&&this.nodes.is_lean_node==d)this.nodes.nodeCount=0;else{for(var g=this.prim_count/this.frags_per_leaf_node,h=1;h<g;)h*=2;this.nodes=new c(h,!!a&&a.useSlimNodes)}this.sortPrimitives(),k.compute_boxes(this);var i=this.nodes.nextNodes(2);k.bvh_subdivide(this,i,0,this.first_transparent-1,this.boxv_o,this.boxc_o,!1,0);for(var j;this.recursion_stack.length;)j=this.recursion_stack.pop(),k.bvh_subdivide(j[0],j[1],j[2],j[3],j[4],j[5],j[6],j[7]);for(k.bvh_subdivide(this,i+1,this.first_transparent,this.prim_count-1,this.boxv_t,this.boxc_t,!0,0);this.recursion_stack.length;)j=this.recursion_stack.pop(),k.bvh_subdivide(j[0],j[1],j[2],j[3],j[4],j[5],j[6],j[7])},a.exports={NodeArray:c,BVHBuilder:d}}]);"undefined"!=typeof module&&module.exports&&(module.exports=WGS);